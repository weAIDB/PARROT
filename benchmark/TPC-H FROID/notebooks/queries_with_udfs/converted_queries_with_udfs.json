[
    {
        "queryid": 1,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT L_RETURNFLAG, L_LINESTATUS, SUM(L_QUANTITY) AS SUM_QTY, SUM(L_EXTENDEDPRICE) AS SUM_BASE_PRICE, SUM(dbo.discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS SUM_DISC_PRICE, SUM(dbo.discount_taxprice(L_EXTENDEDPRICE, L_DISCOUNT, L_TAX)) AS SUM_CHARGE, AVG(L_QUANTITY) AS AVG_QTY, AVG(L_EXTENDEDPRICE) AS AVG_PRICE, AVG(L_DISCOUNT) AS AVG_DISC, COUNT(*) AS COUNT_ORDER FROM LINEITEM WHERE dbo.isShippedBefore(L_SHIPDATE, -90, '1998-12-01') = 1 GROUP BY L_RETURNFLAG, L_LINESTATUS ORDER BY L_RETURNFLAG, L_LINESTATUS;",
        "sqlglot converted sql query": "SELECT L_RETURNFLAG, L_LINESTATUS, SUM(L_QUANTITY) AS SUM_QTY, SUM(L_EXTENDEDPRICE) AS SUM_BASE_PRICE, SUM(discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS SUM_DISC_PRICE, SUM(discount_taxprice(L_EXTENDEDPRICE, L_DISCOUNT, L_TAX)) AS SUM_CHARGE, AVG(L_QUANTITY) AS AVG_QTY, AVG(L_EXTENDEDPRICE) AS AVG_PRICE, AVG(L_DISCOUNT) AS AVG_DISC, COUNT(*) AS COUNT_ORDER FROM LINEITEM WHERE isShippedBefore(L_SHIPDATE, -90, '1998-12-01') = 1 GROUP BY L_RETURNFLAG, L_LINESTATUS ORDER BY L_RETURNFLAG NULLS FIRST, L_LINESTATUS NULLS FIRST",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT L_RETURNFLAG, L_LINESTATUS, SUM(L_QUANTITY) AS SUM_QTY, SUM(L_EXTENDEDPRICE) AS SUM_BASE_PRICE, SUM(DISCOUNT_PRICE(L_EXTENDEDPRICE, L_DISCOUNT)) AS SUM_DISC_PRICE, SUM(DISCOUNT_TAXPRICE(L_EXTENDEDPRICE, L_DISCOUNT, L_TAX)) AS SUM_CHARGE, AVG(L_QUANTITY) AS AVG_QTY, AVG(L_EXTENDEDPRICE) AS AVG_PRICE, AVG(L_DISCOUNT) AS AVG_DISC, COUNT(*) AS COUNT_ORDER FROM LINEITEM WHERE ISSHIPPEDBEFORE(L_SHIPDATE, -90, '1998-12-01') = 1 GROUP BY L_RETURNFLAG, L_LINESTATUS ORDER BY L_RETURNFLAG NULLS FIRST, L_LINESTATUS NULLS FIRST;",
        "src query result": "\"l_returnflag | l_linestatus |    sum_qty    |    sum_base_price    |    sum_disc_price    |    sum_charge    |   avg_qty   |   avg_price   |   avg_disc   |  count_order\"\n\"-------------+-------------+--------------+---------------------+---------------------+-----------------+-------------+--------------+-------------+--------------\"\n\"A            | F           | 37734107.00   | 566865540.73         | 53758257382.21      | 55909066592.19  | 25.522005   | 38273.129734 | 0.049985    | 1478493\"\n\"N            | F           | 991417.00     | 1487504710.38        | 1413082173.74       | 14696449232.14  | 25.516471   | 38284.467760 | 0.050093    | 38854\"\n\"N            | O           | 74476040.00   | 111701729697.74      | 106118230774.99     | 110367044585.55 | 25.502226   | 38249.117988 | 0.049996    | 2920374\"\n\"R            | F           | 37719753.00   | 56568041380.90       | 53741292921.05      | 55589619477.81  | 25.505793   | 38250.854626 | 0.050009    | 1478870\"\n\"(4 行记录)\"",
        "sqlglot query result": "\" l_returnflag | l_linestatus |   sum_qty   | sum_base_price  | sum_disc_price  |    sum_charge     |       avg_qty       |     avg_price      |        avg_disc        | count_order\"\n\"--------------+--------------+-------------+-----------------+-----------------+-------------------+---------------------+--------------------+------------------------+-------------\"\n\" A            | F            | 37734107.00 |  56586554400.73 |  53758257382.21 |  55909065479.9960 | 25.5220058532573370 | 38273.129734621672 | 0.04998529583839761162 |     1478493\"\n\" N            | F            |   991417.00 |   1487504710.38 |   1413082173.74 |   1469649229.0811 | 25.5164719205229835 | 38284.467760848304 | 0.05009342667421629691 |       38854\"\n\" N            | O            | 74476040.00 | 111701729697.74 | 106118230774.99 | 110367044358.6731 | 25.5022267695849915 | 38249.117988908270 | 0.04999658605370408037 |     2920374\"\n\" R            | F            | 37719753.00 |  56568041380.90 |  53741292921.05 |  55889619365.8084 | 25.5057936126907707 | 38250.854626099657 | 0.05000940583012705647 |     1478870\"",
        "fixed sqlglot query result": "\" l_returnflag | l_linestatus |   sum_qty   | sum_base_price  | sum_disc_price  |    sum_charge     |       avg_qty       |     avg_price      |        avg_disc        | count_order\"\n\"--------------+--------------+-------------+-----------------+-----------------+-------------------+---------------------+--------------------+------------------------+-------------\"\n\" A            | F            | 37734107.00 |  56586554400.73 |  53758257382.21 |  55909065479.9960 | 25.5220058532573370 | 38273.129734621672 | 0.04998529583839761162 |     1478493\"\n\" N            | F            |   991417.00 |   1487504710.38 |   1413082173.74 |   1469649229.0811 | 25.5164719205229835 | 38284.467760848304 | 0.05009342667421629691 |       38854\"\n\" N            | O            | 74476040.00 | 111701729697.74 | 106118230774.99 | 110367044358.6731 | 25.5022267695849915 | 38249.117988908270 | 0.04999658605370408037 |     2920374\"\n\" R            | F            | 37719753.00 |  56568041380.90 |  53741292921.05 |  55889619365.8084 | 25.5057936126907707 | 38250.854626099657 | 0.05000940583012705647 |     1478870\"\n\"(4 行记录)\""
    },
    {
        "queryid": 3,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT TOP 10 L_ORDERKEY, SUM(dbo.discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE, O_ORDERDATE, O_SHIPPRIORITY FROM CUSTOMER, ORDERS, LINEITEM WHERE C_CUSTKEY = O_CUSTKEY AND L_ORDERKEY = O_ORDERKEY AND dbo.q3conditions(C_MKTSEGMENT, O_ORDERDATE, L_SHIPDATE) = 1 GROUP BY L_ORDERKEY, O_ORDERDATE, O_SHIPPRIORITY ORDER BY REVENUE DESC, O_ORDERDATE;",
        "sqlglot converted sql query": "SELECT L_ORDERKEY, SUM(discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE, O_ORDERDATE, O_SHIPPRIORITY FROM CUSTOMER, ORDERS, LINEITEM WHERE C_CUSTKEY = O_CUSTKEY AND L_ORDERKEY = O_ORDERKEY AND q3conditions(C_MKTSEGMENT, O_ORDERDATE, L_SHIPDATE) = 1 GROUP BY L_ORDERKEY, O_ORDERDATE, O_SHIPPRIORITY ORDER BY REVENUE DESC NULLS LAST, O_ORDERDATE NULLS FIRST LIMIT 10",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT L_ORDERKEY, SUM(DISCOUNT_PRICE(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE, O_ORDERDATE, O_SHIPPRIORITY FROM CUSTOMER, ORDERS, LINEITEM WHERE C_CUSTKEY = O_CUSTKEY AND L_ORDERKEY = O_ORDERKEY AND Q3CONDITIONS(C_MKTSEGMENT, O_ORDERDATE, L_SHIPDATE) = 1 GROUP BY L_ORDERKEY, O_ORDERDATE, O_SHIPPRIORITY ORDER BY REVENUE DESC NULLS LAST, O_ORDERDATE NULLS FIRST LIMIT 10;",
        "src query result": "\"l_orderkey |   revenue   | o_orderdate | o_shippriority\"\n\"-----------+-------------+-------------+---------------\"\n\"2456423   | 406181.00   | 1995-03-05  | 0\"\n\"3459600   | 405638.70   | 1995-03-04  | 0\"\n\"492164    | 390324.06   | 1995-02-19  | 0\"\n\"1186320   | 364537.93   | 1995-03-09  | 0\"\n\"2435712   | 378673.06   | 1995-02-26  | 0\"\n\"4878020   | 378376.79   | 1995-03-12  | 0\"\n\"5521732   | 375153.93   | 1995-03-13  | 0\"\n\"2628192   | 373133.31   | 1995-02-22  | 0\"\n\"933600    | 371407.45   | 1995-03-05  | 0\"\n\"2300070   | 367371.14   | 1995-03-13  | 0\"\n\"(10 行记录)\"",
        "sqlglot query result": "\" l_orderkey |  revenue  | o_orderdate | o_shippriority\"\n\"------------+-----------+-------------+----------------\"\n\"    2456423 | 406181.00 | 1995-03-05  |              0\"\n\"    3459808 | 405838.70 | 1995-03-04  |              0\"\n\"     492164 | 390324.06 | 1995-02-19  |              0\"\n\"    1188320 | 384537.93 | 1995-03-09  |              0\"\n\"    2435712 | 378673.06 | 1995-02-26  |              0\"\n\"    4878020 | 378376.79 | 1995-03-12  |              0\"\n\"    5521732 | 375153.93 | 1995-03-13  |              0\"\n\"    2628192 | 373133.31 | 1995-02-22  |              0\"\n\"     993600 | 371407.45 | 1995-03-05  |              0\"\n\"    2300070 | 367371.14 | 1995-03-13  |              0\"\n\"(10 行记录)\"",
        "fixed sqlglot query result": "\" l_orderkey |  revenue  | o_orderdate | o_shippriority\"\n\"------------+-----------+-------------+----------------\"\n\"    2456423 | 406181.00 | 1995-03-05  |              0\"\n\"    3459808 | 405838.70 | 1995-03-04  |              0\"\n\"     492164 | 390324.06 | 1995-02-19  |              0\"\n\"    1188320 | 384537.93 | 1995-03-09  |              0\"\n\"    2435712 | 378673.06 | 1995-02-26  |              0\"\n\"    4878020 | 378376.79 | 1995-03-12  |              0\"\n\"    5521732 | 375153.93 | 1995-03-13  |              0\"\n\"    2628192 | 373133.31 | 1995-02-22  |              0\"\n\"     993600 | 371407.45 | 1995-03-05  |              0\"\n\"    2300070 | 367371.14 | 1995-03-13  |              0\"\n\"(10 行记录)\""
    },
    {
        "queryid": 5,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT N_NAME, SUM(dbo.discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE FROM CUSTOMER, ORDERS, LINEITEM, SUPPLIER, NATION, REGION WHERE C_CUSTKEY = O_CUSTKEY AND L_ORDERKEY = O_ORDERKEY AND L_SUPPKEY = S_SUPPKEY AND C_NATIONKEY = S_NATIONKEY AND S_NATIONKEY = N_NATIONKEY AND N_REGIONKEY = R_REGIONKEY AND dbo.q5Conditions(R_NAME, O_ORDERDATE) = 1 GROUP BY N_NAME ORDER BY REVENUE DESC;",
        "sqlglot converted sql query": "SELECT N_NAME, SUM(discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE FROM CUSTOMER, ORDERS, LINEITEM, SUPPLIER, NATION, REGION WHERE C_CUSTKEY = O_CUSTKEY AND L_ORDERKEY = O_ORDERKEY AND L_SUPPKEY = S_SUPPKEY AND C_NATIONKEY = S_NATIONKEY AND S_NATIONKEY = N_NATIONKEY AND N_REGIONKEY = R_REGIONKEY AND q5Conditions(R_NAME, O_ORDERDATE) = 1 GROUP BY N_NAME ORDER BY REVENUE DESC NULLS LAST",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT N_NAME, SUM(DISCOUNT_PRICE(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE FROM CUSTOMER, ORDERS, LINEITEM, SUPPLIER, NATION, REGION WHERE C_CUSTKEY = O_CUSTKEY AND L_ORDERKEY = O_ORDERKEY AND L_SUPPKEY = S_SUPPKEY AND C_NATIONKEY = S_NATIONKEY AND S_NATIONKEY = N_NATIONKEY AND N_REGIONKEY = R_REGIONKEY AND Q5CONDITIONS(R_NAME, O_ORDERDATE) = 1 GROUP BY N_NAME ORDER BY REVENUE DESC NULLS LAST;",
        "src query result": "\"n_name      |       revenue\"\n\"-----------+-------------------\"\n\"INDONESIA  | 55502041.37\"\n\"VIETNAM    | 55295087.24\"\n\"CHINA      | 53724494.43\"\n\"INDIA      | 52035512.19\"\n\"JAPAN      | 45410175.92\"\n\"(5 行记录)\"",
        "sqlglot query result": "\"          n_name           |   revenue\"\n\"---------------------------+-------------\"\n\" INDONESIA                 | 55502041.37\"\n\" VIETNAM                   | 55295087.24\"\n\" CHINA                     | 53724494.43\"\n\" INDIA                     | 52035512.19\"\n\" JAPAN                     | 45410175.92\"\n\"(5 行记录)\"",
        "fixed sqlglot query result": "\"          n_name           |   revenue\"\n\"---------------------------+-------------\"\n\" INDONESIA                 | 55502041.37\"\n\" VIETNAM                   | 55295087.24\"\n\" CHINA                     | 53724494.43\"\n\" INDIA                     | 52035512.19\"\n\" JAPAN                     | 45410175.92\"\n\"(5 行记录)\""
    },
    {
        "queryid": 6,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT SUM(L_EXTENDEDPRICE * L_DISCOUNT) AS REVENUE FROM LINEITEM WHERE dbo.q6conditions(L_SHIPDATE, L_DISCOUNT, L_QUANTITY) = 1;",
        "sqlglot converted sql query": "SELECT SUM(L_EXTENDEDPRICE * L_DISCOUNT) AS REVENUE FROM LINEITEM WHERE q6conditions(L_SHIPDATE, L_DISCOUNT, L_QUANTITY) = 1",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT SUM(L_EXTENDEDPRICE * L_DISCOUNT) AS REVENUE FROM LINEITEM WHERE Q6CONDITIONS( L_SHIPDATE::DATE, L_DISCOUNT::DECIMAL(12,2), L_QUANTITY::INT ) = 1;",
        "src query result": "\"REVENUE\"\n\"-------------------\"\n\"123141078.2283\"\n\"(1 行记录)\"",
        "sqlglot query result": "\"ERROR:  function q6conditions(date, numeric, numeric) does not exist\"\n\"第3行WHERE q6conditions(L_SHIPDATE, L_DISCOUNT, L_QUANTITY) = 1;\"\n\"           ^\"\n\"提示:  No function matches the given name and argument types. You might need to add explicit type casts.\"",
        "fixed sqlglot query result": "\"    revenue\"\n\"----------------\"\n\" 123141078.2283\"\n\"(1 行记录)\""
    },
    {
        "queryid": 7,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT SUPP_NATION, CUST_NATION, L_YEAR, SUM(VOLUME) AS REVENUE FROM (     SELECT N1.N_NAME AS SUPP_NATION, N2.N_NAME AS CUST_NATION,     datepart(yy, L_SHIPDATE) AS L_YEAR,     L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS VOLUME     FROM SUPPLIER, LINEITEM, ORDERS, CUSTOMER, NATION N1, NATION N2     WHERE S_SUPPKEY = L_SUPPKEY AND O_ORDERKEY = L_ORDERKEY     AND C_CUSTKEY = O_CUSTKEY     AND S_NATIONKEY = N1.N_NATIONKEY     AND C_NATIONKEY = N2.N_NATIONKEY     AND dbo.q7conditions(N1.N_NAME, N2.N_NAME, L_SHIPDATE) = 1 ) AS SHIPPING GROUP BY SUPP_NATION, CUST_NATION, L_YEAR ORDER BY SUPP_NATION, CUST_NATION, L_YEAR;",
        "sqlglot converted sql query": "SELECT SUPP_NATION, CUST_NATION, L_YEAR, SUM(VOLUME) AS REVENUE FROM (SELECT N1.N_NAME AS SUPP_NATION, N2.N_NAME AS CUST_NATION, TO_CHAR(CAST(L_SHIPDATE AS TIMESTAMP), 'YY') AS L_YEAR, L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS VOLUME FROM SUPPLIER, LINEITEM, ORDERS, CUSTOMER, NATION AS N1, NATION AS N2 WHERE S_SUPPKEY = L_SUPPKEY AND O_ORDERKEY = L_ORDERKEY AND C_CUSTKEY = O_CUSTKEY AND S_NATIONKEY = N1.N_NATIONKEY AND C_NATIONKEY = N2.N_NATIONKEY AND q7conditions(N1.N_NAME, N2.N_NAME, L_SHIPDATE) = 1) AS SHIPPING GROUP BY SUPP_NATION, CUST_NATION, L_YEAR ORDER BY SUPP_NATION NULLS FIRST, CUST_NATION NULLS FIRST, L_YEAR NULLS FIRST",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT SUPP_NATION, CUST_NATION, L_YEAR, SUM(VOLUME) AS REVENUE FROM ( SELECT N1.N_NAME AS SUPP_NATION, N2.N_NAME AS CUST_NATION, TO_CHAR(CAST(L_SHIPDATE AS TIMESTAMP), 'YY') AS L_YEAR, L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS VOLUME FROM SUPPLIER, LINEITEM, ORDERS, CUSTOMER, NATION AS N1, NATION AS N2 WHERE S_SUPPKEY = L_SUPPKEY AND O_ORDERKEY = L_ORDERKEY AND C_CUSTKEY = O_CUSTKEY AND S_NATIONKEY = N1.N_NATIONKEY AND C_NATIONKEY = N2.N_NATIONKEY AND Q7CONDITIONS(N1.N_NAME, N2.N_NAME, L_SHIPDATE) = 1 ) AS SHIPPING GROUP BY SUPP_NATION, CUST_NATION, L_YEAR ORDER BY SUPP_NATION NULLS FIRST, CUST_NATION NULLS FIRST, L_YEAR NULLS FIRST;",
        "src query result": "\"supp_nation | cust_nation | l_year |    revenue\"\n\"-----------+------------+--------+---------------\"\n\"FRANCE     | GERMANY    | 1995   | 54639732.7336\"\n\"FRANCE     | GERMANY    | 1996   | 54633083.3076\"\n\"GERMANY    | FRANCE     | 1995   | 52531746.6697\"\n\"GERMANY    | FRANCE     | 1996   | 52520549.0224\"\n\"(4 行记录)\"",
        "sqlglot query result": "\"        supp_nation        |        cust_nation        | l_year |    revenue\"\n\"---------------------------+---------------------------+--------+---------------\"\n\" FRANCE                    | GERMANY                   | 95     | 54639732.7336\"\n\" FRANCE                    | GERMANY                   | 96     | 54633083.3076\"\n\" GERMANY                   | FRANCE                    | 95     | 52531746.6697\"\n\" GERMANY                   | FRANCE                    | 96     | 52520549.0224\"\n\"(4 行记录)\"",
        "fixed sqlglot query result": "\"        supp_nation        |        cust_nation        | l_year |    revenue\"\n\"---------------------------+---------------------------+--------+---------------\"\n\" FRANCE                    | GERMANY                   | 95     | 54639732.7336\"\n\" FRANCE                    | GERMANY                   | 96     | 54633083.3076\"\n\" GERMANY                   | FRANCE                    | 95     | 52531746.6697\"\n\" GERMANY                   | FRANCE                    | 96     | 52520549.0224\"\n\"(4 行记录)\""
    },
    {
        "queryid": 9,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT NATION, O_YEAR, SUM(AMOUNT) AS SUM_PROFIT FROM (     SELECT N_NAME AS NATION,     datepart(yy, O_ORDERDATE) AS O_YEAR,     dbo.profit_amount(L_EXTENDEDPRICE, L_DISCOUNT, PS_SUPPLYCOST, L_QUANTITY) AS AMOUNT     FROM PART, SUPPLIER, LINEITEM, PARTSUPP, ORDERS, NATION     WHERE S_SUPPKEY = L_SUPPKEY AND PS_SUPPKEY = L_SUPPKEY     AND PS_PARTKEY = L_PARTKEY AND P_PARTKEY = L_PARTKEY     AND O_ORDERKEY = L_ORDERKEY AND S_NATIONKEY = N_NATIONKEY AND     P_NAME LIKE '%green%' ) AS PROFIT GROUP BY NATION, O_YEAR ORDER BY NATION, O_YEAR DESC;",
        "sqlglot converted sql query": "SELECT NATION, O_YEAR, SUM(AMOUNT) AS SUM_PROFIT FROM (SELECT N_NAME AS NATION, TO_CHAR(CAST(O_ORDERDATE AS TIMESTAMP), 'YY') AS O_YEAR, profit_amount(L_EXTENDEDPRICE, L_DISCOUNT, PS_SUPPLYCOST, L_QUANTITY) AS AMOUNT FROM PART, SUPPLIER, LINEITEM, PARTSUPP, ORDERS, NATION WHERE S_SUPPKEY = L_SUPPKEY AND PS_SUPPKEY = L_SUPPKEY AND PS_PARTKEY = L_PARTKEY AND P_PARTKEY = L_PARTKEY AND O_ORDERKEY = L_ORDERKEY AND S_NATIONKEY = N_NATIONKEY AND P_NAME LIKE '%green%') AS PROFIT GROUP BY NATION, O_YEAR ORDER BY NATION NULLS FIRST, O_YEAR DESC NULLS LAST",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT NATION, O_YEAR, SUM(AMOUNT) AS SUM_PROFIT FROM ( SELECT N_NAME AS NATION, TO_CHAR(CAST(O_ORDERDATE AS TIMESTAMP), 'YY') AS O_YEAR, PROFIT_AMOUNT(L_EXTENDEDPRICE, L_DISCOUNT, PS_SUPPLYCOST, L_QUANTITY::INT) AS AMOUNT FROM PART, SUPPLIER, LINEITEM, PARTSUPP, ORDERS, NATION WHERE S_SUPPKEY = L_SUPPKEY AND PS_SUPPKEY = L_SUPPKEY AND PS_PARTKEY = L_PARTKEY AND P_PARTKEY = L_PARTKEY AND O_ORDERKEY = L_ORDERKEY AND S_NATIONKEY = N_NATIONKEY AND P_NAME LIKE '%green%' ) AS PROFIT GROUP BY NATION, O_YEAR ORDER BY NATION NULLS FIRST, O_YEAR DESC NULLS LAST LIMIT 10;",
        "src query result": "\"nation       | o_year |      sum_profit\"\n\"------------+-------+-------------------\"\n\"ALGERIA      | 1995  | 27136900.41\"\n\"ALGERIA      | 1997  | 48611833.70\"\n\"ALGERIA      | 1996  | 48285482.91\"\n\"ALGERIA      | 1995  | 44402273.96\"\n\"ALGERIA      | 1994  | 48694008.22\"\n\"ALGERIA      | 1993  | 46044208.08\"\n\"ALGERIA      | 1992  | 45636849.67\"\n\"ARGENTINA    | 1996  | 28341663.81\"\n\"ARGENTINA    | 1997  | 47143964.50\"\n\"ARGENTINA    | 1996  | 45255278.82\"\n\"(10 行记录)\"",
        "sqlglot query result": "\"ERROR:  function profit_amount(numeric, numeric, numeric, numeric) does not exist\"\n\"第5行        profit_amount(L_EXTENDEDPRICE, L_DISCOUNT, PS_SUPPLY...\"\n\"             ^\"\n\"提示:  No function matches the given name and argument types. You might need to add explicit type casts.\"",
        "fixed sqlglot query result": "\"          nation           | o_year |  sum_profit\"\n\"---------------------------+--------+---------------\"\n\" ALGERIA                   | 98     | 27136900.1803\"\n\" ALGERIA                   | 97     | 48611833.4962\"\n\" ALGERIA                   | 96     | 48285482.6782\"\n\" ALGERIA                   | 95     | 44402273.5999\"\n\" ALGERIA                   | 94     | 48694008.0668\"\n\" ALGERIA                   | 93     | 46044207.7838\"\n\" ALGERIA                   | 92     | 45636849.4881\"\n\" ARGENTINA                 | 98     | 28341663.7848\"\n\" ARGENTINA                 | 97     | 47143964.1176\"\n\" ARGENTINA                 | 96     | 45255278.6021\"\n\"(10 行记录)\""
    },
    {
        "queryid": 10,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT TOP 20 C_CUSTKEY, C_NAME, SUM(dbo.discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE, C_ACCTBAL, N_NAME, C_ADDRESS, C_PHONE, C_COMMENT FROM CUSTOMER, ORDERS, LINEITEM, NATION WHERE C_CUSTKEY = O_CUSTKEY AND L_ORDERKEY = O_ORDERKEY AND dbo.q10conditions(O_ORDERDATE, L_RETURNFLAG) = 1 AND C_NATIONKEY = N_NATIONKEY GROUP BY C_CUSTKEY, C_NAME, C_ACCTBAL, C_PHONE, N_NAME, C_ADDRESS, C_COMMENT ORDER BY REVENUE DESC;",
        "sqlglot converted sql query": "SELECT C_CUSTKEY, C_NAME, SUM(discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE, C_ACCTBAL, N_NAME, C_ADDRESS, C_PHONE, C_COMMENT FROM CUSTOMER, ORDERS, LINEITEM, NATION WHERE C_CUSTKEY = O_CUSTKEY AND L_ORDERKEY = O_ORDERKEY AND q10conditions(O_ORDERDATE, L_RETURNFLAG) = 1 AND C_NATIONKEY = N_NATIONKEY GROUP BY C_CUSTKEY, C_NAME, C_ACCTBAL, C_PHONE, N_NAME, C_ADDRESS, C_COMMENT ORDER BY REVENUE DESC NULLS LAST LIMIT 20",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT C_CUSTKEY, C_NAME, SUM(DISCOUNT_PRICE(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE, C_ACCTBAL, N_NAME, C_ADDRESS, C_PHONE, C_COMMENT FROM CUSTOMER, ORDERS, LINEITEM, NATION WHERE C_CUSTKEY = O_CUSTKEY AND L_ORDERKEY = O_ORDERKEY AND Q10CONDITIONS(O_ORDERDATE, L_RETURNFLAG) = 1 AND C_NATIONKEY = N_NATIONKEY GROUP BY C_CUSTKEY, C_NAME, C_ACCTBAL, C_PHONE, N_NAME, C_ADDRESS, C_COMMENT ORDER BY REVENUE DESC NULLS LAST LIMIT 10;",
        "src query result": "\"c_custkey |          c_name          |  revenue  |  c_acctbal  | n_name |                     c_address                      |          c_phone          |                                                                 c_comment\"\n\"---------+-------------------------+----------+------------+--------+---------------------------------------------------+--------------------------+-------------------------------------------------------------------------------------------------------------\"\n\"57040    | Customer#000057040   | 734235.24   | 2455       | JAPAN   | Eioyzj4pp                                           | 22-895-641-3466      | sits. slyly regular requests sleep alongside of the regular inst\"\n\"143347   | Customer#000143347   | 721002.68  | 9648       | EGYPT  | 1a8eFYv, Kw4                                        | 14-742-935-3718      | ggle carefully enticing requests. final deposits use bold, bold pinto beans. ironic, idle re\"\n\"60838    | Customer#000060838   | 679127.31  | 3077       | BRAZIL | 64fajTsWHAWJLbQxJk1pNc2RTjWE                        | 12-913-494-9813      | need to boost against the slyly regular account\"\n\"101998   | Customer#000101998   | 637029.56  | 5667       | UNITED KINGDOM | 01o9CILnNtF00YmZj                                | 33-593-665-6378      | ress foxes wake slyly after the bold excuses. ironic platlets are furiously carefully bold theodolites\"\n\"125341   | Customer#000125341   | 633508.08  | 8060       | GERMANY | S29000b6oeU89SuEfJnkWaK                            | 17-582-695-5962      | arefully even depths. blithely even excuses sleep furiously. foxes use except the dependencies. oa\"\n\"25501    | Customer#000025501   | 620269.79  | 7849       | ETHIOPIA | W56MXuoi aYCCZamJL RoD8AJCIGdQ8DIZ                 | 15-874-608-6793      | he pending instructions wake carefully at the pinto beans. regular, final instructions doze the slyly fina\"\n\"115831   | Customer#000115831   | 596423.86  | 8672       | FRANCE  | rFeBEyk dI ne7z5FDmigl0K09wYrXgCgIo               | 16-715-386-3788      | l somas sleep. furiously final deposits wake blithely regular pinto b\"\n\"84223    | Customer#000084223   | 594998.02  | 2339       | UNITED KINGDOM | naVZCs6BaWap rrM2ZN 2qhns6WbaunbA                | 33-442-824-8191      | slyly final deposits hassle regular, pending dependencies. pending escapes wake bl\"\n\"54289    | Customer#000054289   | 586603.39  | 3918       | IRAN    | vXcx0c5U0Ba45jQT , oobkZ                          | 20-834-292-4707      | ely special foxes are quickly finally ironic p\"\n\"399222    | Customer#000039922   | 564878.11  | 11343      | GERMANY | Zg2v4s5OI2GKM4pLDPBUm342zWer                      | 17-147-757-6036      | y final requests. furiously final foxes cajole blithely special platlets. f\"\n\"(10 行记录)\"",
        "sqlglot query result": "\"c_custkey |       c_name       |  revenue  | c_acctbal |          n_name           |                c_address                 |     c_phone     |                                                  c_comment                                       \"\n\"-----------+--------------------+-----------+-----------+---------------------------+------------------------------------------+-----------------+-------------------------------------------------------------------------------------------------------------\"\n\"     57040 | Customer#000057040 | 734235.24 |    632.87 | JAPAN                     | Eioyzjf4pp                               | 22-895-641-3466 | sits. slyly regular requests sleep alongside of the regular inst\"\n\"    143347 | Customer#000143347 | 721002.68 |   2557.47 | EGYPT                     | 1aReFYv,Kw4                              | 14-742-935-3718 | ggle carefully enticing requests. final deposits use bold, bold pinto beans. ironic, idle re\"\n\"     60838 | Customer#000060838 | 679127.31 |   2454.77 | BRAZIL                    | 64EaJ5vMAHWJlBOxJklpNc2RJiWE             | 12-913-494-9813 |  need to boost against the slyly regular account\"\n\"    101998 | Customer#000101998 | 637029.57 |   3790.89 | UNITED KINGDOM            | 01c9CILnNtfOQYmZj                        | 33-593-865-6378 | ress foxes wake slyly after the bold excuses. ironic platelets are furiously carefully bold theodolites\"\n\"    125341 | Customer#000125341 | 633508.08 |   4983.51 | GERMANY                   | S29ODD6bceU8QSuuEJznkNaK                 | 17-582-695-5962 | arefully even depths. blithely even excuses sleep furiously. foxes use except the dependencies. ca\"\n\"     25501 | Customer#000025501 | 620269.79 |   7725.04 | ETHIOPIA                  |   W556MXuoiaYCCZamJI,Rn0B4ACUGdkQ8DZ     | 15-874-808-6793 | he pending instructions wake carefully at the pinto beans. regular, final instructions along the slyly fina\"\n\"    115831 | Customer#000115831 | 596423.88 |   5098.10 | FRANCE                    | rFeBbEEyk dl ne7zV5fDrmiq1oK09wV7pxqCgIc | 16-715-386-3788 | l somas sleep. furiously final deposits wake blithely regular pinto b\"\n\"     84223 | Customer#000084223 | 594998.03 |    528.65 | UNITED KINGDOM            | nAVZCs6BaWap rrM27N 2qBnzc5WBauxbA       | 33-442-824-8191 |  slyly final deposits haggle regular, pending dependencies. pending escapades wake\"\n\"     54289 | Customer#000054289 | 585603.38 |   5583.02 | IRAN                      | vXCxoCsU0Bad5JQI ,oobkZ                  | 20-834-292-4707 | ely special foxes are quickly finally ironic p\"\n\"     39922 | Customer#000039922 | 584878.12 |   7321.11 | GERMANY                   | Zgy4s50l2GKN4pLDPBU8m342gIw6R            | 17-147-757-8036 | y final requests. furiously final foxes cajole blithely special platelets. f\"\n\"(10 行记录)\"",
        "fixed sqlglot query result": "\" c_custkey |       c_name       |  revenue  | c_acctbal |          n_name           |                c_address                 |     c_phone     |                                                  c_comment                                   \"\n\"-----------+--------------------+-----------+-----------+---------------------------+------------------------------------------+-----------------+-------------------------------------------------------------------------------------------------------------\"\n\"     57040 | Customer#000057040 | 734235.24 |    632.87 | JAPAN                     | Eioyzjf4pp                               | 22-895-641-3466 | sits. slyly regular requests sleep alongside of the regular inst\"\n\"    143347 | Customer#000143347 | 721002.68 |   2557.47 | EGYPT                     | 1aReFYv,Kw4                              | 14-742-935-3718 | ggle carefully enticing requests. final deposits use bold, bold pinto beans. ironic, idle re\"\n\"     60838 | Customer#000060838 | 679127.31 |   2454.77 | BRAZIL                    | 64EaJ5vMAHWJlBOxJklpNc2RJiWE             | 12-913-494-9813 |  need to boost against the slyly regular account\"\n\"    101998 | Customer#000101998 | 637029.57 |   3790.89 | UNITED KINGDOM            | 01c9CILnNtfOQYmZj                        | 33-593-865-6378 | ress foxes wake slyly after the bold excuses. ironic platelets are furiously carefully bold theodolites\"\n\"     25501 | Customer#000025501 | 620269.79 |   7725.04 | ETHIOPIA                  |   W556MXuoiaYCCZamJI,Rn0B4ACUGdkQ8DZ     | 15-874-808-6793 | he pending instructions wake carefully at the pinto beans. regular, final instructions along the slyly fina\"\n\"    115831 | Customer#000115831 | 596423.88 |   5098.10 | FRANCE                    | rFeBbEEyk dl ne7zV5fDrmiq1oK09wV7pxqCgIc | 16-715-386-3788 | l somas sleep. furiously final deposits wake blithely regular pinto b\"\n\"     84223 | Customer#000084223 | 594998.03 |    528.65 | UNITED KINGDOM            | nAVZCs6BaWap rrM27N 2qBnzc5WBauxbA       | 33-442-824-8191 |  slyly final deposits haggle regular, pending dependencies. pending escapades wake\"\n\"     54289 | Customer#000054289 | 585603.38 |   5583.02 | IRAN                      | vXCxoCsU0Bad5JQI ,oobkZ                  | 20-834-292-4707 | ely special foxes are quickly finally ironic p\"\n\"     39922 | Customer#000039922 | 584878.12 |   7321.11 | GERMANY                   | Zgy4s50l2GKN4pLDPBU8m342gIw6R            | 17-147-757-8036 | y final requests. furiously final foxes cajole blithely special platelets. f\"\n\"(10 行记录)\""
    },
    {
        "queryid": 11,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT PS_PARTKEY, SUM(PS_SUPPLYCOST * PS_AVAILQTY) AS VALUE FROM PARTSUPP, SUPPLIER, NATION WHERE PS_SUPPKEY = S_SUPPKEY AND S_NATIONKEY = N_NATIONKEY AND N_NAME = 'GERMANY' GROUP BY PS_PARTKEY HAVING SUM(PS_SUPPLYCOST * PS_AVAILQTY) > dbo.total_value() ORDER BY VALUE DESC;",
        "sqlglot converted sql query": "SELECT PS_PARTKEY, SUM(PS_SUPPLYCOST * PS_AVAILQTY) AS VALUE FROM PARTSUPP, SUPPLIER, NATION WHERE PS_SUPPKEY = S_SUPPKEY AND S_NATIONKEY = N_NATIONKEY AND N_NAME = 'GERMANY' GROUP BY PS_PARTKEY HAVING SUM(PS_SUPPLYCOST * PS_AVAILQTY) > total_value() ORDER BY VALUE DESC NULLS LAST",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT PS_PARTKEY, SUM(PS_SUPPLYCOST * PS_AVAILQTY) AS VALUE FROM PARTSUPP, SUPPLIER, NATION WHERE PS_SUPPKEY = S_SUPPKEY AND S_NATIONKEY = N_NATIONKEY AND N_NAME = 'GERMANY' GROUP BY PS_PARTKEY HAVING SUM(PS_SUPPLYCOST * PS_AVAILQTY) > TOTAL_VALUE() ORDER BY VALUE DESC NULLS LAST;",
        "src query result": "\"ps_partkey |       value\"\n\"-----------+---------------\"\n\"129760     | 17538456.86\"\n\"166726     | 18503353.92\"\n\"191287     | 16474001.97\"\n\"161758     | 16101755.54\"\n\"34452      | 15963844.72\"\n\"139035     | 15907078.34\"\n\"9403       | 15451755.62\"\n\"154358     | 15212937.88\"\n\"38823      | 15064802.86\"\n\"85606      | 15053957.15\"\n\"(10 行记录)\"",
        "sqlglot query result": "\" ps_partkey |    value\"\n\"------------+-------------\"\n\"     129760 | 17538456.86\"\n\"     166726 | 16503353.92\"\n\"     191287 | 16474801.97\"\n\"     161758 | 16101755.54\"\n\"      34452 | 15983844.72\"\n\"     139035 | 15907078.34\"\n\"       9403 | 15451755.62\"\n\"     154358 | 15212937.88\"\n\"      38823 | 15064802.86\"\n\"      85606 | 15053957.15\"",
        "fixed sqlglot query result": "\" ps_partkey |    value\"\n\"------------+-------------\"\n\"     129760 | 17538456.86\"\n\"     166726 | 16503353.92\"\n\"     191287 | 16474801.97\"\n\"     161758 | 16101755.54\"\n\"      34452 | 15983844.72\"\n\"     139035 | 15907078.34\"\n\"       9403 | 15451755.62\"\n\"     154358 | 15212937.88\"\n\"      38823 | 15064802.86\"\n\"      85606 | 15053957.15\""
    },
    {
        "queryid": 12,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT L_SHIPMODE, SUM(dbo.line_count(O_ORDERPRIORITY, 'high')) AS HIGH_LINE_COUNT, SUM(dbo.line_count(O_ORDERPRIORITY, 'low')) AS LOW_LINE_COUNT FROM ORDERS, LINEITEM WHERE O_ORDERKEY = L_ORDERKEY AND dbo.q12conditions(L_SHIPMODE, L_COMMITDATE, L_RECEIPTDATE, L_SHIPDATE) = 1 GROUP BY L_SHIPMODE ORDER BY L_SHIPMODE;",
        "sqlglot converted sql query": "SELECT L_SHIPMODE, SUM(line_count(O_ORDERPRIORITY, 'high')) AS HIGH_LINE_COUNT, SUM(line_count(O_ORDERPRIORITY, 'low')) AS LOW_LINE_COUNT FROM ORDERS, LINEITEM WHERE O_ORDERKEY = L_ORDERKEY AND q12conditions(L_SHIPMODE, L_COMMITDATE, L_RECEIPTDATE, L_SHIPDATE) = 1 GROUP BY L_SHIPMODE ORDER BY L_SHIPMODE NULLS FIRST",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT L_SHIPMODE, SUM(LINE_COUNT(O_ORDERPRIORITY, 'high')) AS HIGH_LINE_COUNT, SUM(LINE_COUNT(O_ORDERPRIORITY, 'low')) AS LOW_LINE_COUNT FROM ORDERS, LINEITEM WHERE O_ORDERKEY = L_ORDERKEY AND Q12CONDITIONS(L_SHIPMODE, L_COMMITDATE, L_RECEIPTDATE, L_SHIPDATE) = 1 GROUP BY L_SHIPMODE ORDER BY L_SHIPMODE NULLS FIRST;",
        "src query result": "\"l_shipmode | high_line_count | low_line_count\"\n\"-----------+----------------+---------------\"\n\"MAIL       | 10746         | 10746\"\n\"SHIP       | 10864         | 10864\"\n\"(2 行记录)\"",
        "sqlglot query result": "\" l_shipmode | high_line_count | low_line_count\"\n\"------------+-----------------+----------------\"\n\" MAIL       |           10746 |              0\"\n\" SHIP       |           10864 |              0\"\n\"(2 行记录)\"",
        "fixed sqlglot query result": "\" l_shipmode | high_line_count | low_line_count\"\n\"------------+-----------------+----------------\"\n\" MAIL       |           10746 |              0\"\n\" SHIP       |           10864 |              0\""
    },
    {
        "queryid": 14,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT 100.00 * SUM(dbo.promo_disc(P_TYPE, L_EXTENDEDPRICE, L_DISCOUNT)) / SUM(dbo.discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS PROMO_REVENUE FROM LINEITEM, PART WHERE L_PARTKEY = P_PARTKEY AND L_SHIPDATE >= '1995-09-01' AND L_SHIPDATE < dateadd(mm, 1, '1995-09-01');",
        "sqlglot converted sql query": "SELECT 100.00 * SUM(promo_disc(P_TYPE, L_EXTENDEDPRICE, L_DISCOUNT)) / SUM(discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS PROMO_REVENUE FROM LINEITEM, PART WHERE L_PARTKEY = P_PARTKEY AND L_SHIPDATE >= '1995-09-01' AND L_SHIPDATE < '1995-09-01' + INTERVAL '1 MONTH'",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT 100.00 * SUM(PROMO_DISC(P_TYPE, L_EXTENDEDPRICE, L_DISCOUNT)) / SUM(DISCOUNT_PRICE(L_EXTENDEDPRICE, L_DISCOUNT)) AS PROMO_REVENUE FROM LINEITEM, PART WHERE L_PARTKEY = P_PARTKEY AND L_SHIPDATE >= DATE '1995-09-01' AND L_SHIPDATE < DATE '1995-09-01' + INTERVAL '1 MONTH';",
        "src query result": "\"PROMO_REVENUE\"\n\"-------------------\"\n\"16.380778\"\n\"(1 行记录)\"",
        "sqlglot query result": "\"ERROR:  invalid input syntax for type interval: \"1995-09-01\"\"\n\"第5行AND L_SHIPDATE < '1995-09-01' + INTERVAL '1 MONTH';\"",
        "fixed sqlglot query result": "\"    promo_revenue\"\n\"---------------------\"\n\" 16.3807786354670190\"\n\"(1 行记录)\""
    },
    {
        "queryid": 19,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT SUM(dbo.discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE FROM LINEITEM join PART on L_PARTKEY = P_PARTKEY WHERE dbo.q19conditions(P_CONTAINER, L_QUANTITY, P_SIZE, L_SHIPMODE, L_SHIPINSTRUCT, P_BRAND) = 1;",
        "sqlglot converted sql query": "SELECT SUM(discount_price(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE FROM LINEITEM JOIN PART ON L_PARTKEY = P_PARTKEY WHERE q19conditions(P_CONTAINER, L_QUANTITY, P_SIZE, L_SHIPMODE, L_SHIPINSTRUCT, P_BRAND) = 1",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT SUM(DISCOUNT_PRICE(L_EXTENDEDPRICE, L_DISCOUNT)) AS REVENUE FROM LINEITEM JOIN PART ON L_PARTKEY = P_PARTKEY WHERE Q19CONDITIONS(P_CONTAINER, L_QUANTITY::INT, P_SIZE, L_SHIPMODE, L_SHIPINSTRUCT, P_BRAND) = 1;",
        "src query result": "\"REVENUE\"\n\"-------------------\"\n\"3083643.03\"\n\"(1 行记录)\"",
        "sqlglot query result": "\"ERROR:  function q19conditions(character, numeric, integer, character, character, character) does not exist\"\n\"第4行WHERE q19conditions(P_CONTAINER, L_QUANTITY, P_SIZE, L_SHIPM...\"\n\"           ^\"\n\"提示:  No function matches the given name and argument types. You might need to add explicit type casts.\"",
        "fixed sqlglot query result": "\"  revenue\"\n\"------------\"\n\" 3083843.03\"\n\"(1 行记录)\""
    },
    {
        "queryid": 22,
        "src sql type": "tsql",
        "dst sql type": "postgres",
        "src sql query": "SELECT CNTRYCODE, COUNT(*) AS NUMCUST, SUM(C_ACCTBAL) AS TOTACCTBAL FROM (     SELECT SUBSTRING(C_PHONE, 1, 2) AS CNTRYCODE, C_ACCTBAL     FROM CUSTOMER WHERE SUBSTRING(C_PHONE, 1, 2)     IN ('13', '31', '23', '29', '30', '18', '17')     AND C_ACCTBAL > dbo.avg_actbal()     AND NOT EXISTS (SELECT * FROM ORDERS WHERE O_CUSTKEY = C_CUSTKEY) ) AS CUSTSALE GROUP BY CNTRYCODE ORDER BY CNTRYCODE;",
        "sqlglot converted sql query": "SELECT CNTRYCODE, COUNT(*) AS NUMCUST, SUM(C_ACCTBAL) AS TOTACCTBAL FROM (SELECT SUBSTRING(C_PHONE FROM 1 FOR 2) AS CNTRYCODE, C_ACCTBAL FROM CUSTOMER WHERE SUBSTRING(C_PHONE FROM 1 FOR 2) IN ('13', '31', '23', '29', '30', '18', '17') AND C_ACCTBAL > avg_actbal() AND NOT EXISTS(SELECT * FROM ORDERS WHERE O_CUSTKEY = C_CUSTKEY)) AS CUSTSALE GROUP BY CNTRYCODE ORDER BY CNTRYCODE NULLS FIRST",
        "sqlglot error": "",
        "fixed sqlglot sql query": "SELECT CNTRYCODE, COUNT(*) AS NUMCUST, SUM(C_ACCTBAL) AS TOTACCTBAL FROM ( SELECT SUBSTRING(C_PHONE FROM 1 FOR 2) AS CNTRYCODE, C_ACCTBAL FROM CUSTOMER WHERE SUBSTRING(C_PHONE FROM 1 FOR 2) IN ('13', '31', '23', '29', '30', '18', '17') AND C_ACCTBAL > AVG_ACTBAL() AND NOT EXISTS ( SELECT * FROM ORDERS WHERE O_CUSTKEY = C_CUSTKEY ) ) AS CUSTSALE GROUP BY CNTRYCODE ORDER BY CNTRYCODE NULLS FIRST;",
        "src query result": "\"entrycode | numcust |  totacctbal\"\n\"---------+---------+------------\"\n\"    13   |   888   | 6737713.99\"\n\"    17   |   861   | 6400573.72\"\n\"    18   |   964   | 7236687.40\"\n\"    23   |   892   | 6701457.95\"\n\"    29   |   948   | 7158866.63\"\n\"    30   |   909   | 6808436.13\"\n\"    31   |   922   | 6806670.18\"\n\"(7 行记录)\"",
        "sqlglot query result": "\" cntrycode | numcust | totacctbal\"\n\"-----------+---------+------------\"\n\" 13        |     888 | 6737713.99\"\n\" 17        |     861 | 6460573.72\"\n\" 18        |     964 | 7236687.40\"\n\" 23        |     892 | 6701457.95\"\n\" 29        |     948 | 7158866.63\"\n\" 30        |     909 | 6808436.13\"\n\" 31        |     922 | 6806670.18\"\n\"(7 行记录)\"",
        "fixed sqlglot query result": "\" cntrycode | numcust | totacctbal\"\n\"-----------+---------+------------\"\n\" 13        |     888 | 6737713.99\"\n\" 17        |     861 | 6460573.72\"\n\" 18        |     964 | 7236687.40\"\n\" 23        |     892 | 6701457.95\"\n\" 29        |     948 | 7158866.63\"\n\" 30        |     909 | 6808436.13\"\n\" 31        |     922 | 6806670.18\"\n\"(7 行记录)\""
    }
]