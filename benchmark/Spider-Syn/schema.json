[
    {
        "db_id": "perpetrator",
        "schema": "CREATE TABLE perpetrator ( perpetrator_id INT PRIMARY KEY, people_id INT, date DATE, year INT, location VARCHAR(255), country VARCHAR(255), killed INT, injured INT, FOREIGN KEY (people_id) REFERENCES people (people_id) ); CREATE TABLE people ( people_id INT PRIMARY KEY, name VARCHAR(255), height INT, weight INT, home_town VARCHAR(255) );"
    },
    {
        "db_id": "college_2",
        "schema": "CREATE TABLE classroom ( building VARCHAR(255), room_number VARCHAR(255), capacity INT, department_name VARCHAR(255), budget INT, PRIMARY KEY (building) ); CREATE TABLE department ( dept_name VARCHAR(255), building VARCHAR(255), budget INT, PRIMARY KEY (dept_name) ); CREATE TABLE course ( course_id INT, title VARCHAR(255), dept_name VARCHAR(255), credits INT, PRIMARY KEY (course_id) ); CREATE TABLE instructor ( ID INT, name VARCHAR(255), dept_name VARCHAR(255), salary INT, PRIMARY KEY (ID) ); CREATE TABLE section ( course_id INT, sec_id INT, semester INT, year INT, building VARCHAR(255), room_number VARCHAR(255), time_slot_id INT, PRIMARY KEY (course_id, sec_id, semester, year) ); CREATE TABLE teaches ( ID INT, course_id INT, sec_id INT, semester INT, year INT, PRIMARY KEY (ID, course_id, sec_id, semester, year) ); CREATE TABLE student ( ID INT, name VARCHAR(255), dept_name VARCHAR(255), tot_cred INT, PRIMARY KEY (ID) ); CREATE TABLE takes ( s_ID INT, i_ID INT, PRIMARY KEY (s_ID, i_ID) ); CREATE TABLE advisor ( s_ID INT, i_ID INT, PRIMARY KEY (s_ID, i_ID) ); CREATE TABLE time_slot ( time_slot_id INT, day VARCHAR(255), start_hr INT, start_min INT, end_hr INT, end_min INT, PRIMARY KEY (time_slot_id) ); CREATE TABLE prereq ( course_id INT, prereq_id INT, PRIMARY KEY (course_id, prereq_id) );"
    },
    {
        "db_id": "flight_company",
        "schema": "CREATE TABLE airport ( id INT PRIMARY KEY, city VARCHAR(255), country VARCHAR(255), IATA VARCHAR(255), ICAO VARCHAR(255), name VARCHAR(255) ); CREATE TABLE operate_company ( id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255), principal_activities VARCHAR(255), incorporated_in VARCHAR(255), group_equity_shareholding INT ); CREATE TABLE flight ( id INT, vehicle_flight_number VARCHAR(255), date DATE, pilot VARCHAR(255), velocity INT, altitude INT, airport_id INT, company_id INT, PRIMARY KEY (id), FOREIGN KEY (airport_id) REFERENCES airport (id), FOREIGN KEY (company_id) REFERENCES operate_company (id) );"
    },
    {
        "db_id": "icfp_1",
        "schema": "CREATE TABLE institution ( instID INT PRIMARY KEY, name VARCHAR(255), country VARCHAR(255) ); CREATE TABLE authors ( authID INT PRIMARY KEY, lname VARCHAR(255), fname VARCHAR(255) ); CREATE TABLE papers ( paperID INT PRIMARY KEY, title VARCHAR(255) ); CREATE TABLE authorship ( authID INT, instID INT, paperID INT, authOrder INT, PRIMARY KEY (authID, instID, paperID), FOREIGN KEY (authID) REFERENCES authors (authID), FOREIGN KEY (instID) REFERENCES institution (instID), FOREIGN KEY (paperID) REFERENCES papers (paperID) );"
    },
    {
        "db_id": "body_builder",
        "schema": "CREATE TABLE body_builder ( body_builder_id INT, people_id INT, snatch INT, clean_jerk INT, total INT, PRIMARY KEY (body_builder_id), FOREIGN KEY (people_id) REFERENCES people (people_id) ); CREATE TABLE people ( people_id INT PRIMARY KEY, name VARCHAR(255), height INT, weight INT, birth_date DATE, birth_place VARCHAR(255) );"
    },
    {
        "db_id": "storm_record",
        "schema": "CREATE TABLE storm ( storm_id INT PRIMARY KEY, name VARCHAR(255), dates_active VARCHAR(255), max_speed INT, damage_millions_usd INT, number_deaths INT ); CREATE TABLE region ( region_id INT PRIMARY KEY, region_code VARCHAR(255), region_name VARCHAR(255) ); CREATE TABLE affected_region ( region_id INT, storm_id INT, number_city_affected INT, PRIMARY KEY (region_id, storm_id), FOREIGN KEY (region_id) REFERENCES region (region_id), FOREIGN KEY (storm_id) REFERENCES storm (storm_id) );"
    },
    {
        "db_id": "pilot_record",
        "schema": "CREATE TABLE aircraft ( aircraft_id INT PRIMARY KEY, order_year INT, manufacturer VARCHAR(255), model VARCHAR(255), fleet_series VARCHAR(255), powertrain VARCHAR(255), fuel_propulsion VARCHAR(255) ); CREATE TABLE pilot ( pilot_id INT PRIMARY KEY, pilot_name VARCHAR(255), rank VARCHAR(255), age INT, nationality VARCHAR(255), position VARCHAR(255), join_year INT, team VARCHAR(255) ); CREATE TABLE pilot_record ( record_id INT, pilot_id INT, aircraft_id INT, date DATE, PRIMARY KEY (record_id), FOREIGN KEY (pilot_id) REFERENCES pilot (pilot_id), FOREIGN KEY (aircraft_id) REFERENCES aircraft (aircraft_id) );"
    },
    {
        "db_id": "race_track",
        "schema": "CREATE TABLE race ( race_id INT PRIMARY KEY, name VARCHAR(255), class VARCHAR(255), date DATE, track_id INT ); CREATE TABLE track ( track_id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255), seating INT, year_opened INT );"
    },
    {
        "db_id": "academic",
        "schema": "CREATE TABLE author ( aid INT PRIMARY KEY, homepage VARCHAR(255), name VARCHAR(255), oid INT ); CREATE TABLE conference ( cid INT PRIMARY KEY, homepage VARCHAR(255), name VARCHAR(255) ); CREATE TABLE domain ( did INT PRIMARY KEY, name VARCHAR(255) ); CREATE TABLE domain_author ( aid INT, did INT, PRIMARY KEY (aid, did), FOREIGN KEY (aid) REFERENCES author (aid), FOREIGN KEY (did) REFERENCES domain (did) ); CREATE TABLE domain_conference ( cid INT, did INT, PRIMARY KEY (cid, did), FOREIGN KEY (cid) REFERENCES conference (cid), FOREIGN KEY (did) REFERENCES domain (did) ); CREATE TABLE journal ( jid INT PRIMARY KEY, homepage VARCHAR(255), name VARCHAR(255) ); CREATE TABLE domain_journal ( jid INT, did INT, PRIMARY KEY (jid, did), FOREIGN KEY (jid) REFERENCES journal (jid), FOREIGN KEY (did) REFERENCES domain (did) ); CREATE TABLE keyword ( kid INT PRIMARY KEY, keyword VARCHAR(255) ); CREATE TABLE domain_keyword ( kid INT, did INT, PRIMARY KEY (kid, did), FOREIGN KEY (kid) REFERENCES keyword (kid), FOREIGN KEY (did) REFERENCES domain (did) ); CREATE TABLE publication ( pid INT PRIMARY KEY, abstract TEXT, cid INT, citation_num INT, jid INT, reference_num INT, title VARCHAR(255), year INT, FOREIGN KEY (cid) REFERENCES domain (cid), FOREIGN KEY (jid) REFERENCES journal (jid) ); CREATE TABLE domain_publication ( pid INT, did INT, PRIMARY KEY (pid, did), FOREIGN KEY (pid) REFERENCES publication (pid), FOREIGN KEY (did) REFERENCES domain (did) ); CREATE TABLE organization ( oid INT PRIMARY KEY, name VARCHAR(255) ); CREATE TABLE publication_keyword ( pid INT, kid INT, PRIMARY KEY (pid, kid), FOREIGN KEY (pid) REFERENCES publication (pid), FOREIGN KEY (kid) REFERENCES keyword (kid) ); CREATE TABLE writes ( aid INT, pid INT, PRIMARY KEY (aid, pid), FOREIGN KEY (aid) REFERENCES author (aid), FOREIGN KEY (pid) REFERENCES publication (pid) ); CREATE TABLE cite ( cited INT, citing INT, PRIMARY KEY (cited, citing) );"
    },
    {
        "db_id": "department_store",
        "schema": "CREATE TABLE addresses (\n    \"address_id\" INTEGER PRIMARY KEY,\n    \"address_details\" TEXT\n);\n\nCREATE TABLE staff (\n    \"staff_id\" INTEGER PRIMARY KEY,\n    \"staff_gender\" TEXT,\n    \"staff_name\" TEXT\n);\n\nCREATE TABLE suppliers (\n    \"supplier_id\" INTEGER PRIMARY KEY,\n    \"supplier_name\" TEXT,\n    \"supplier_phone\" TEXT\n);\n\nCREATE TABLE department_store_chain (\n    \"dept_store_chain_id\" INTEGER PRIMARY KEY,\n    \"dept_store_chain_name\" TEXT\n);\n\nCREATE TABLE customers (\n    \"customer_id\" INTEGER PRIMARY KEY,\n    \"payment_method_code\" TEXT,\n    \"customer_code\" TEXT,\n    \"customer_name\" TEXT,\n    \"customer_address\" TEXT,\n    \"customer_phone\" TEXT,\n    \"customer_email\" TEXT\n);\n\nCREATE TABLE products (\n    \"product_id\" INTEGER PRIMARY KEY,\n    \"product_type_code\" TEXT,\n    \"product_name\" TEXT,\n    \"product_price\" REAL\n);\n\nCREATE TABLE supplier_addresses (\n    \"supplier_id\" INTEGER,\n    \"address_id\" INTEGER,\n    \"date_from\" TEXT,\n    \"date_to\" TEXT,\n    FOREIGN KEY (\"supplier_id\") REFERENCES suppliers (\"supplier_id\"),\n    FOREIGN KEY (\"address_id\") REFERENCES addresses (\"address_id\")\n);\n\nCREATE TABLE customer_addresses (\n    \"customer_id\" INTEGER,\n    \"address_id\" INTEGER,\n    \"date_from\" TEXT,\n    \"date_to\" TEXT,\n    FOREIGN KEY (\"customer_id\") REFERENCES customers (\"customer_id\"),\n    FOREIGN KEY (\"address_id\") REFERENCES addresses (\"address_id\")\n);\n\nCREATE TABLE customer_orders (\n    \"order_id\" INTEGER PRIMARY KEY,\n    \"customer_id\" INTEGER,\n    \"order_status_code\" TEXT,\n    \"order_date\" TEXT,\n    FOREIGN KEY (\"customer_id\") REFERENCES customers (\"customer_id\")\n);\n\nCREATE TABLE department_stores (\n    \"dept_store_id\" INTEGER PRIMARY KEY,\n    \"dept_store_chain_id\" INTEGER,\n    \"store_name\" TEXT,\n    \"store_address\" TEXT,\n    \"store_phone\" TEXT,\n    \"store_email\" TEXT,\n    FOREIGN KEY (\"dept_store_chain_id\") REFERENCES department_store_chain (\"dept_store_chain_id\")\n);\n\nCREATE TABLE departments (\n    \"department_id\" INTEGER PRIMARY KEY,\n    \"dept_store_id\" INTEGER,\n    \"department_name\" TEXT,\n    FOREIGN KEY (\"dept_store_id\") REFERENCES department_stores (\"dept_store_id\")\n);\n\nCREATE TABLE order_items (\n    \"order_item_id\" INTEGER PRIMARY KEY,\n    \"order_id\" INTEGER,\n    \"product_id\" INTEGER,\n    FOREIGN KEY (\"order_id\") REFERENCES customer_orders (\"order_id\"),\n    FOREIGN KEY (\"product_id\") REFERENCES products (\"product_id\")\n);\n\nCREATE TABLE product_suppliers (\n    \"product_id\" INTEGER,\n    \"supplier_id\" INTEGER,\n    \"date_supplied_from\" TEXT,\n    \"date_supplied_to\" TEXT,\n    \"total_amount_purchased\" INTEGER,\n    \"total_value_purchased\" REAL,\n    FOREIGN KEY (\"product_id\") REFERENCES products (\"product_id\"),\n    FOREIGN KEY (\"supplier_id\") REFERENCES suppliers (\"supplier_id\")\n);\n\nCREATE TABLE staff_department_assignments (\n    \"staff_id\" INTEGER,\n    \"department_id\" INTEGER,\n    \"date_assigned_from\" TEXT,\n    \"job_title_code\" TEXT,\n    \"date_assigned_to\" TEXT,\n    FOREIGN KEY (\"staff_id\") REFERENCES staff (\"staff_id\"),\n    FOREIGN KEY (\"department_id\") REFERENCES departments (\"department_id\")\n);"
    },
    {
        "db_id": "music_4",
        "schema": "CREATE TABLE artist (\n    \"Artist_ID\" INTEGER PRIMARY KEY,\n    \"Artist\" TEXT,\n    \"Age\" INTEGER,\n    \"Famous_Title\" TEXT,\n    \"Famous_Release_date\" TEXT\n);\n\nCREATE TABLE volume (\n    \"Volume_ID\" INTEGER PRIMARY KEY,\n    \"Volume_Issue\" INTEGER,\n    \"Issue_Date\" TEXT,\n    \"Weeks_on_Top\" INTEGER,\n    \"Song\" TEXT,\n    \"Artist_ID\" INTEGER,\n    FOREIGN KEY (\"Artist_ID\") REFERENCES artist (\"Artist_ID\")\n);\n\nCREATE TABLE music_festival (\n    \"ID\" INTEGER PRIMARY KEY,\n    \"Music_Festival\" TEXT,\n    \"Date_of_ceremony\" TEXT,\n    \"Category\" TEXT,\n    \"Volume\" TEXT,\n    \"Result\" TEXT\n);"
    },
    {
        "db_id": "insurance_fnol",
        "schema": "CREATE TABLE customers (\n    \"Customer_ID\" TEXT PRIMARY KEY,\n    \"Customer_name\" TEXT\n);\n\nCREATE TABLE services (\n    \"Service_ID\" INTEGER PRIMARY KEY,\n    \"Service_name\" TEXT\n);\n\nCREATE TABLE available_policies (\n    \"Policy_ID\" TEXT PRIMARY KEY,\n    \"policy_type_code\" TEXT,\n    \"Customer_Phone\" TEXT\n);\n\nCREATE TABLE customers_policies (\n    \"Customer_ID\" TEXT,\n    \"Policy_ID\" TEXT,\n    \"Date_Opened\" TEXT,\n    \"Date_Closed\" TEXT,\n    FOREIGN KEY (\"Customer_ID\") REFERENCES customers (\"Customer_ID\"),\n    FOREIGN KEY (\"Policy_ID\") REFERENCES available_policies (\"Policy_ID\")\n);\n\nCREATE TABLE first_notification_of_loss (\n    \"FNOL_ID\" INTEGER PRIMARY KEY,\n    \"Customer_ID\" TEXT,\n    \"Policy_ID\" TEXT,\n    \"Service_ID\" INTEGER,\n    FOREIGN KEY (\"Customer_ID\") REFERENCES customers (\"Customer_ID\"),\n    FOREIGN KEY (\"Policy_ID\") REFERENCES customers_policies (\"Policy_ID\"),\n    FOREIGN KEY (\"Service_ID\") REFERENCES services (\"Service_ID\")\n);\n\nCREATE TABLE claims (\n    \"Claim_ID\" INTEGER PRIMARY KEY,\n    \"FNOL_ID\" INTEGER,\n    \"Effective_Date\" TEXT,\n    FOREIGN KEY (\"FNOL_ID\") REFERENCES first_notification_of_loss (\"FNOL_ID\")\n);\n\nCREATE TABLE settlements (\n    \"Settlement_ID\" INTEGER PRIMARY KEY,\n    \"Claim_ID\" INTEGER,\n    \"Effective_Date\" TEXT,\n    \"Settlement_Amount\" REAL,\n    FOREIGN KEY (\"Claim_ID\") REFERENCES claims (\"Claim_ID\")\n);"
    },
    {
        "db_id": "cinema",
        "schema": "CREATE TABLE film (\n    \"Film_ID\" INTEGER PRIMARY KEY,\n    \"Rank_in_series\" INTEGER,\n    \"Number_in_season\" INTEGER,\n    \"Title\" TEXT,\n    \"Directed_by\" TEXT,\n    \"Original_air_date\" TEXT,\n    \"Production_code\" TEXT\n);\n\nCREATE TABLE cinema (\n    \"Cinema_ID\" TEXT PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Openning_year\" INTEGER,\n    \"Capacity\" INTEGER,\n    \"Location\" TEXT\n);\n\nCREATE TABLE schedule (\n    \"Cinema_ID\" TEXT,\n    \"Film_ID\" INTEGER,\n    \"Date\" TEXT,\n    \"Show_times_per_day\" INTEGER,\n    \"Price\" REAL,\n    FOREIGN KEY (\"Cinema_ID\") REFERENCES cinema (\"Cinema_ID\"),\n    FOREIGN KEY (\"Film_ID\") REFERENCES film (\"Film_ID\")\n);"
    },
    {
        "db_id": "decoration_competition",
        "schema": "CREATE TABLE college (\n    \"College_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Leader_Name\" TEXT,\n    \"College_Location\" TEXT\n);\n\nCREATE TABLE member (\n    \"Member_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Country\" TEXT,\n    \"College_ID\" INTEGER,\n    FOREIGN KEY (\"College_ID\") REFERENCES college (\"College_ID\")\n);\n\nCREATE TABLE round (\n    \"Round_ID\" INTEGER PRIMARY KEY,\n    \"Member_ID\" INTEGER,\n    \"Decoration_Theme\" TEXT,\n    \"Rank_in_Round\" INTEGER,\n    FOREIGN KEY (\"Member_ID\") REFERENCES member (\"Member_ID\")\n);"
      },
      {
        "db_id": "phone_market",
        "schema": "CREATE TABLE phone (\n    \"Phone_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Memory_in_G\" INTEGER,\n    \"Carrier\" TEXT,\n    \"Price\" REAL\n);\n\nCREATE TABLE market (\n    \"Market_ID\" INTEGER PRIMARY KEY,\n    \"District\" TEXT,\n    \"Num_of_employees\" INTEGER,\n    \"Num_of_shops\" INTEGER,\n    \"Ranking\" INTEGER\n);\n\nCREATE TABLE phone_market (\n    \"Market_ID\" INTEGER,\n    \"Phone_ID\" INTEGER,\n    \"Num_of_stock\" INTEGER,\n    FOREIGN KEY (\"Market_ID\") REFERENCES market (\"Market_ID\"),\n    FOREIGN KEY (\"Phone_ID\") REFERENCES phone (\"Phone_ID\")\n);"
      },
      {
        "db_id": "store_product",
        "schema": "CREATE TABLE product (\n    \"product_id\" INTEGER PRIMARY KEY,\n    \"product\" TEXT,\n    \"dimensions\" TEXT,\n    \"dpi\" INTEGER,\n    \"pages_per_minute_color\" INTEGER,\n    \"max_page_size\" TEXT,\n    \"interface\" TEXT\n);\n\nCREATE TABLE store (\n    \"Store_ID\" INTEGER PRIMARY KEY,\n    \"Store_Name\" TEXT,\n    \"Type\" TEXT,\n    \"Area_size\" INTEGER,\n    \"Number_of_product_category\" INTEGER,\n    \"Ranking\" INTEGER\n);\n\nCREATE TABLE district (\n    \"District_ID\" INTEGER PRIMARY KEY,\n    \"District_name\" TEXT,\n    \"Headquartered_City\" TEXT,\n    \"City_Population\" INTEGER,\n    \"City_Area\" INTEGER\n);\n\nCREATE TABLE store_product (\n    \"Store_ID\" INTEGER,\n    \"Product_ID\" INTEGER,\n    FOREIGN KEY (\"Store_ID\") REFERENCES store (\"Store_ID\"),\n    FOREIGN KEY (\"Product_ID\") REFERENCES product (\"product_id\")\n);\n\nCREATE TABLE store_district (\n    \"Store_ID\" INTEGER,\n    \"District_ID\" INTEGER,\n    FOREIGN KEY (\"Store_ID\") REFERENCES store (\"Store_ID\"),\n    FOREIGN KEY (\"District_ID\") REFERENCES district (\"District_ID\")\n);"
      },
      {
        "db_id": "assets_maintenance",
        "schema": "CREATE TABLE third_party_companies (\n    \"company_id\" INTEGER PRIMARY KEY,\n    \"company_type\" TEXT,\n    \"company_name\" TEXT,\n    \"company_address\" TEXT,\n    \"other_company_details\" TEXT\n);\n\nCREATE TABLE maintenance_contracts (\n    \"maintenance_contract_id\" INTEGER PRIMARY KEY,\n    \"maintenance_contract_company_id\" INTEGER,\n    \"contract_start_date\" TEXT,\n    \"contract_end_date\" TEXT,\n    \"other_contract_details\" TEXT,\n    FOREIGN KEY (\"maintenance_contract_company_id\") REFERENCES third_party_companies (\"company_id\")\n);\n\nCREATE TABLE parts (\n    \"part_id\" INTEGER PRIMARY KEY,\n    \"part_name\" TEXT,\n    \"chargeable_yn\" TEXT,\n    \"chargeable_amount\" INTEGER,\n    \"other_part_details\" TEXT\n);\n\nCREATE TABLE skills (\n    \"skill_id\" INTEGER PRIMARY KEY,\n    \"skill_code\" TEXT,\n    \"skill_description\" TEXT\n);\n\nCREATE TABLE staff (\n    \"staff_id\" INTEGER PRIMARY KEY,\n    \"staff_name\" TEXT,\n    \"gender\" TEXT,\n    \"other_staff_details\" TEXT\n);\n\nCREATE TABLE assets (\n    \"asset_id\" INTEGER PRIMARY KEY,\n    \"maintenance_contract_id\" INTEGER,\n    \"supplier_company_id\" INTEGER,\n    \"asset_details\" TEXT,\n    \"asset_make\" TEXT,\n    \"asset_model\" TEXT,\n    \"asset_acquired_date\" TEXT,\n    \"asset_disposed_date\" TEXT,\n    \"other_asset_details\" TEXT,\n    FOREIGN KEY (\"maintenance_contract_id\") REFERENCES maintenance_contracts (\"maintenance_contract_id\")\n);\n\nCREATE TABLE asset_parts (\n    \"asset_id\" INTEGER,\n    \"part_id\" INTEGER,\n    FOREIGN KEY (\"asset_id\") REFERENCES assets (\"asset_id\"),\n    FOREIGN KEY (\"part_id\") REFERENCES parts (\"part_id\")\n);\n\nCREATE TABLE maintenance_engineers (\n    \"engineer_id\" INTEGER PRIMARY KEY,\n    \"company_id\" INTEGER,\n    \"first_name\" TEXT,\n    \"last_name\" TEXT,\n    \"other_details\" TEXT,\n    FOREIGN KEY (\"company_id\") REFERENCES third_party_companies (\"company_id\")\n);\n\nCREATE TABLE engineer_skills (\n    \"engineer_id\" INTEGER,\n    \"skill_id\" INTEGER,\n    FOREIGN KEY (\"engineer_id\") REFERENCES maintenance_engineers (\"engineer_id\"),\n    FOREIGN KEY (\"skill_id\") REFERENCES skills (\"skill_id\")\n);\n\nCREATE TABLE fault_log (\n    \"fault_log_entry_id\" INTEGER PRIMARY KEY,\n    \"asset_id\" INTEGER,\n    \"recorded_by_staff_id\" INTEGER,\n    \"fault_log_entry_datetime\" TEXT,\n    \"fault_description\" TEXT,\n    \"other_fault_details\" TEXT,\n    FOREIGN KEY (\"asset_id\") REFERENCES assets (\"asset_id\"),\n    FOREIGN KEY (\"recorded_by_staff_id\") REFERENCES staff (\"staff_id\")\n);\n\nCREATE TABLE engineer_visits (\n    \"engineer_visit_id\" INTEGER PRIMARY KEY,\n    \"contact_staff_id\" INTEGER,\n    \"engineer_id\" INTEGER,\n    \"fault_log_entry_id\" INTEGER,\n    \"fault_status\" TEXT,\n    \"visit_start_datetime\" TEXT,\n    \"visit_end_datetime\" TEXT,\n    \"other_visit_details\" TEXT,\n    FOREIGN KEY (\"contact_staff_id\") REFERENCES staff (\"staff_id\"),\n    FOREIGN KEY (\"engineer_id\") REFERENCES maintenance_engineers (\"engineer_id\"),\n    FOREIGN KEY (\"fault_log_entry_id\") REFERENCES fault_log (\"fault_log_entry_id\")\n);\n\nCREATE TABLE part_faults (\n    \"part_fault_id\" INTEGER PRIMARY KEY,\n    \"part_id\" INTEGER,\n    \"fault_short_name\" TEXT,\n    \"fault_description\" TEXT,\n    \"other_fault_details\" TEXT,\n    FOREIGN KEY (\"part_id\") REFERENCES parts (\"part_id\")\n);\n\nCREATE TABLE fault_log_parts (\n    \"fault_log_entry_id\" INTEGER,\n    \"part_fault_id\" INTEGER,\n    \"fault_status\" TEXT,\n    FOREIGN KEY (\"fault_log_entry_id\") REFERENCES fault_log (\"fault_log_entry_id\"),\n    FOREIGN KEY (\"part_fault_id\") REFERENCES part_faults (\"part_fault_id\")\n);\n\nCREATE TABLE skills_required_to_fix (\n    \"part_fault_id\" INTEGER,\n    \"skill_id\" INTEGER,\n    FOREIGN KEY (\"part_fault_id\") REFERENCES part_faults (\"part_fault_id\"),\n    FOREIGN KEY (\"skill_id\") REFERENCES skills (\"skill_id\")\n);"
    },
    {
        "db_id": "student_assessment",
        "schema": "CREATE TABLE addresses (\n    \"address_id\" INTEGER PRIMARY KEY,\n    \"line_1\" TEXT,\n    \"line_2\" TEXT,\n    \"city\" TEXT,\n    \"zip_postcode\" TEXT,\n    \"state_province_county\" TEXT,\n    \"country\" TEXT\n);\n\nCREATE TABLE people (\n    \"person_id\" INTEGER PRIMARY KEY,\n    \"first_name\" TEXT,\n    \"middle_name\" TEXT,\n    \"last_name\" TEXT,\n    \"cell_mobile_number\" TEXT,\n    \"email_address\" TEXT,\n    \"login_name\" TEXT,\n    \"password\" TEXT\n);\n\nCREATE TABLE students (\n    \"student_id\" INTEGER PRIMARY KEY,\n    \"student_details\" TEXT\n);\n\nCREATE TABLE courses (\n    \"course_id\" INTEGER PRIMARY KEY,\n    \"course_name\" TEXT,\n    \"course_description\" TEXT,\n    \"other_details\" TEXT\n);\n\nCREATE TABLE people_addresses (\n    \"person_address_id\" INTEGER PRIMARY KEY,\n    \"person_id\" INTEGER,\n    \"address_id\" INTEGER,\n    \"date_from\" TEXT,\n    \"date_to\" TEXT,\n    FOREIGN KEY (\"person_id\") REFERENCES people (\"person_id\"),\n    FOREIGN KEY (\"address_id\") REFERENCES addresses (\"address_id\")\n);\n\nCREATE TABLE student_course_registrations (\n    \"student_id\" INTEGER,\n    \"course_id\" INTEGER,\n    \"registration_date\" TEXT,\n    FOREIGN KEY (\"student_id\") REFERENCES students (\"student_id\"),\n    FOREIGN KEY (\"course_id\") REFERENCES courses (\"course_id\")\n);\n\nCREATE TABLE student_course_attendance (\n    \"student_id\" INTEGER,\n    \"course_id\" INTEGER,\n    \"date_of_attendance\" TEXT,\n    FOREIGN KEY (\"student_id\") REFERENCES students (\"student_id\"),\n    FOREIGN KEY (\"course_id\") REFERENCES courses (\"course_id\")\n);\n\nCREATE TABLE candidates (\n    \"candidate_id\" INTEGER PRIMARY KEY,\n    \"candidate_details\" TEXT\n);\n\nCREATE TABLE candidate_assessments (\n    \"candidate_id\" INTEGER,\n    \"qualification\" TEXT,\n    \"assessment_date\" TEXT,\n    \"asessment_outcome_code\" TEXT,\n    FOREIGN KEY (\"candidate_id\") REFERENCES candidates (\"candidate_id\")\n);"
    },
    {
        "db_id": "dog_kennels",
        "schema": "CREATE TABLE breeds (\n    \"breed_code\" TEXT PRIMARY KEY,\n    \"breed_name\" TEXT\n);\n\nCREATE TABLE charges (\n    \"charge_id\" INTEGER PRIMARY KEY,\n    \"charge_type\" TEXT,\n    \"charge_amount\" REAL\n);\n\nCREATE TABLE sizes (\n    \"size_code\" TEXT PRIMARY KEY,\n    \"size_description\" TEXT\n);\n\nCREATE TABLE treatment_types (\n    \"treatment_type_code\" TEXT PRIMARY KEY,\n    \"treatment_type_description\" TEXT\n);\n\nCREATE TABLE owners (\n    \"owner_id\" INTEGER PRIMARY KEY,\n    \"first_name\" TEXT,\n    \"last_name\" TEXT,\n    \"street\" TEXT,\n    \"city\" TEXT,\n    \"state\" TEXT,\n    \"zip_code\" TEXT,\n    \"email_address\" TEXT,\n    \"home_phone\" TEXT,\n    \"cell_number\" TEXT\n);\n\nCREATE TABLE dogs (\n    \"dog_id\" INTEGER PRIMARY KEY,\n    \"owner_id\" INTEGER,\n    \"abandoned_yn\" TEXT,\n    \"breed_code\" TEXT,\n    \"size_code\" TEXT,\n    \"name\" TEXT,\n    \"age\" INTEGER,\n    \"date_of_birth\" TEXT,\n    \"gender\" TEXT,\n    \"weight\" REAL,\n    \"date_arrived\" TEXT,\n    \"date_adopted\" TEXT,\n    \"date_departed\" TEXT,\n    FOREIGN KEY (\"owner_id\") REFERENCES owners (\"owner_id\"),\n    FOREIGN KEY (\"breed_code\") REFERENCES breeds (\"breed_code\"),\n    FOREIGN KEY (\"size_code\") REFERENCES sizes (\"size_code\")\n);\n\nCREATE TABLE professionals (\n    \"professional_id\" INTEGER PRIMARY KEY,\n    \"role_code\" TEXT,\n    \"first_name\" TEXT,\n    \"street\" TEXT,\n    \"city\" TEXT,\n    \"state\" TEXT,\n    \"zip_code\" TEXT,\n    \"last_name\" TEXT,\n    \"email_address\" TEXT,\n    \"home_phone\" TEXT,\n    \"cell_number\" TEXT\n);\n\nCREATE TABLE treatments (\n    \"treatment_id\" INTEGER PRIMARY KEY,\n    \"dog_id\" INTEGER,\n    \"professional_id\" INTEGER,\n    \"treatment_type_code\" TEXT,\n    \"date_of_treatment\" TEXT,\n    \"cost_of_treatment\" REAL,\n    FOREIGN KEY (\"dog_id\") REFERENCES dogs (\"dog_id\"),\n    FOREIGN KEY (\"professional_id\") REFERENCES professionals (\"professional_id\"),\n    FOREIGN KEY (\"treatment_type_code\") REFERENCES treatment_types (\"treatment_type_code\")\n);"
    },
    {
        "db_id": "music_1",
        "schema": "CREATE TABLE genre (\n    \"g_name\" TEXT PRIMARY KEY,\n    \"rating\" TEXT,\n    \"most_popular_in\" TEXT\n);\n\nCREATE TABLE artist (\n    \"artist_name\" TEXT PRIMARY KEY,\n    \"country\" TEXT,\n    \"gender\" TEXT,\n    \"preferred_genre\" TEXT\n);\n\nCREATE TABLE files (\n    \"f_id\" INTEGER PRIMARY KEY,\n    \"artist_name\" TEXT,\n    \"file_size\" INTEGER,\n    \"duration\" TEXT,\n    \"formats\" TEXT,\n    FOREIGN KEY (\"artist_name\") REFERENCES artist (\"artist_name\")\n);\n\nCREATE TABLE song (\n    \"song_name\" TEXT PRIMARY KEY,\n    \"artist_name\" TEXT,\n    \"country\" TEXT,\n    \"f_id\" INTEGER,\n    \"genre_is\" TEXT,\n    \"rating\" INTEGER,\n    \"languages\" TEXT,\n    \"releasedate\" TEXT,\n    \"resolution\" INTEGER,\n    FOREIGN KEY (\"artist_name\") REFERENCES artist (\"artist_name\"),\n    FOREIGN KEY (\"f_id\") REFERENCES files (\"f_id\")\n);"
    },
    {
        "db_id": "company_employee",
        "schema": "CREATE TABLE people (\n    \"People_ID\" TEXT PRIMARY KEY,\n    \"Age\" INTEGER,\n    \"Name\" TEXT,\n    \"Nationality\" TEXT,\n    \"Graduation_College\" TEXT\n);\n\nCREATE TABLE company (\n    \"Company_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Headquarters\" TEXT,\n    \"Industry\" TEXT,\n    \"Sales_in_Billion\" REAL,\n    \"Profits_in_Billion\" REAL,\n    \"Assets_in_Billion\" REAL,\n    \"Market_Value_in_Billion\" REAL\n);\n\nCREATE TABLE employment (\n    \"Company_ID\" INTEGER,\n    \"People_ID\" TEXT,\n    \"Year_working\" INTEGER,\n    FOREIGN KEY (\"Company_ID\") REFERENCES company (\"Company_ID\"),\n    FOREIGN KEY (\"People_ID\") REFERENCES people (\"People_ID\")\n);"
    },
    {
        "db_id": "farm",
        "schema": "CREATE TABLE city (\n   \"City_ID\" INTEGER PRIMARY KEY,\n    \"Official_Name\" TEXT,\n    \"Status\" TEXT,\n    \"Area_km_2\" REAL,\n    \"Population\" INTEGER,\n    \"Census_Ranking\" INTEGER\n);\n\nCREATE TABLE farm (\n    \"Farm_ID\" INTEGER PRIMARY KEY,\n    \"Year\" INTEGER,\n    \"Total_Horses\" INTEGER,\n    \"Working_Horses\" INTEGER,\n    \"Total_Cattle\" INTEGER,\n    \"Oxen\" INTEGER,\n    \"Bulls\" INTEGER,\n    \"Cows\" INTEGER,\n    \"Pigs\" INTEGER,\n    \"Sheep_and_Goats\" INTEGER\n);\n\nCREATE TABLE farm_competition (\n    \"Competition_ID\" INTEGER PRIMARY KEY,\n    \"Year\" INTEGER,\n    \"Theme\" TEXT,\n    \"Host_city_ID\" INTEGER,\n    \"Hosts\" TEXT,\n    FOREIGN KEY (\"Host_city_ID\") REFERENCES city (\"City_ID\")\n);\n\nCREATE TABLE competition_record (\n    \"Competition_ID\" INTEGER,\n    \"Farm_ID\" INTEGER,\n    \"Rank\" INTEGER,\n    FOREIGN KEY (\"Competition_ID\") REFERENCES farm_competition (\"Competition_ID\"),\n    FOREIGN KEY (\"Farm_ID\") REFERENCES farm (\"Farm_ID\")\n);"
    },
    {
        "db_id": "solvency_ii",
        "schema": "CREATE TABLE addresses (\n    \"Address_ID\" INTEGER PRIMARY KEY,\n    \"address_details\" TEXT\n);\n\nCREATE TABLE locations (\n    \"Location_ID\" INTEGER PRIMARY KEY,\n    \"Other_Details\" TEXT\n);\n\nCREATE TABLE products (\n    \"Product_ID\" INTEGER PRIMARY KEY,\n    \"Product_Type_Code\" TEXT,\n    \"Product_Name\" TEXT,\n    \"Product_Price\" REAL\n);\n\nCREATE TABLE parties (\n    \"Party_ID\" INTEGER PRIMARY KEY,\n    \"Party_Details\" TEXT\n);\n\nCREATE TABLE assets (\n    \"Asset_ID\" INTEGER PRIMARY KEY,\n    \"Other_Details\" TEXT\n);\n\nCREATE TABLE channels (\n    \"Channel_ID\" INTEGER PRIMARY KEY,\n    \"Other_Details\" TEXT\n);\n\nCREATE TABLE finances (\n    \"Finance_ID\" INTEGER PRIMARY KEY,\n    \"Other_Details\" TEXT\n);\n\nCREATE TABLE events (\n    \"Event_ID\" INTEGER PRIMARY KEY,\n    \"Address_ID\" INTEGER,\n    \"Channel_ID\" INTEGER,\n    \"Event_Type_Code\" TEXT,\n    \"Finance_ID\" INTEGER,\n    \"Location_ID\" INTEGER,\n    FOREIGN KEY (\"Address_ID\") REFERENCES addresses (\"Address_ID\"),\n    FOREIGN KEY (\"Channel_ID\") REFERENCES channels (\"Channel_ID\"),\n    FOREIGN KEY (\"Finance_ID\") REFERENCES finances (\"Finance_ID\"),\n    FOREIGN KEY (\"Location_ID\") REFERENCES locations (\"Location_ID\")\n);\n\nCREATE TABLE products_in_events (\n    \"Product_in_Event_ID\" INTEGER PRIMARY KEY,\n    \"Event_ID\" INTEGER,\n    \"Product_ID\" INTEGER,\n    FOREIGN KEY (\"Event_ID\") REFERENCES events (\"Event_ID\"),\n    FOREIGN KEY (\"Product_ID\") REFERENCES products (\"Product_ID\")\n);\n\nCREATE TABLE parties_in_events (\n    \"Party_ID\" INTEGER,\n    \"Event_ID\" INTEGER,\n    \"Role_Code\" TEXT,\n    FOREIGN KEY (\"Party_ID\") REFERENCES parties (\"Party_ID\"),\n    FOREIGN KEY (\"Event_ID\") REFERENCES events (\"Event_ID\")\n);\n\nCREATE TABLE agreements (\n    \"Document_ID\" INTEGER PRIMARY KEY,\n    \"Event_ID\" INTEGER,\n    FOREIGN KEY (\"Event_ID\") REFERENCES events (\"Event_ID\")\n);\n\nCREATE TABLE assets_in_events (\n    \"Asset_ID\" INTEGER,\n    \"Event_ID\" INTEGER,\n    FOREIGN KEY (\"Asset_ID\") REFERENCES assets (\"Asset_ID\"),\n    FOREIGN KEY (\"Event_ID\") REFERENCES events (\"Event_ID\")\n);"
    },
    {
        "db_id": "city_record",
        "schema": "CREATE TABLE city (\n    \"City_ID\" INTEGER PRIMARY KEY,\n    \"City\" TEXT,\n    \"Hanzi\" TEXT,\n    \"Hanyu_Pinyin\" TEXT,\n    \"Regional_Population\" INTEGER,\n    \"GDP\" REAL\n);\n\nCREATE TABLE match (\n    \"Match_ID\" INTEGER PRIMARY KEY,\n    \"Date\" INTEGER,\n    \"Venue\" TEXT,\n    \"Score\" TEXT,\n    \"Result\" TEXT,\n    \"Competition\" TEXT\n);\n\nCREATE TABLE temperature (\n    \"City_ID\" INTEGER,\n    \"Jan\" INTEGER,\n    \"Feb\" INTEGER,\n    \"Mar\" INTEGER,\n    \"Apr\" INTEGER,\n    \"Jun\" INTEGER,\n    \"Jul\" INTEGER,\n    \"Aug\" INTEGER,\n    \"Sep\" INTEGER,\n    \"Oct\" INTEGER,\n    \"Nov\" INTEGER,\n    \"Dec\" INTEGER,\n    FOREIGN KEY (\"City_ID\") REFERENCES city (\"City_ID\")\n);\n\nCREATE TABLE hosting_city (\n    \"Year\" INTEGER,\n    \"Match_ID\" INTEGER,\n    \"Host_City\" INTEGER,\n    FOREIGN KEY (\"Match_ID\") REFERENCES match (\"Match_ID\")\n);"
    },
    {
        "db_id": "swimming",
        "schema": "CREATE TABLE swimmer (\n    \"ID\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"Nationality\" TEXT,\n    \"meter_100\" REAL,\n    \"meter_200\" REAL,\n    \"meter_300\" REAL,\n    \"meter_400\" REAL,\n    \"meter_500\" REAL,\n    \"meter_600\" REAL,\n    \"meter_700\" REAL,\n    \"Time\" TEXT\n);\n\nCREATE TABLE stadium (\n    \"ID\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"Capacity\" INTEGER,\n    \"City\" TEXT,\n    \"Country\" TEXT,\n    \"Opening_year\" INTEGER\n);\n\nCREATE TABLE event (\n    \"ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Stadium_ID\" INTEGER,\n    \"Year\" INTEGER,\n    FOREIGN KEY (\"Stadium_ID\") REFERENCES stadium (\"ID\")\n);\n\nCREATE TABLE record (\n    \"ID\" INTEGER PRIMARY KEY,\n    \"Result\" TEXT,\n    \"Swimmer_ID\" INTEGER,\n    \"Event_ID\" INTEGER,\n    FOREIGN KEY (\"Swimmer_ID\") REFERENCES swimmer (\"ID\"),\n    FOREIGN KEY (\"Event_ID\") REFERENCES event (\"ID\")\n);"
    },
    {
        "db_id": "flight_2",
        "schema": "CREATE TABLE airlines (\n    \"uid\" INTEGER PRIMARY KEY,\n    \"Airline\" TEXT,\n    \"Abbreviation\" TEXT,\n    \"Country\" TEXT\n);\n\nCREATE TABLE airports (\n    \"AirportCode\" TEXT PRIMARY KEY,\n    \"AirportName\" TEXT,\n    \"Country\" TEXT,\n    \"CountryAbbrev\" TEXT,\n    \"City\" TEXT\n);\n\nCREATE TABLE flights (\n    \"Airline\" TEXT,\n    \"FlightNo\" INTEGER,\n    \"SourceAirport\" TEXT,\n    \"DestAirport\" TEXT,\n    FOREIGN KEY (\"Airline\") REFERENCES airlines (\"uid\"),\n    FOREIGN KEY (\"SourceAirport\") REFERENCES airports (\"AirportCode\"),\n    FOREIGN KEY (\"DestAirport\") REFERENCES airports (\"AirportCode\")\n);"
    },
    {
        "db_id": "election",
        "schema": "CREATE TABLE county (\n    \"County_Id\" INTEGER PRIMARY KEY,\n    \"County_name\" TEXT,\n    \"Population\" INTEGER,\n    \"Zip_code\" TEXT\n);\n\nCREATE TABLE party (\n    \"Party_ID\" INTEGER PRIMARY KEY,\n    \"Year\" INTEGER,\n    \"Party\" TEXT,\n    \"Governor\" TEXT,\n    \"Lieutenant_Governor\" TEXT,\n    \"Comptroller\" TEXT,\n    \"Attorney_General\" TEXT,\n    \"US_Senate\" TEXT\n);\n\nCREATE TABLE election (\n    \"Election_ID\" INTEGER PRIMARY KEY,\n    \"Counties_Represented\" TEXT,\n    \"District\" INTEGER,\n    \"Delegate\" TEXT,\n    \"Party\" TEXT,\n    \"First_Elected\" INTEGER,\n    \"Committee\" TEXT,\n    FOREIGN KEY (\"Party_ID\") REFERENCES party (\"Party_ID\")\n);"
  },
  {
    "db_id": "manufactory_1",
    "schema": "CREATE TABLE Manufacturers (\n    \"Code\" TEXT PRIMARY KEY,\n    \"Name\" INTEGER,\n    \"Headquarter\" TEXT,\n    \"Founder\" TEXT,\n    \"Revenue\" INTEGER\n);\n\nCREATE TABLE Products (\n    \"Code\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Price\" REAL,\n    \"Manufacturer\" TEXT,\n    FOREIGN KEY (\"Manufacturer\") REFERENCES Manufacturers (\"Code\")\n);"
  },
  {
    "db_id": "debate",
    "schema": "CREATE TABLE people (\n    \"People_ID\" INTEGER PRIMARY KEY,\n    \"District\" TEXT,\n    \"Name\" TEXT,\n    \"Party\" TEXT,\n    \"Age\" INTEGER\n);\n\nCREATE TABLE debate (\n    \"Debate_ID\" INTEGER PRIMARY KEY,\n    \"Date\" INTEGER,\n    \"Venue\" TEXT,\n    \"Num_of_Audience\" INTEGER\n);\n\nCREATE TABLE debate_people (\n    \"Debate_ID\" INTEGER,\n    \"Affirmative\" INTEGER,\n    \"Negative\" INTEGER,\n    \"If_Affirmative_Win\" TEXT,\n    FOREIGN KEY (\"Debate_ID\") REFERENCES debate (\"Debate_ID\"),\n    FOREIGN KEY (\"Affirmative\") REFERENCES people (\"People_ID\"),\n    FOREIGN KEY (\"Negative\") REFERENCES people (\"People_ID\")\n);"
  },
  {
    "db_id": "network_2",
    "schema": "CREATE TABLE Person (\n    \"name\" TEXT PRIMARY KEY,\n    \"age\" TEXT,\n    \"city\" TEXT,\n    \"gender\" TEXT,\n    \"job\" TEXT\n);\n\nCREATE TABLE PersonFriend (\n    \"name\" TEXT,\n    \"friend\" TEXT,\n    \"year\" INTEGER,\n    FOREIGN KEY (\"name\") REFERENCES Person (\"name\"),\n    FOREIGN KEY (\"friend\") REFERENCES Person (\"name\")\n);"
  },
  {
    "db_id": "local_govt_in_alabama",
    "schema": "CREATE TABLE services (\n    \"Service_ID\" INTEGER PRIMARY KEY,\n    \"Service_Type_Code\" TEXT\n);\n\nCREATE TABLE participants (\n    \"Participant_ID\" INTEGER PRIMARY KEY,\n    \"Participant_Type_Code\" TEXT,\n    \"Participant_Details\" TEXT\n);\n\nCREATE TABLE events (\n    \"Event_ID\" INTEGER PRIMARY KEY,\n    \"Service_ID\" INTEGER,\n    \"Event_Details\" TEXT,\n    FOREIGN KEY (\"Service_ID\") REFERENCES services (\"Service_ID\")\n);\n\nCREATE TABLE participants_in_events (\n    \"Event_ID\" INTEGER,\n    \"Participant_ID\" INTEGER,\n    FOREIGN KEY (\"Event_ID\") REFERENCES events (\"Event_ID\"),\n    FOREIGN KEY (\"Participant_ID\") REFERENCES participants (\"Participant_ID\")\n);"
  },
  {
    "db_id": "climbing",
    "schema": "CREATE TABLE mountain (\n    \"Mountain_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Height\" INTEGER,\n    \"Prominence\" INTEGER,\n    \"Range\" TEXT,\n    \"Country\" TEXT\n);\n\nCREATE TABLE climber (\n    \"Climber_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Country\" TEXT,\n    \"Time\" INTEGER,\n    \"Points\" INTEGER,\n    \"Mountain_ID\" INTEGER,\n    FOREIGN KEY (\"Mountain_ID\") REFERENCES mountain (\"Mountain_ID\")\n);"
  },
  {
    "db_id": "e_learning",
    "schema": "CREATE TABLE Course_Authors_and_Tutors (\n    \"author_id\" INTEGER PRIMARY KEY,\n    \"author_tutor_ATB\" TEXT,\n    \"login_name\" TEXT,\n    \"password\" TEXT,\n    \"personal_name\" TEXT,\n    \"middle_name\" TEXT,\n    \"family_name\" TEXT,\n    \"gender_mf\" TEXT,\n    \"address_line_1\" TEXT\n);\n\nCREATE TABLE Students (\n    \"student_id\" INTEGER PRIMARY KEY,\n    \"date_of_registration\" TEXT,\n    \"date_of_latest_logon\" TEXT,\n    \"login_name\" TEXT,\n    \"password\" TEXT,\n    \"personal_name\" TEXT,\n    \"middle_name\" TEXT,\n    \"family_name\" TEXT\n);\n\nCREATE TABLE Subjects (\n    \"subject_id\" INTEGER PRIMARY KEY,\n    \"subject_name\" TEXT\n);\n\nCREATE TABLE Courses (\n    \"course_id\" INTEGER PRIMARY KEY,\n    \"author_id\" INTEGER,\n    \"subject_id\" INTEGER,\n    \"course_name\" TEXT,\n    \"course_description\" TEXT,\n    FOREIGN KEY (\"author_id\") REFERENCES Course_Authors_and_Tutors (\"author_id\"),\n    FOREIGN KEY (\"subject_id\") REFERENCES Subjects (\"subject_id\")\n);\n\nCREATE TABLE Student_Course_Enrolment (\n    \"registration_id\" INTEGER PRIMARY KEY,\n    \"student_id\" INTEGER,\n    \"course_id\" INTEGER,\n    \"date_of_enrolment\" TEXT,\n    \"date_of_completion\" TEXT,\n    FOREIGN KEY (\"student_id\") REFERENCES Students (\"student_id\"),\n    FOREIGN KEY (\"course_id\") REFERENCES Courses (\"course_id\")\n);\n\nCREATE TABLE Student_Tests_Taken (\n    \"registration_id\" INTEGER,\n    \"date_test_taken\" TEXT,\n    \"test_result\" INTEGER,\n    FOREIGN KEY (\"registration_id\") REFERENCES Student_Course_Enrolment (\"registration_id\")\n);"
  },
  {
    "db_id": "scientist_1",
    "schema": "CREATE TABLE Scientists (\n    \"SSN\" TEXT PRIMARY KEY,\n    \"Name\" TEXT\n);\n\nCREATE TABLE Projects (\n    \"Code\" TEXT PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Hours\" INTEGER\n);\n\nCREATE TABLE AssignedTo (\n    \"Scientist\" TEXT,\n    \"Project\" TEXT,\n    FOREIGN KEY (\"Scientist\") REFERENCES Scientists (\"SSN\"),\n    FOREIGN KEY (\"Project\") REFERENCES Projects (\"Code\")\n);"
  },
  {
    "db_id": "ship_1",
    "schema": "CREATE TABLE captain (\n    \"Captain_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Ship_ID\" INTEGER,\n    \"age\" INTEGER,\n    \"Class\" TEXT,\n    \"Rank\" TEXT,\n    FOREIGN KEY (\"Ship_ID\") REFERENCES Ship (\"Ship_ID\")\n);\n\nCREATE TABLE Ship (\n    \"Ship_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Type\" TEXT,\n    \"Built_Year\" INTEGER,\n    \"Class\" TEXT,\n    \"Flag\" TEXT\n);"
  },
  {
    "db_id": "entertainment_awards",
    "schema": "CREATE TABLE festival_detail (\n    \"Festival_ID\" INTEGER PRIMARY KEY,\n    \"Festival_Name\" TEXT,\n    \"Chair_Name\" TEXT,\n    \"Location\" TEXT,\n    \"Year\" INTEGER,\n    \"Num_of_Audience\" INTEGER\n);\n\nCREATE TABLE artwork (\n    \"Artwork_ID\" INTEGER PRIMARY KEY,\n    \"Type\" INTEGER,\n    \"Name\" TEXT\n);\n\nCREATE TABLE nomination (\n    \"Artwork_ID\" INTEGER,\n    \"Festival_ID\" INTEGER,\n    \"Result\" TEXT,\n    FOREIGN KEY (\"Artwork_ID\") REFERENCES artwork (\"Artwork_ID\"),\n    FOREIGN KEY (\"Festival_ID\") REFERENCES festival_detail (\"Festival_ID\")\n);"
  },
  {
    "db_id": "allergy_1",
    "schema": "CREATE TABLE Allergy_Type (\n    \"Allergy\" TEXT PRIMARY KEY,\n    \"AllergyType\" TEXT\n);\n\nCREATE TABLE Has_Allergy (\n    \"StuID\" INTEGER,\n    \"Allergy\" TEXT,\n    FOREIGN KEY (\"StuID\") REFERENCES Student (\"StuID\")\n);\n\nCREATE TABLE Student (\n    \"StuID\" INTEGER PRIMARY KEY,\n    \"LName\" TEXT,\n    \"Fname\" TEXT,\n    \"Age\" INTEGER,\n    \"Sex\" TEXT,\n    \"Major\" TEXT,\n    \"Advisor\" TEXT,\n    \"city_code\" INTEGER\n);"
  },
  {
    "db_id": "imdb",
    "schema": "CREATE TABLE actor (\n    \"aid\" TEXT PRIMARY KEY,\n    \"gender\" INTEGER,\n    \"name\" TEXT,\n    \"nationality\" TEXT,\n    \"birth_city\" TEXT,\n    \"birth_year\" INTEGER\n);\n\nCREATE TABLE copyright (\n    \"id\" INTEGER PRIMARY KEY,\n    \"msid\" INTEGER,\n    \"cid\" INTEGER\n);\n\nCREATE TABLE cast (\n    \"id\" INTEGER PRIMARY KEY,\n    \"msid\" INTEGER,\n    \"aid\" TEXT,\n    \"role\" TEXT,\n    FOREIGN KEY (\"aid\") REFERENCES actor (\"aid\")\n);\n\nCREATE TABLE genre (\n    \"gid\" INTEGER PRIMARY KEY,\n    \"genre\" TEXT\n);\n\nCREATE TABLE classification (\n    \"id\" INTEGER PRIMARY KEY,\n    \"msid\" INTEGER,\n    \"gid\" INTEGER,\n    FOREIGN KEY (\"gid\") REFERENCES genre (\"gid\")\n);\n\nCREATE TABLE company (\n    \"id\" INTEGER PRIMARY KEY,\n    \"msid\" INTEGER,\n    \"name\" TEXT,\n    \"country_code\" TEXT\n);\n\nCREATE TABLE director (\n    \"did\" INTEGER PRIMARY KEY,\n    \"gender\" INTEGER,\n    \"name\" TEXT,\n    \"nationality\" TEXT,\n    \"birth_city\" TEXT,\n    \"birth_year\" INTEGER\n);\n\nCREATE TABLE producer (\n    \"pid\" INTEGER PRIMARY KEY,\n    \"gender\" INTEGER,\n    \"name\" TEXT,\n    \"nationality\" TEXT,\n    \"birth_city\" TEXT,\n    \"birth_year\" INTEGER\n);\n\nCREATE TABLE directed_by (\n    \"id\" INTEGER PRIMARY KEY,\n    \"msid\" INTEGER,\n    \"did\" INTEGER,\n    FOREIGN KEY (\"did\") REFERENCES director (\"did\")\n);\n\nCREATE TABLE keyword (\n    \"id\" INTEGER PRIMARY KEY,\n    \"keyword\" TEXT\n);\n\nCREATE TABLE made_by (\n    \"id\" INTEGER PRIMARY KEY,\n    \"msid\" INTEGER,\n    \"pid\" INTEGER,\n    FOREIGN KEY (\"pid\") REFERENCES producer (\"pid\")\n);\n\nCREATE TABLE movie (\n    \"id\" INTEGER PRIMARY KEY,\n    \"msid\" INTEGER,\n    \"gid\" INTEGER,\n    \"did\" INTEGER,\n    \"keyword\" TEXT,\n    \"name\" TEXT,\n    \"country_code\" TEXT,\n    \"release_year\" INTEGER,\n    \"title_aka\" TEXT,\n    \"budget\" REAL,\n    FOREIGN KEY (\"gid\") REFERENCES genre (\"gid\"),\n    FOREIGN KEY (\"did\") REFERENCES director (\"did\")\n);\n\nCREATE TABLE tags (\n    \"id\" INTEGER PRIMARY KEY,\n    \"msid\" INTEGER,\n    \"kid\" INTEGER\n);\n\nCREATE TABLE tv_series (\n    \"sid\" INTEGER PRIMARY KEY,\n    \"title\" TEXT,\n    \"release_year\" INTEGER,\n    \"num_of_seasons\" INTEGER,\n    \"num_of_episodes\" INTEGER,\n    \"title_aka\" TEXT,\n    \"budget\" REAL\n);\n\nCREATE TABLE writer (\n    \"wid\" INTEGER PRIMARY KEY,\n    \"gender\" INTEGER,\n    \"name\" TEXT,\n    \"nationality\" TEXT,\n    \"num_of_episodes\" INTEGER,\n    \"birth_city\" TEXT,\n    \"birth_year\" INTEGER\n);\n\nCREATE TABLE written_by (\n    \"id\" INTEGER PRIMARY KEY,\n    \"msid\" INTEGER,\n    \"wid\" INTEGER,\n    FOREIGN KEY (\"wid\") REFERENCES writer (\"wid\")\n);"
  },
    {
        "db_id": "products_for_hire",
        "schema": "CREATE TABLE Discount_Coupons (\n    \"coupon_id\" INTEGER PRIMARY KEY,\n    \"date_issued\" TEXT,\n    \"coupon_amount\" REAL\n);\n\nCREATE TABLE Customers (\n    \"customer_id\" INTEGER PRIMARY KEY,\n    \"coupon_id\" INTEGER,\n    \"good_or_bad_customer\" TEXT,\n    \"first_name\" TEXT,\n    \"last_name\" TEXT,\n    \"gender_mf\" TEXT,\n    \"date_became_customer\" TEXT,\n    \"date_last_hire\" TEXT,\n    FOREIGN KEY (\"coupon_id\") REFERENCES Discount_Coupons (\"coupon_id\")\n);\n\nCREATE TABLE Bookings (\n    \"booking_id\" INTEGER PRIMARY KEY,\n    \"customer_id\" INTEGER,\n    \"booking_status_code\" TEXT,\n    \"returned_damaged_yn\" TEXT,\n    \"booking_start_date\" TEXT,\n    \"booking_end_date\" TEXT,\n    \"count_hired\" INTEGER,\n    \"amount_payable\" REAL,\n    \"amount_of_discount\" TEXT,\n    \"amount_outstanding\" TEXT,\n    \"amount_of_refund\" TEXT,\n    FOREIGN KEY (\"customer_id\") REFERENCES Customers (\"customer_id\")\n);\n\nCREATE TABLE Products_for_Hire (\n    \"product_id\" INTEGER PRIMARY KEY,\n    \"product_type_code\" TEXT,\n    \"daily_hire_cost\" REAL,\n    \"product_name\" TEXT,\n    \"product_description\" TEXT\n);\n\nCREATE TABLE Payments (\n    \"payment_id\" INTEGER PRIMARY KEY,\n    \"booking_id\" INTEGER,\n    \"customer_id\" INTEGER,\n    \"payment_type_code\" TEXT,\n    \"amount_paid_in_full_yn\" TEXT,\n    \"payment_date\" TEXT,\n    \"amount_due\" REAL,\n    \"amount_paid\" REAL,\n    FOREIGN KEY (\"booking_id\") REFERENCES Bookings (\"booking_id\"),\n    FOREIGN KEY (\"customer_id\") REFERENCES Customers (\"customer_id\")\n);\n\nCREATE TABLE Products_Booked (\n    \"booking_id\" INTEGER,\n    \"product_id\" INTEGER,\n    \"returned_yn\" TEXT,\n    \"returned_late_yn\" TEXT,\n    \"booked_count\" INTEGER,\n    \"booked_amount\" REAL,\n    FOREIGN KEY (\"booking_id\") REFERENCES Bookings (\"booking_id\"),\n    FOREIGN KEY (\"product_id\") REFERENCES Products_for_Hire (\"product_id\")\n);\n\nCREATE VIEW Product_Availability AS\n    SELECT p.product_id,\n           p.booking_id,\n           p.status_date,\n           p.available_yn\n    FROM Products_for_Hire p\n    JOIN Products_Booked pb ON p.product_id = pb.product_id;"
        },
        {
        "db_id": "candidate_poll",
        "schema": "CREATE TABLE candidate (\n    \"Candidate_ID\" INTEGER PRIMARY KEY,\n    \"People_ID\" INTEGER,\n    \"Poll_Source\" TEXT,\n    \"Date\" TEXT,\n    \"Support_rate\" INTEGER,\n    \"Consider_rate\" INTEGER,\n    \"Oppose_rate\" INTEGER,\n    \"Unsure_rate\" INTEGER,\n    FOREIGN KEY (\"People_ID\") REFERENCES people (\"People_ID\")\n);\n\nCREATE TABLE people (\n    \"People_ID\" INTEGER PRIMARY KEY,\n    \"Sex\" TEXT,\n    \"Name\" TEXT,\n    \"Date_of_Birth\" TEXT,\n    \"Height\" INTEGER,\n    \"Weight\" INTEGER\n);"
        },
        {
        "db_id": "chinook_1",
        "schema": "CREATE TABLE Album (\n    \"AlbumId\" INTEGER PRIMARY KEY,\n    \"Title\" TEXT,\n    \"ArtistId\" INTEGER,\n    FOREIGN KEY (\"ArtistId\") REFERENCES Artist (\"ArtistId\")\n);\n\nCREATE TABLE Artist (\n    \"ArtistId\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT\n);\n\nCREATE TABLE Customer (\n    \"CustomerId\" INTEGER PRIMARY KEY,\n    \"FirstName\" TEXT,\n    \"LastName\" TEXT,\n    \"Company\" TEXT,\n    \"Address\" TEXT,\n    \"City\" TEXT,\n    \"State\" TEXT,\n    \"Country\" TEXT,\n    \"PostalCode\" TEXT,\n    \"Phone\" TEXT,\n    \"Fax\" TEXT,\n    \"Email\" TEXT,\n    \"SupportRepId\" INTEGER\n);\n\nCREATE TABLE Employee (\n    \"EmployeeId\" INTEGER PRIMARY KEY,\n    \"LastName\" TEXT,\n    \"FirstName\" TEXT,\n    \"Title\" TEXT,\n    \"ReportsTo\" INTEGER,\n    \"BirthDate\" TEXT,\n    \"HireDate\" TEXT,\n    \"Address\" TEXT,\n    \"City\" TEXT,\n    \"State\" TEXT,\n    \"Country\" TEXT,\n    \"PostalCode\" TEXT,\n    \"Phone\" TEXT,\n    \"Fax\" TEXT,\n    \"Email\" TEXT\n);\n\nCREATE TABLE Genre (\n    \"GenreId\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT\n);\n\nCREATE TABLE Invoice (\n    \"InvoiceId\" INTEGER PRIMARY KEY,\n    \"CustomerId\" INTEGER,\n    \"InvoiceDate\" TEXT,\n    \"BillingAddress\" TEXT,\n    \"BillingCity\" TEXT,\n    \"BillingState\" TEXT,\n    \"BillingCountry\" TEXT,\n    \"BillingPostalCode\" TEXT,\n    \"Total\" REAL,\n    FOREIGN KEY (\"CustomerId\") REFERENCES Customer (\"CustomerId\")\n);\n\nCREATE TABLE InvoiceLine (\n    \"InvoiceLineId\" INTEGER PRIMARY KEY,\n    \"InvoiceId\" INTEGER,\n    \"TrackId\" INTEGER,\n    \"UnitPrice\" REAL,\n    \"Quantity\" INTEGER,\n    FOREIGN KEY (\"InvoiceId\") REFERENCES Invoice (\"InvoiceId\")\n);\n\nCREATE TABLE MediaType (\n    \"MediaTypeId\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT\n);\n\nCREATE TABLE Playlist (\n    \"PlaylistId\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT\n);\n\nCREATE TABLE PlaylistTrack (\n    \"PlaylistId\" INTEGER,\n    \"TrackId\" INTEGER,\n    FOREIGN KEY (\"PlaylistId\") REFERENCES Playlist (\"PlaylistId\")\n);\n\nCREATE TABLE Track (\n    \"TrackId\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"AlbumId\" INTEGER,\n    \"MediaTypeId\" INTEGER,\n    \"GenreId\" INTEGER,\n    \"Composer\" TEXT,\n    \"Milliseconds\" INTEGER,\n    \"Bytes\" INTEGER,\n    \"UnitPrice\" REAL,\n    FOREIGN KEY (\"AlbumId\") REFERENCES Album (\"AlbumId\"),\n    FOREIGN KEY (\"MediaTypeId\") REFERENCES MediaType (\"MediaTypeId\"),\n    FOREIGN KEY (\"GenreId\") REFERENCES Genre (\"GenreId\")\n);"
        },
        {
        "db_id": "flight_4",
        "schema": "CREATE TABLE routes (\n    \"rid\" TEXT PRIMARY KEY,\n    \"dst_apid\" INTEGER,\n    \"dst_ap\" TEXT,\n    \"src_apid\" INTEGER,\n    \"src_ap\" TEXT,\n    \"alid\" INTEGER,\n    \"airline\" TEXT,\n    \"codeshare\" TEXT,\n    FOREIGN KEY (\"alid\") REFERENCES airlines (\"alid\")\n);\n\nCREATE TABLE airports (\n    \"apid\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"city\" TEXT,\n    \"country\" TEXT,\n    \"x\" INTEGER,\n    \"y\" INTEGER,\n    \"elevation\" INTEGER,\n    \"iata\" TEXT,\n    \"icao\" TEXT\n);\n\nCREATE TABLE airlines (\n    \"alid\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"iata\" TEXT,\n    \"icao\" TEXT,\n    \"callsign\" TEXT,\n    \"country\" TEXT,\n    \"active\" TEXT\n);"
  },
  {
    "db_id": "pets_1",
    "schema": "CREATE TABLE Student (\n    \"StuID\" INTEGER PRIMARY KEY,\n    \"LName\" TEXT,\n    \"Fname\" TEXT,\n    \"Age\" INTEGER,\n    \"Sex\" TEXT,\n    \"Major\" TEXT,\n    \"Advisor\" INTEGER,\n    \"city_code\" INTEGER\n);\n\nCREATE TABLE Has_Pet (\n    \"StuID\" INTEGER,\n    \"PetID\" INTEGER,\n    FOREIGN KEY (\"StuID\") REFERENCES Student (\"StuID\"),\n    FOREIGN KEY (\"PetID\") REFERENCES Pets (\"PetID\")\n);\n\nCREATE TABLE Pets (\n    \"PetID\" INTEGER PRIMARY KEY,\n    \"PetType\" TEXT,\n    \"pet_age\" INTEGER,\n    \"weight\" INTEGER\n);"
  },
  {
    "db_id": "dorm_1",
    "schema": "CREATE TABLE Student (\n    \"StuID\" INTEGER PRIMARY KEY,\n    \"LName\" TEXT,\n    \"Fname\" TEXT,\n    \"Age\" INTEGER,\n    \"Sex\" TEXT,\n    \"Major\" TEXT,\n    \"Advisor\" TEXT,\n    \"city_code\" INTEGER\n);\n\nCREATE TABLE Dorm (\n    \"dormid\" INTEGER PRIMARY KEY,\n    \"dorm_name\" TEXT,\n    \"student_capacity\" INTEGER,\n    \"gender\" TEXT\n);\n\nCREATE TABLE Dorm_amenity (\n    \"dormid\" INTEGER,\n    \"amenid\" INTEGER,\n    FOREIGN KEY (\"dormid\") REFERENCES Dorm (\"dormid\"),\n    FOREIGN KEY (\"amenid\") REFERENCES Amenities (\"amenid\")\n);\n\nCREATE TABLE Has_amenity (\n    \"stuid\" INTEGER,\n    \"dormid\" INTEGER,\n    \"room_number\" INTEGER,\n    FOREIGN KEY (\"stuid\") REFERENCES Student (\"StuID\"),\n    FOREIGN KEY (\"dormid\") REFERENCES Dorm (\"dormid\")\n);\n\nCREATE TABLE Lives_in (\n    \"stuid\" INTEGER,\n    \"dormid\" INTEGER,\n    \"room_number\" INTEGER,\n    FOREIGN KEY (\"stuid\") REFERENCES Student (\"StuID\"),\n    FOREIGN KEY (\"dormid\") REFERENCES Dorm (\"dormid\")\n);"
  },
  {
    "db_id": "journal_committee",
    "schema": "CREATE TABLE journal (\n    \"Journal_ID\" INTEGER PRIMARY KEY,\n    \"Date\" INTEGER,\n    \"Theme\" TEXT,\n    \"Sales\" INTEGER\n);\n\nCREATE TABLE editor (\n    \"Editor_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Age\" INTEGER\n);\n\nCREATE TABLE journal_committee (\n    \"Editor_ID\" INTEGER,\n    \"Journal_ID\" INTEGER,\n    \"Work_Type\" TEXT,\n    FOREIGN KEY (\"Editor_ID\") REFERENCES editor (\"Editor_ID\"),\n    FOREIGN KEY (\"Journal_ID\") REFERENCES journal (\"Journal_ID\")\n);"
  },
  {
    "db_id": "flight_1",
    "schema": "CREATE TABLE flight (\n    \"flno\" TEXT PRIMARY KEY,\n    \"origin\" TEXT,\n    \"destination\" TEXT,\n    \"distance\" INTEGER,\n    \"departure_date\" TEXT,\n    \"arrival_date\" TEXT,\n    \"price\" REAL,\n    \"aid\" INTEGER,\n    FOREIGN KEY (\"aid\") REFERENCES aircraft (\"aid\")\n);\n\nCREATE TABLE aircraft (\n    \"aid\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"distance\" INTEGER\n);\n\nCREATE TABLE employee (\n    \"eid\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"salary\" REAL\n);\n\nCREATE TABLE certificate (\n    \"eid\" INTEGER,\n    \"aid\" INTEGER,\n    FOREIGN KEY (\"eid\") REFERENCES employee (\"eid\"),\n    FOREIGN KEY (\"aid\") REFERENCES aircraft (\"aid\")\n);"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "schema": "CREATE TABLE medicine (\n    \"id\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"Trade_Name\" TEXT,\n    \"FDA_approved\" TEXT\n);\n\nCREATE TABLE enzyme (\n    \"id\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"Location\" TEXT,\n    \"Product\" TEXT,\n    \"Chromosome\" TEXT,\n    \"OMIM\" INTEGER,\n    \"Porphyria\" TEXT\n);\n\nCREATE TABLE medicine_enzyme_interaction (\n    \"enzyme_id\" INTEGER,\n    \"medicine_id\" INTEGER,\n    \"interaction_type\" TEXT,\n    FOREIGN KEY (\"enzyme_id\") REFERENCES enzyme (\"id\"),\n    FOREIGN KEY (\"medicine_id\") REFERENCES medicine (\"id\")\n);"
  },
  {
    "db_id": "local_govt_and_lot",
    "schema": "CREATE TABLE Customers (\n    \"customer_id\" INTEGER PRIMARY KEY,\n    \"customer_details\" TEXT\n);\n\nCREATE TABLE Properties (\n    \"property_id\" INTEGER PRIMARY KEY,\n    \"property_type_code\" TEXT,\n    \"property_address\" TEXT,\n    \"other_details\" TEXT\n);\n\nCREATE TABLE Residents (\n    \"resident_id\" INTEGER PRIMARY KEY,\n    \"property_id\" INTEGER,\n    \"date_moved_in\" TIME,\n    \"date_moved_out\" TIME,\n    \"other_details\" TEXT,\n    FOREIGN KEY (\"property_id\") REFERENCES Properties (\"property_id\")\n);\n\nCREATE TABLE Organizations (\n    \"organization_id\" INTEGER PRIMARY KEY,\n    \"parent_organization_id\" INTEGER,\n    \"organization_details\" TEXT\n);\n\nCREATE TABLE Services (\n    \"service_id\" INTEGER PRIMARY KEY,\n    \"organization_id\" INTEGER,\n    \"service_type_code\" TEXT,\n    \"service_details\" TEXT,\n    FOREIGN KEY (\"organization_id\") REFERENCES Organizations (\"organization_id\")\n);\n\nCREATE TABLE Residents_Services (\n    \"resident_id\" INTEGER,\n    \"service_id\" INTEGER,\n    \"date_moved_in\" TIME,\n    \"property_id\" INTEGER,\n    \"date_requested\" TIME,\n    \"date_provided\" TIME,\n    \"other_details\" TEXT,\n    FOREIGN KEY (\"resident_id\") REFERENCES Residents (\"resident_id\"),\n    FOREIGN KEY (\"service_id\") REFERENCES Services (\"service_id\"),\n    FOREIGN KEY (\"property_id\") REFERENCES Properties (\"property_id\")\n);\n\nCREATE TABLE Things (\n    \"thing_id\" INTEGER PRIMARY KEY,\n    \"organization_id\" INTEGER,\n    \"Type_of_Thing_Code\" TEXT,\n    \"service_type_code\" TEXT,\n    \"service_details\" TEXT,\n    FOREIGN KEY (\"organization_id\") REFERENCES Organizations (\"organization_id\")\n);\n\nCREATE TABLE Customer_Events (\n    \"Customer_Event_ID\" INTEGER PRIMARY KEY,\n    \"customer_id\" INTEGER,\n    \"date_moved_in\" TIME,\n    \"property_id\" INTEGER,\n    \"resident_id\" INTEGER,\n    \"thing_id\" INTEGER,\n    FOREIGN KEY (\"customer_id\") REFERENCES Customers (\"customer_id\"),\n    FOREIGN KEY (\"property_id\") REFERENCES Properties (\"property_id\"),\n    FOREIGN KEY (\"resident_id\") REFERENCES Residents (\"resident_id\"),\n    FOREIGN KEY (\"thing_id\") REFERENCES Things (\"thing_id\")\n);\n\nCREATE TABLE Customer_Event_Notes (\n    \"Customer_Event_Note_ID\" INTEGER PRIMARY KEY,\n    \"Customer_Event_ID\" INTEGER,\n    \"service_type_code\" TEXT,\n    \"resident_id\" INTEGER,\n    \"property_id\" INTEGER,\n    \"date_moved_in\" TIME,\n    FOREIGN KEY (\"Customer_Event_ID\") REFERENCES Customer_Events (\"Customer_Event_ID\"),\n    FOREIGN KEY (\"resident_id\") REFERENCES Residents (\"resident_id\"),\n    FOREIGN KEY (\"property_id\") REFERENCES Properties (\"property_id\")\n);\n\nCREATE VIEW Timed_Status_of_Things AS\n    SELECT t.thing_id,\n           t.Date_and_Date,\n           t.Status_of_Thing_Code\n    FROM Things t\n    JOIN Customer_Events ce ON t.thing_id = ce.thing_id;\n\nCREATE VIEW Timed_Locations_of_Things AS\n    SELECT tl.thing_id,\n           tl.Date_and_Time,\n           tl.Location_Code\n    FROM Things tl\n    JOIN Customer_Events ce ON tl.thing_id = ce.thing_id;"
  },
  {
    "db_id": "station_weather",
    "schema": "CREATE TABLE train (\n    \"id\" INTEGER PRIMARY KEY,\n    \"train_number\" INTEGER,\n    \"name\" TEXT,\n    \"origin\" TEXT,\n    \"destination\" TEXT,\n    \"time\" TEXT,\n    \"interval\" TEXT\n);\n\nCREATE TABLE station (\n    \"id\" INTEGER PRIMARY KEY,\n    \"network_name\" TEXT,\n    \"services\" TEXT,\n    \"local_authority\" TEXT\n);\n\nCREATE TABLE route (\n    \"train_id\" INTEGER,\n    \"station_id\" INTEGER,\n    FOREIGN KEY (\"train_id\") REFERENCES train (\"id\")\n);\n\nCREATE TABLE weekly_weather (\n    \"station_id\" INTEGER,\n    \"day_of_week\" TEXT,\n    \"high_temperature\" INTEGER,\n    \"low_temperature\" INTEGER,\n    \"precipitation\" TEXT,\n    \"wind_speed_mph\" INTEGER,\n    FOREIGN KEY (\"station_id\") REFERENCES station (\"id\")\n);"
  },
  {
    "db_id": "shop_membership",
    "schema": "CREATE TABLE member (\n    \"Member_ID\" INTEGER PRIMARY KEY,\n    \"Card_Number\" INTEGER,\n    \"Name\" TEXT,\n    \"Hometown\" TEXT,\n    \"Level\" TEXT\n);\n\nCREATE TABLE branch (\n    \"Branch_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Open_year\" INTEGER,\n    \"Address_road\" TEXT,\n    \"City\" TEXT,\n    \"membership_amount\" INTEGER\n);\n\nCREATE TABLE membership_register_branch (\n    \"Member_ID\" INTEGER,\n    \"Branch_ID\" INTEGER,\n    \"Register_Year\" INTEGER,\n    FOREIGN KEY (\"Member_ID\") REFERENCES member (\"Member_ID\"),\n    FOREIGN KEY (\"Branch_ID\") REFERENCES branch (\"Branch_ID\")\n);\n\nCREATE TABLE purchase (\n    \"Member_ID\" INTEGER,\n    \"Branch_ID\" INTEGER,\n    \"Year\" INTEGER,\n    \"Total_pounds\" INTEGER,\n    FOREIGN KEY (\"Member_ID\") REFERENCES member (\"Member_ID\"),\n    FOREIGN KEY (\"Branch_ID\") REFERENCES branch (\"Branch_ID\")\n);"
  },
  {
    "db_id": "driving_school",
    "schema": "CREATE TABLE Addresses (\n    \"address_id\" INTEGER PRIMARY KEY,\n    \"line_1_number_building\" TEXT,\n    \"city\" TEXT,\n    \"zip_postcode\" TEXT,\n    \"state_province_county\" TEXT,\n    \"country\" TEXT\n);\n\nCREATE TABLE Staff (\n    \"staff_id\" INTEGER PRIMARY KEY,\n    \"staff_address_id\" INTEGER,\n    \"nickname\" TEXT,\n    \"first_name\" TEXT,\n    \"middle_name\" TEXT,\n    \"last_name\" TEXT,\n    \"date_of_birth\" TEXT,\n    \"date_joined_staff\" TEXT,\n    \"date_left_staff\" TEXT,\n    FOREIGN KEY (\"staff_address_id\") REFERENCES Addresses (\"address_id\")\n);\n\nCREATE TABLE Vehicles (\n    \"vehicle_id\" INTEGER PRIMARY KEY,\n    \"vehicle_details\" TEXT\n);\n\nCREATE TABLE Customers (\n    \"customer_id\" INTEGER PRIMARY KEY,\n    \"customer_address_id\" INTEGER,\n    \"customer_status_code\" TEXT,\n    \"date_became_customer\" TEXT,\n    \"date_of_birth\" TEXT,\n    \"first_name\" TEXT,\n    \"last_name\" TEXT,\n    \"amount_outstanding\" REAL,\n    \"email_address\" TEXT,\n    \"phone_number\" TEXT,\n    \"cell_mobile_phone_number\" TEXT,\n    FOREIGN KEY (\"customer_address_id\") REFERENCES Addresses (\"address_id\")\n);\n\nCREATE TABLE Customer_Payments (\n    \"customer_id\" INTEGER,\n    \"datetime_payment\" TIME,\n    \"payment_method_code\" TEXT,\n    \"amount_payment\" REAL,\n    FOREIGN KEY (\"customer_id\") REFERENCES Customers (\"customer_id\")\n);\n\nCREATE TABLE Lessons (\n    \"lesson_id\" INTEGER PRIMARY KEY,\n    \"customer_id\" INTEGER,\n    \"lesson_status_code\" TEXT,\n    \"staff_id\" INTEGER,\n    \"vehicle_id\" INTEGER,\n    \"lesson_date\" DATE,\n    \"lesson_time\" TIME,\n    \"price\" REAL,\n    FOREIGN KEY (\"customer_id\") REFERENCES Customers (\"customer_id\"),\n    FOREIGN KEY (\"staff_id\") REFERENCES Staff (\"staff_id\"),\n    FOREIGN KEY (\"vehicle_id\") REFERENCES Vehicles (\"vehicle_id\")\n);"
  },
  {
    "db_id": "concert_singer",
    "schema": "CREATE TABLE stadium (\n    \"Stadium_ID\" INTEGER PRIMARY KEY,\n    \"Location\" TEXT,\n    \"Name\" TEXT,\n    \"Capacity\" INTEGER,\n    \"Highest\" INTEGER,\n    \"Lowest\" INTEGER,\n    \"Average\" INTEGER\n);\n\nCREATE TABLE singer (\n    \"Singer_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Country\" TEXT,\n    \"Song_Name\" TEXT,\n    \"Song_release_year\" INTEGER,\n    \"Age\" INTEGER,\n    \"Is_male\" TEXT\n);\n\nCREATE TABLE concert (\n    \"concert_ID\" INTEGER PRIMARY KEY,\n    \"concert_Name\" TEXT,\n    \"Theme\" TEXT,\n    \"Stadium_ID\" INTEGER,\n    \"Year\" INTEGER,\n    FOREIGN KEY (\"Stadium_ID\") REFERENCES stadium (\"Stadium_ID\")\n);\n\nCREATE TABLE singer_in_concert (\n    \"concert_ID\" INTEGER,\n    \"Singer_ID\" INTEGER,\n    FOREIGN KEY (\"concert_ID\") REFERENCES concert (\"concert_ID\"),\n    FOREIGN KEY (\"Singer_ID\") REFERENCES singer (\"Singer_ID\")\n);"
  },
  {
    "db_id": "music_2",
    "schema": "CREATE TABLE Songs (\n    \"SongId\" INTEGER PRIMARY KEY,\n    \"Title\" TEXT\n);\n\nCREATE TABLE Albums (\n    \"AId\" INTEGER PRIMARY KEY,\n    \"Title\" TEXT,\n    \"Year\" INTEGER,\n    \"Label\" TEXT,\n    \"Type\" TEXT\n);\n\nCREATE TABLE Band (\n    \"Id\" INTEGER PRIMARY KEY,\n    \"Firstname\" TEXT,\n    \"Lastname\" TEXT\n); \n\nCREATE TABLE Instruments (\n    \"SongId\" INTEGER,\n    \"BandmateId\" INTEGER,\n    \"Instrument\" TEXT,\n    FOREIGN KEY (\"SongId\") REFERENCES Songs (\"SongId\")\n);\n\nCREATE TABLE Performance (\n    \"SongId\" INTEGER,\n    \"Bandmate\" INTEGER,\n    \"StagePosition\" TEXT,\n    FOREIGN KEY (\"SongId\") REFERENCES Songs (\"SongId\")\n);\n\nCREATE TABLE Tracklists (\n    \"AlbumId\" INTEGER,\n    \"Position\" INTEGER,\n    \"SongId\" INTEGER,\n    FOREIGN KEY (\"AlbumId\") REFERENCES Albums (\"AId\")\n);\n\nCREATE TABLE Vocals (\n    \"SongId\" INTEGER,\n    \"Bandmate\" INTEGER,\n    \"Type\" TEXT,\n    FOREIGN KEY (\"SongId\") REFERENCES Songs (\"SongId\")\n);"
  },
  {
    "db_id": "sports_competition",
    "schema": "CREATE TABLE club (\n    \"Club_ID\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"Region\" TEXT,\n    \"Start_year\" INTEGER\n);\n\nCREATE TABLE club_rank (\n    \"Rank\" INTEGER,\n    \"Club_ID\" INTEGER,\n    \"Gold\" INTEGER,\n    \"Silver\" INTEGER,\n    \"Bronze\" INTEGER,\n    \"Total\" INTEGER,\n    FOREIGN KEY (\"Club_ID\") REFERENCES club (\"Club_ID\")\n);\n\nCREATE TABLE player (\n    \"Player_ID\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"Position\" TEXT,\n    \"Club_ID\" INTEGER,\n    \"Apps\" INTEGER,\n    \"Tries\" INTEGER,\n    \"Goals\" INTEGER,\n    \"Points\" INTEGER,\n    FOREIGN KEY (\"Club_ID\") REFERENCES club (\"Club_ID\")\n);\n\nCREATE TABLE competition (\n    \"Competition_ID\" INTEGER PRIMARY KEY,\n    \"Year\" INTEGER,\n    \"Competition_type\" TEXT,\n    \"Country\" TEXT\n);\n\nCREATE TABLE competition_result (\n    \"Competition_ID\" INTEGER,\n    \"Club_ID_1\" INTEGER,\n    \"Club_ID_2\" INTEGER,\n    \"Score\" TEXT,\n    FOREIGN KEY (\"Competition_ID\") REFERENCES competition (\"Competition_ID\"),\n    FOREIGN KEY (\"Club_ID_1\") REFERENCES club (\"Club_ID\"),\n    FOREIGN KEY (\"Club_ID_2\") REFERENCES club (\"Club_ID\")\n);"
  },
  {
    "db_id": "railway",
    "schema": "CREATE TABLE railway (\n    \"Railway_ID\" INTEGER PRIMARY KEY,\n    \"Railway\" TEXT,\n    \"Builder\" TEXT,\n    \"Built\" TEXT,\n    \"Wheels\" TEXT,\n    \"Location\" TEXT,\n    \"ObjectNumber\" TEXT\n);\n\nCREATE TABLE train (\n    \"Train_ID\" INTEGER PRIMARY KEY,\n    \"Train_Num\" INTEGER,\n    \"Name\" TEXT,\n    \"From\" TEXT,\n    \"Arrival\" TEXT,\n    \"Railway_ID\" INTEGER,\n    FOREIGN KEY (\"Railway_ID\") REFERENCES railway (\"Railway_ID\")\n);\n\nCREATE TABLE manager (\n    \"Manager_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Country\" TEXT,\n    \"Working_year_starts\" INTEGER,\n    \"Age\" INTEGER,\n    \"Level\" TEXT\n);\n\nCREATE TABLE railway_manage (\n    \"Railway_ID\" INTEGER,\n    \"Manager_ID\" INTEGER,\n    \"From_Year\" INTEGER,\n    FOREIGN KEY (\"Railway_ID\") REFERENCES railway (\"Railway_ID\"),\n    FOREIGN KEY (\"Manager_ID\") REFERENCES manager (\"Manager_ID\")\n);"
  },
  {
    "db_id": "inn_1",
    "schema": "CREATE TABLE Rooms (\n    \"RoomId\" INTEGER PRIMARY KEY,\n    \"roomName\" TEXT,\n    \"beds\" INTEGER,\n    \"bedType\" TEXT,\n    \"maxOccupancy\" INTEGER,\n    \"basePrice\" INTEGER,\n    \"decor\" TEXT\n);\n\nCREATE TABLE Reservations (\n    \"Code\" INTEGER PRIMARY KEY,\n    \"Room\" INTEGER,\n    \"CheckIn\" DATE,\n    \"CheckOut\" DATE,\n    \"Rate\" REAL,\n    \"LastName\" TEXT,\n    \"FirstName\" TEXT,\n    \"Adults\" INTEGER,\n    \"Kids\" INTEGER,\n    FOREIGN KEY (\"Room\") REFERENCES Rooms (\"RoomId\")\n);"
  },
  {
    "db_id": "museum_visit",
    "schema": "CREATE TABLE museum (\n    \"Museum_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Num_of_Staff\" INTEGER,\n    \"Open_Year\" INTEGER\n);\n\nCREATE TABLE visitor (\n    \"ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Level_of_membership\" TEXT,\n    \"Age\" INTEGER\n);\n\nCREATE TABLE visit (\n    \"Museum_ID\" INTEGER,\n    \"visitor_ID\" INTEGER,\n    \"Num_of_Ticket\" INTEGER,\n    \"Total_spent\" REAL,\n    FOREIGN KEY (\"Museum_ID\") REFERENCES museum (\"Museum_ID\"),\n    FOREIGN KEY (\"visitor_ID\") REFERENCES visitor (\"ID\")\n);"
  },
  {
    "db_id": "browser_web",
    "schema": "CREATE TABLE Web_client_accelerator (\n    \"id\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"Operating_system\" TEXT,\n    \"Client\" TEXT,\n    \"Connection\" TEXT\n);\n\nCREATE TABLE browser (\n    \"id\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"market_share\" REAL\n);\n\nCREATE TABLE accelerator_compatible_browser (\n    \"accelerator_id\" INTEGER,\n    \"browser_id\" INTEGER,\n    \"compatible_since_year\" INTEGER,\n    FOREIGN KEY (\"accelerator_id\") REFERENCES Web_client_accelerator (\"id\"),\n    FOREIGN KEY (\"browser_id\") REFERENCES browser (\"id\")\n);"
  },
  {
    "db_id": "baseball_1",
    "schema": "CREATE TABLE all_star (\n    \"player_id\" INTEGER,\n    \"year\" INTEGER,\n    \"game_num\" INTEGER,\n    \"game_id\" INTEGER,\n    \"team_id\" INTEGER,\n    \"league_id\" INTEGER,\n    \"gp\" INTEGER,\n    \"starting_pos\" TEXT\n);\n\nCREATE TABLE appearances (\n    \"year\" INTEGER,\n    \"team_id\" INTEGER,\n    \"league_id\" INTEGER,\n    \"player_id\" INTEGER,\n    \"g_all\" INTEGER,\n    \"gs\" INTEGER,\n    \"g_batting\" INTEGER,\n    \"g_defense\" INTEGER,\n    \"g_p\" INTEGER,\n    \"g_c\" INTEGER,\n    \"g_1b\" INTEGER,\n    \"g_2b\" INTEGER,\n    \"g_3b\" INTEGER,\n    \"g_ss\" INTEGER,\n    \"g_lf\" INTEGER,\n    \"g_cf\" INTEGER,\n    \"g_rf\" INTEGER,\n    \"g_of\" INTEGER,\n    \"g_dh\" INTEGER,\n    \"g_ph\" INTEGER,\n    \"g_pr\" INTEGER\n);\n\nCREATE TABLE manager_award (\n    \"player_id\" INTEGER,\n    \"award_id\" INTEGER,\n    \"year\" INTEGER,\n    \"league_id\" INTEGER,\n    \"tie\" TEXT,\n    \"notes\" TEXT\n);\n\nCREATE TABLE player_award (\n    \"player_id\" INTEGER,\n    \"award_id\" INTEGER,\n    \"year\" INTEGER,\n    \"league_id\" INTEGER,\n    \"tie\" TEXT,\n    \"notes\" TEXT\n);\n\nCREATE TABLE manager_award_vote (\n    \"award_id\" INTEGER,\n    \"year\" INTEGER,\n    \"league_id\" INTEGER,\n    \"player_id\" INTEGER,\n    \"points_won\" INTEGER,\n    \"points_max\" INTEGER,\n    \"votes_first\" INTEGER\n);\n\nCREATE TABLE player_award_vote (\n    \"award_id\" INTEGER,\n    \"year\" INTEGER,\n    \"league_id\" INTEGER,\n    \"player_id\" INTEGER,\n    \"points_won\" INTEGER,\n    \"points_max\" INTEGER,\n    \"votes_first\" INTEGER\n);\n\nCREATE TABLE batting (\n    \"player_id\" INTEGER,\n    \"year\" INTEGER,\n    \"stint\" INTEGER,\n    \"team_id\" INTEGER,\n    \"league_id\" INTEGER,\n    \"g\" INTEGER,\n    \"ab\" INTEGER,\n    \"r\" INTEGER,\n    \"h\" INTEGER,\n    \"double\" INTEGER,\n    \"triple\" INTEGER,\n    \"hr\" INTEGER,\n    \"rbi\" INTEGER,\n    \"sb\" INTEGER,\n    \"cs\" INTEGER,\n    \"bb\" INTEGER,\n    \"so\" INTEGER,\n    \"ibb\" INTEGER,\n    \"hbp\" INTEGER,\n    \"sh\" INTEGER,\n    \"sf\" INTEGER,\n    \"g_idp\" INTEGER\n);\n\nCREATE TABLE batting_postseason (\n    \"year\" INTEGER,\n    \"round\" INTEGER,\n    \"player_id\" INTEGER,\n    \"team_id\" INTEGER,\n    \"league_id\" INTEGER,\n    \"g\" INTEGER,\n    \"ab\" INTEGER,\n    \"r\" INTEGER,\n    \"h\" INTEGER,\n    \"double\" INTEGER,\n    \"triple\" INTEGER,\n    \"hr\" INTEGER,\n    \"rbi\" INTEGER,\n    \"sb\" INTEGER,\n    \"cs\" INTEGER,\n    \"bb\" INTEGER,\n    \"so\" INTEGER,\n    \"ibb\" INTEGER,\n    \"hbp\" INTEGER,\n    \"sh\" INTEGER,\n    \"sf\" INTEGER,\n    \"g_idp\" INTEGER\n);\n\nCREATE TABLE player_college (\n    \"player_id\" INTEGER,\n    \"college_id\" INTEGER,\n    \"year\" INTEGER\n);\n\nCREATE TABLE fielding (\n    \"player_id\" INTEGER,\n    \"year\" INTEGER,\n    \"stint\" INTEGER,\n    \"team_id\" INTEGER,\n    \"league_id\" INTEGER,\n    \"pos\" TEXT,\n    \"g\" INTEGER,\n    \"gs\" INTEGER,\n    \"inn_outs\" INTEGER,\n    \"po\" INTEGER,\n    \"a\" INTEGER,\n    \"e\" INTEGER,\n    \"dp\" INTEGER,\n    \"pb\" INTEGER,\n    \"wp\" INTEGER,\n    \"sb\" INTEGER,\n    \"cs\" INTEGER,\n    \"zr\" INTEGER\n);\n\nCREATE TABLE fielding_outfield (\n    \"player_id\" INTEGER,\n    \"year\" INTEGER,\n    \"stint\" INTEGER,\n    \"glf\" INTEGER,\n    \"gcf\" INTEGER,\n    \"grf\" INTEGER\n);\n\nCREATE TABLE fielding_postseason (\n    \"player_id\" INTEGER,\n    \"year\" INTEGER,\n    \"stint\" INTEGER,\n    \"team_id\" INTEGER,\n    \"league_id\" INTEGER,\n    \"w\" INTEGER,\n    \"l\" INTEGER,\n    \"g\" INTEGER,\n    \"gs\" INTEGER,\n    \"cg\" INTEGER,\n    \"sho\" INTEGER,\n    \"sv\" INTEGER,\n    \"ipouts\" INTEGER,\n    \"h\" INTEGER,\n    \"er\" INTEGER,\n    \"hr\" INTEGER,\n    \"bb\" INTEGER,\n    \"so\" INTEGER,\n    \"baopp\" REAL,\n    \"era\" REAL,\n    \"ibb\" INTEGER,\n    \"wp\" INTEGER,\n    \"hbp\" INTEGER,\n    \"bk\" INTEGER,\n    \"bfp\" INTEGER,\n    \"gf\" INTEGER,\n    \"r\" INTEGER,\n    \"sh\" INTEGER,\n    \"sf\" INTEGER,\n    \"g_idp\" INTEGER\n);\n\nCREATE TABLE hall_of_fame (\n    \"player_id\" INTEGER,\n    \"yearid\" INTEGER,\n    \"votedby\" TEXT,\n    \"ballots\" INTEGER,\n    \"needed\" INTEGER,\n    \"votes\" INTEGER,\n    \"inducted\" INTEGER,\n    \"category\" TEXT,\n    \"needed_note\" TEXT\n);\n\nCREATE TABLE home_game (\n    \"year\" INTEGER,\n    \"league_id\" INTEGER,\n    \"team_id\" INTEGER,\n    \"park_id\" INTEGER,\n    \"span_first\" DATE,\n    \"span_last\" DATE,\n    \"games\" INTEGER,\n    \"openings\" INTEGER,\n    \"attendance\" INTEGER\n);\n\nCREATE TABLE manager (\n    \"player_id\" INTEGER,\n    \"year\" INTEGER,\n    \"stint\" INTEGER,\n    \"team_id\" INTEGER,\n    \"league_id\" INTEGER,\n    \"w\" INTEGER,\n    \"l\" INTEGER,\n    \"g\" INTEGER,\n    \"gs\" INTEGER,\n    \"cg\" INTEGER,\n    \"sho\" INTEGER,\n    \"sv\" INTEGER,\n    \"ipouts\" INTEGER,\n    \"h\" INTEGER,\n    \"er\" INTEGER,\n    \"hr\" INTEGER,\n    \"bb\" INTEGER,\n    \"so\" INTEGER,\n    \"baopp\" REAL,\n    \"era\" REAL,\n    \"ibb\" INTEGER,\n    \"wp\" INTEGER,\n    \"hbp\" INTEGER,\n    \"bk\" INTEGER,\n    \"bfp\" INTEGER,\n    \"gf\" INTEGER,\n    \"r\" INTEGER,\n    \"sh\" INTEGER,\n    \"sf\" INTEGER,\n    \"g_idp\" INTEGER\n);\n\nCREATE TABLE manager_half (\n    \"player_id\" INTEGER,\n    \"year\" INTEGER,\n    \"round\" INTEGER,\n    \"team_id\" INTEGER,\n    \"league_id\" INTEGER,\n    \"w\" INTEGER,\n    \"l\" INTEGER,\n    \"g\" INTEGER,\n    \"gs\" INTEGER,\n    \"cg\" INTEGER,\n    \"sho\" INTEGER,\n    \"sv\" INTEGER,\n    \"ipouts\" INTEGER,\n    \"h\" INTEGER,\n    \"er\" INTEGER,\n    \"hr\" INTEGER,\n    \"bb\" INTEGER,\n    \"so\" INTEGER,\n    \"baopp\" REAL,\n    \"era\" REAL,\n    \"ibb\" INTEGER,\n    \"wp\" INTEGER,\n    \"hbp\" INTEGER,\n    \"bk\" INTEGER,\n    \"bfp\" INTEGER,\n    \"gf\" INTEGER,\n    \"r\" INTEGER,\n    \"sh\" INTEGER, \n    \"sf\" INTEGER,\n    \"g_idp\" INTEGER\n);\n\nCREATE TABLE player (\n    \"player_id\" INTEGER PRIMARY KEY,\n    \"year\" INTEGER,\n    \"stint\" INTEGER,\n    \"glf\" INTEGER,\n    \"gcf\" INTEGER,\n    \"grf\" INTEGER\n);\n\nCREATE TABLE park (\n    \"park_id\" INTEGER PRIMARY KEY,\n    \"park_name\" TEXT,\n    \"park_alias\" TEXT,\n    \"city\" TEXT,\n    \"state\" TEXT,\n    \"country\" TEXT\n);\n\nCREATE TABLE pitching (\n    \"player_id\" INTEGER,\n    \"year\" INTEGER,\n    \"stint\" INTEGER,\n    \"team_id\" INTEGER,\n    \"league_id\" INTEGER,\n    \"w\" INTEGER,\n    \"l\" INTEGER,\n    \"g\" INTEGER,\n    \"gs\" INTEGER,\n    \"cg\" INTEGER,\n    \"sho\" INTEGER,\n    \"sv\" INTEGER,\n    \"ipouts\" INTEGER,\n    \"h\" INTEGER,\n    \"er\" INTEGER,\n    \"hr\" INTEGER,\n    \"bb\" INTEGER,\n    \"so\" INTEGER,\n    \"baopp\" REAL,\n    \"era\" REAL,\n    \"ibb\" INTEGER,\n    \"wp\" INTEGER,\n    \"hbp\" INTEGER,\n    \"bk\" INTEGER,\n    \"bfp\" INTEGER,\n    \"gf\" INTEGER,\n    \"r\" INTEGER,\n    \"sh\" INTEGER,\n    \"sf\" INTEGER,\n    \"g_idp\" INTEGER\n);\n\nCREATE TABLE pitching_postseason (\n    \"player_id\" INTEGER,\n    \"year\" INTEGER,\n    \"round\" INTEGER,\n    \"team_id\" INTEGER,\n    \"league_id\" INTEGER,\n    \"w\" INTEGER,\n    \"l\" INTEGER,\n    \"g\" INTEGER,\n    \"gs\" INTEGER,\n    \"cg\" INTEGER,\n    \"sho\" INTEGER,\n    \"sv\" INTEGER,\n    \"ipouts\" INTEGER,\n    \"h\" INTEGER,\n    \"er\" INTEGER,\n    \"hr\" INTEGER,\n    \"bb\" INTEGER,\n    \"so\" INTEGER,\n    \"baopp\" REAL,\n    \"era\" REAL,\n    \"ibb\" INTEGER,\n    \"wp\" INTEGER,\n    \"hbp\" INTEGER,\n    \"bk\" INTEGER,\n    \"bfp\" INTEGER,\n    \"gf\" INTEGER,\n    \"r\" INTEGER,\n    \"sh\" INTEGER,\n    \"sf\" INTEGER,\n    \"g_idp\" INTEGER\n);\n\nCREATE TABLE salary (\n    \"player_id\" INTEGER,\n    \"year\" INTEGER,\n    \"stint\" INTEGER,\n    \"glf\" INTEGER,\n    \"gcf\" INTEGER,\n    \"grf\" INTEGER\n);\n\nCREATE TABLE college (\n    \"college_id\" INTEGER PRIMARY KEY,\n    \"name_full\" TEXT,\n    \"city\" TEXT,\n    \"state\" TEXT,\n    \"country\" TEXT\n);\n\nCREATE TABLE postseason (\n    \"year\" INTEGER,\n    \"round\" INTEGER,\n    \"team_id_winner\" INTEGER,\n    \"league_id_winner\" INTEGER,\n    \"team_id_loser\" INTEGER,\n    \"league_id_loser\" INTEGER,\n    \"wins\" INTEGER,\n    \"losses\" INTEGER,\n    \"ties\" INTEGER\n);\n\nCREATE TABLE team (\n    \"year\" INTEGER,\n    \"league_id\" INTEGER,\n    \"team_id\" INTEGER,\n    \"franchise_id\" INTEGER,\n    \"div_id\" INTEGER,\n    \"rank\" TEXT,\n    \"g\" INTEGER,\n    \"ghome\" INTEGER,\n    \"w\" INTEGER,\n    \"l\" INTEGER,\n    \"div_win\" INTEGER,\n    \"wc_win\" INTEGER,\n    \"lg_win\" INTEGER,\n    \"ws_win\" INTEGER,\n    \"r\" INTEGER,\n    \"ab\" INTEGER,\n    \"h\" INTEGER,\n    \"double\" INTEGER,\n    \"triple\" INTEGER,\n    \"hr\" INTEGER,\n    \"bb\" INTEGER,\n    \"so\" INTEGER,\n    \"sb\" INTEGER,\n    \"cs\" INTEGER,\n    \"hbp\" INTEGER,\n    \"sf\" INTEGER,\n    \"ra\" INTEGER,\n    \"er\" INTEGER,\n    \"era\" REAL,\n    \"cg\" INTEGER,\n    \"sho\" INTEGER,\n    \"sv\" INTEGER,\n    \"ipouts\" INTEGER,\n    \"ha\" INTEGER,\n    \"hra\" INTEGER,\n    \"bba\" INTEGER,\n    \"soa\" INTEGER,\n    \"e\" INTEGER,\n    \"dp\" INTEGER,\n    \"fp\" INTEGER,\n    \"name\" TEXT,\n    \"park\" TEXT,\n    \"attendance\" INTEGER,\n    \"bpf\" INTEGER,\n    \"ppf\" INTEGER,\n    \"team_id_br\" INTEGER,\n    \"team_id_lahman45\" INTEGER,\n    \"team_id_retro\" INTEGER\n);\n\nCREATE TABLE team_franchise (\n    \"franchise_id\" INTEGER PRIMARY KEY,\n    \"franchise_name\" TEXT,\n    \"active\" TEXT,\n    \"na_assoc\" TEXT\n);\n\nCREATE TABLE team_half (\n    \"year\" INTEGER,\n    \"league_id\" INTEGER,\n    \"team_id\" INTEGER,\n    \"half\" TEXT,\n    \"div_id\" INTEGER,\n    \"div_win\" INTEGER,\n    \"rank\" TEXT,\n    \"g\" INTEGER,\n    \"w\" INTEGER,\n    \"l\" INTEGER\n);\n\nCREATE VIEW player_manager AS\n    SELECT p.player_id,\n           p.year,\n           p.stint,\n           p.team_id,\n           p.league_id\n    FROM player p\n    JOIN manager m ON p.player_id = m.player_id;\n\nCREATE VIEW player_pitching AS\n    SELECT p.player_id,\n           p.year,\n           p.stint,\n           p.team_id,\n           p.league_id\n    FROM player p\n    JOIN pitching pt ON p.player_id = pt.player_id;\n\nCREATE VIEW player_fielding AS\n    SELECT p.player_id,\n           p.year,\n           p.stint,\n           p.team_id,\n           p.league_id\n    FROM player p\n    JOIN fielding f ON p.player_id = f.player_id;"
  },
    {
      "db_id": "architecture",
      "schema": "CREATE TABLE architect (\n    \"id\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"nationality\" TEXT,\n    \"gender\" TEXT\n);\n\nCREATE TABLE bridge (\n    \"architect_id\" INTEGER,\n    \"id\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"location\" TEXT,\n    \"length_meters\" INTEGER,\n    \"length_feet\" INTEGER,\n    FOREIGN KEY (\"architect_id\") REFERENCES architect (\"id\")\n);\n\nCREATE TABLE mill (\n    \"architect_id\" INTEGER,\n    \"id\" INTEGER PRIMARY KEY,\n    \"location\" TEXT,\n    \"name\" TEXT,\n    \"type\" TEXT,\n    \"built_year\" INTEGER,\n    \"notes\" TEXT,\n    FOREIGN KEY (\"architect_id\") REFERENCES architect (\"id\")\n);"
    },
    {
      "db_id": "csu_1",
      "schema": "CREATE TABLE Campuses (\n    \"Id\" INTEGER PRIMARY KEY,\n    \"Campus\" TEXT,\n    \"Location\" TEXT,\n    \"County\" TEXT,\n    \"Year\" INTEGER\n);\n\nCREATE TABLE csu_fees (\n    \"Campus\" TEXT,\n    \"Year\" INTEGER,\n    \"CampusFee\" INTEGER,\n    FOREIGN KEY (\"Campus\") REFERENCES Campuses (\"Campus\")\n);\n\nCREATE TABLE degrees (\n    \"Year\" INTEGER,\n    \"Campus\" TEXT,\n    \"Degrees\" INTEGER,\n    FOREIGN KEY (\"Campus\") REFERENCES Campuses (\"Campus\")\n);\n\nCREATE TABLE discipline_enrollments (\n    \"Campus\" TEXT,\n    \"Discipline\" TEXT,\n    \"Year\" INTEGER,\n    \"Undergraduate\" INTEGER,\n    \"Graduate\" INTEGER,\n    FOREIGN KEY (\"Campus\") REFERENCES Campuses (\"Campus\")\n);\n\nCREATE TABLE enrollments (\n    \"Campus\" TEXT,\n    \"Year\" INTEGER,\n    \"TotalEnrollment_AY\" INTEGER,\n    \"FTE_AY\" INTEGER,\n    FOREIGN KEY (\"Campus\") REFERENCES Campuses (\"Campus\")\n);\n\nCREATE TABLE faculty (\n    \"Campus\" TEXT,\n    \"Year\" INTEGER,\n    \"Faculty\" INTEGER,\n    FOREIGN KEY (\"Campus\") REFERENCES Campuses (\"Campus\")\n);"
    },
    {
      "db_id": "tracking_orders",
      "schema": "CREATE TABLE Customers (\n    \"customer_id\" INTEGER PRIMARY KEY,\n    \"customer_name\" TEXT,\n    \"customer_details\" TEXT\n);\n\nCREATE TABLE Invoices (\n    \"invoice_number\" INTEGER PRIMARY KEY,\n    \"invoice_date\" DATE,\n    \"invoice_details\" TEXT\n);\n\nCREATE TABLE Orders (\n    \"order_id\" INTEGER PRIMARY KEY,\n    \"customer_id\" INTEGER,\n    \"order_status\" TEXT,\n    \"date_order_placed\" DATE,\n    \"order_details\" TEXT,\n    FOREIGN KEY (\"customer_id\") REFERENCES Customers (\"customer_id\")\n);\n\nCREATE TABLE Products (\n    \"product_id\" INTEGER PRIMARY KEY,\n    \"product_name\" TEXT,\n    \"product_details\" TEXT\n);\n\nCREATE TABLE Order_Items (\n    \"order_item_id\" INTEGER PRIMARY KEY,\n    \"product_id\" INTEGER,\n    \"order_id\" INTEGER,\n    \"order_item_status\" TEXT,\n    \"order_item_details\" TEXT,\n    FOREIGN KEY (\"product_id\") REFERENCES Products (\"product_id\"),\n    FOREIGN KEY (\"order_id\") REFERENCES Orders (\"order_id\")\n);\n\nCREATE TABLE Shipments (\n    \"shipment_id\" INTEGER PRIMARY KEY,\n    \"order_id\" INTEGER,\n    \"invoice_number\" INTEGER,\n    \"shipment_tracking_number\" TEXT,\n    \"shipment_date\" DATE,\n    \"other_shipment_details\" TEXT,\n    FOREIGN KEY (\"order_id\") REFERENCES Orders (\"order_id\"),\n    FOREIGN KEY (\"invoice_number\") REFERENCES Invoices (\"invoice_number\")\n);\n\nCREATE TABLE Shipment_Items (\n    \"shipment_id\" INTEGER,\n    \"order_item_id\" INTEGER,\n    FOREIGN KEY (\"shipment_id\") REFERENCES Shipments (\"shipment_id\"),\n    FOREIGN KEY (\"order_item_id\") REFERENCES Order_Items (\"order_item_id\")\n);"
    },
    {
      "db_id": "insurance_policies",
      "schema": "CREATE TABLE Customers (\n    \"Customer_ID\" INTEGER PRIMARY KEY,\n    \"Customer_Details\" TEXT\n);\n\nCREATE TABLE Customer_Policies (\n    \"Policy_ID\" INTEGER PRIMARY KEY,\n    \"Customer_ID\" INTEGER,\n    \"Policy_Type_Code\" TEXT,\n    \"Start_Date\" DATE,\n    \"End_Date\" DATE,\n    FOREIGN KEY (\"Customer_ID\") REFERENCES Customers (\"Customer_ID\")\n);\n\nCREATE TABLE Claims (\n    \"Claim_ID\" INTEGER PRIMARY KEY,\n    \"Policy_ID\" INTEGER,\n    \"Date_Claim_Made\" DATE,\n    \"Date_Claim_Settled\" DATE,\n    \"Amount_Claimed\" REAL,\n    \"Amount_Settled\" REAL,\n    FOREIGN KEY (\"Policy_ID\") REFERENCES Customer_Policies (\"Policy_ID\")\n);\n\nCREATE TABLE Settlements (\n    \"Settlement_ID\" INTEGER PRIMARY KEY,\n    \"Claim_ID\" INTEGER,\n    \"Date_Claim_Made\" DATE,\n    \"Date_Claim_Settled\" DATE,\n    \"Amount_Claimed\" REAL,\n    \"Amount_Settled\" REAL,\n    \"Customer_Policy_ID\" INTEGER,\n    FOREIGN KEY (\"Claim_ID\") REFERENCES Claims (\"Claim_ID\")\n);\n\nCREATE TABLE Payments (\n    \"Payment_ID\" INTEGER PRIMARY KEY,\n    \"Settlement_ID\" INTEGER,\n    \"Payment_Method_Code\" TEXT,\n    \"Date_Payment_Made\" DATE,\n    \"Amount_Payment\" REAL,\n    FOREIGN KEY (\"Settlement_ID\") REFERENCES Settlements (\"Settlement_ID\")\n);"
    },
    {
      "db_id": "gas_company",
      "schema": "CREATE TABLE company (\n    \"Company_ID\" INTEGER PRIMARY KEY,\n    \"Rank\" INTEGER,\n    \"Company\" TEXT,\n    \"Headquarters\" TEXT,\n    \"Main_Industry\" TEXT,\n    \"Sales_billion\" REAL,\n    \"Profits_billion\" REAL,\n    \"Assets_billion\" REAL,\n    \"Market_Value\" REAL\n);\n\nCREATE TABLE gas_station (\n    \"Station_ID\" INTEGER PRIMARY KEY,\n    \"Open_Year\" INTEGER,\n    \"Location\" TEXT,\n    \"Manager_Name\" TEXT,\n    \"Vice_Manager_Name\" TEXT,\n    \"Representative_Name\" TEXT\n);\n\nCREATE TABLE station_company (\n    \"Station_ID\" INTEGER,\n    \"Company_ID\" INTEGER,\n    \"Rank_of_the_Year\" INTEGER,\n    FOREIGN KEY (\"Station_ID\") REFERENCES gas_station (\"Station_ID\"),\n    FOREIGN KEY (\"Company_ID\") REFERENCES company (\"Company_ID\")\n);"
    },
    {
      "db_id": "e_government",
      "schema": "CREATE TABLE Addresses (\n    \"address_id\" INTEGER PRIMARY KEY,\n    \"line_1_number_building\" TEXT,\n    \"town_city\" TEXT,\n    \"zip_postcode\" TEXT,\n    \"state_province_county\" TEXT,\n    \"country\" TEXT\n);\n\nCREATE TABLE Services (\n    \"service_id\" INTEGER PRIMARY KEY,\n    \"service_type_code\" TEXT,\n    \"service_name\" TEXT,\n    \"service_descriptio\" TEXT\n);\n\nCREATE TABLE Forms (\n    \"form_id\" INTEGER PRIMARY KEY,\n    \"form_type_code\" TEXT,\n    \"service_id\" INTEGER,\n    \"form_number\" INTEGER,\n    \"form_name\" TEXT,\n    \"form_description\" TEXT,\n    FOREIGN KEY (\"service_id\") REFERENCES Services (\"service_id\")\n);\n\nCREATE TABLE Individuals (\n    \"individual_id\" INTEGER PRIMARY KEY,\n    \"individual_first_name\" TEXT,\n    \"individual_middle_name\" TEXT,\n    \"inidividual_phone\" TEXT,\n    \"individual_email\" TEXT,\n    \"individual_address\" TEXT,\n    \"individual_last_name\" TEXT\n);\n\nCREATE TABLE Organizations (\n    \"organization_id\" INTEGER PRIMARY KEY,\n    \"date_formed\" DATE,\n    \"organization_name\" TEXT,\n    \"uk_vat_number\" TEXT\n);\n\nCREATE TABLE Parties (\n    \"party_id\" INTEGER PRIMARY KEY,\n    \"payment_method_code\" TEXT,\n    \"party_phone\" TEXT,\n    \"party_email\" TEXT\n);\n\nCREATE TABLE Organization_Contact_Individuals (\n    \"individual_id\" INTEGER,\n    \"organization_id\" INTEGER,\n    \"date_contact_from\" DATE,\n    \"date_contact_to\" DATE,\n    FOREIGN KEY (\"individual_id\") REFERENCES Individuals (\"individual_id\"),\n    FOREIGN KEY (\"organization_id\") REFERENCES Organizations (\"organization_id\")\n);\n\nCREATE TABLE Party_Addresses (\n    \"party_id\" INTEGER,\n    \"address_id\" INTEGER,\n    \"date_address_from\" DATE,\n    \"address_type_code\" TEXT,\n    \"date_address_to\" DATE,\n    FOREIGN KEY (\"party_id\") REFERENCES Parties (\"party_id\"),\n    FOREIGN KEY (\"address_id\") REFERENCES Addresses (\"address_id\")\n);\n\nCREATE TABLE Party_Forms (\n    \"party_id\" INTEGER,\n    \"form_id\" INTEGER,\n    \"date_completion_started\" DATE,\n    \"form_status_code\" TEXT,\n    \"date_fully_completed\" DATE,\n    FOREIGN KEY (\"party_id\") REFERENCES Parties (\"party_id\"),\n    FOREIGN KEY (\"form_id\") REFERENCES Forms (\"form_id\")\n);\n\nCREATE TABLE Party_Services (\n    \"party_id\" INTEGER,\n    \"service_id\" INTEGER,\n    FOREIGN KEY (\"party_id\") REFERENCES Parties (\"party_id\"),\n    FOREIGN KEY (\"service_id\") REFERENCES Services (\"service_id\")\n);"
  },
  {
    "db_id": "school_bus",
    "schema": "CREATE TABLE driver (\n    \"Driver_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Party\" TEXT,\n    \"Home_city\" TEXT,\n    \"Age\" INTEGER\n);\n\nCREATE TABLE school (\n    \"School_ID\" INTEGER PRIMARY KEY,\n    \"Grade\" INTEGER,\n    \"School\" TEXT,\n    \"Location\" TEXT,\n    \"Type\" TEXT\n);\n\nCREATE TABLE school_bus (\n    \"School_ID\" INTEGER,\n    \"Driver_ID\" INTEGER,\n    \"Years_Working\" INTEGER,\n    \"If_full_time\" TEXT,\n    FOREIGN KEY (\"School_ID\") REFERENCES school (\"School_ID\"),\n    FOREIGN KEY (\"Driver_ID\") REFERENCES driver (\"Driver_ID\")\n);"
  },
  {
    "db_id": "machine_repair",
    "schema": "CREATE TABLE repair (\n    \"repair_ID\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"Launch_Date\" DATE,\n    \"Notes\" TEXT\n);\n\nCREATE TABLE machine (\n    \"Machine_ID\" INTEGER PRIMARY KEY,\n    \"Making_Year\" INTEGER,\n    \"Class\" TEXT,\n    \"Team\" TEXT,\n    \"Machine_series\" TEXT,\n    \"value_points\" INTEGER,\n    \"quality_rank\" INTEGER\n);\n\nCREATE TABLE technician (\n    \"technician_id\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Team\" TEXT,\n    \"Starting_Year\" INTEGER,\n    \"Age\" INTEGER\n);\n\nCREATE TABLE repair_assignment (\n    \"technician_id\" INTEGER,\n    \"repair_ID\" INTEGER,\n    \"Machine_ID\" INTEGER,\n    FOREIGN KEY (\"technician_id\") REFERENCES technician (\"technician_id\"),\n    FOREIGN KEY (\"repair_ID\") REFERENCES repair (\"repair_ID\"),\n    FOREIGN KEY (\"Machine_ID\") REFERENCES machine (\"Machine_ID\")\n);"
  },
  {
    "db_id": "theme_gallery",
    "schema": "CREATE TABLE artist (\n    \"Artist_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Country\" TEXT,\n    \"Year_Join\" INTEGER,\n    \"Age\" INTEGER\n);\n\nCREATE TABLE exhibition (\n    \"Exhibition_ID\" INTEGER PRIMARY KEY,\n    \"Year\" INTEGER,\n    \"Theme\" TEXT,\n    \"Artist_ID\" INTEGER,\n    \"Ticket_Price\" REAL,\n    FOREIGN KEY (\"Artist_ID\") REFERENCES artist (\"Artist_ID\")\n);\n\nCREATE TABLE exhibition_record (\n    \"Exhibition_ID\" INTEGER,\n    \"Date\" DATE,\n    \"Attendance\" INTEGER,\n    FOREIGN KEY (\"Exhibition_ID\") REFERENCES exhibition (\"Exhibition_ID\")\n);"
  },
  {
    "db_id": "film_rank",
    "schema": "CREATE TABLE film (\n    \"Film_ID\" INTEGER PRIMARY KEY,\n    \"Title\" TEXT,\n    \"Studio\" TEXT,\n    \"Director\" TEXT,\n    \"Gross_in_dollar\" REAL\n);\n\nCREATE TABLE market (\n    \"Market_ID\" INTEGER PRIMARY KEY,\n    \"Country\" TEXT,\n    \"Number_cities\" INTEGER\n);\n\nCREATE TABLE film_market_estimation (\n    \"Estimation_ID\" INTEGER PRIMARY KEY,\n    \"Low_Estimate\" REAL,\n    \"High_Estimate\" REAL,\n    \"Film_ID\" INTEGER,\n    \"Type\" TEXT,\n    \"Market_ID\" INTEGER,\n    \"Year\" INTEGER,\n    FOREIGN KEY (\"Film_ID\") REFERENCES film (\"Film_ID\"),\n    FOREIGN KEY (\"Market_ID\") REFERENCES market (\"Market_ID\")\n);"
  },
  {
    "db_id": "party_people",
    "schema": "CREATE TABLE region (\n    \"Region_ID\" INTEGER PRIMARY KEY,\n    \"Region_name\" TEXT,\n    \"Date\" DATE,\n    \"Label\" TEXT,\n    \"Format\" TEXT,\n    \"Catalogue\" TEXT\n);\n\nCREATE TABLE party (\n    \"Party_ID\" INTEGER PRIMARY KEY,\n    \"Minister\" TEXT,\n    \"Took_office\" DATE,\n    \"Left_office\" DATE,\n    \"Region_ID\" INTEGER,\n    \"Party_name\" TEXT,\n    FOREIGN KEY (\"Region_ID\") REFERENCES region (\"Region_ID\")\n);\n\nCREATE TABLE member (\n    \"Member_ID\" INTEGER PRIMARY KEY,\n    \"Member_Name\" TEXT,\n    \"Party_ID\" INTEGER,\n    \"In_office\" DATE,\n    FOREIGN KEY (\"Party_ID\") REFERENCES party (\"Party_ID\")\n);\n\nCREATE TABLE party_events (\n    \"Event_ID\" INTEGER PRIMARY KEY,\n    \"Event_Name\" TEXT,\n    \"Party_ID\" INTEGER,\n    \"Member_in_charge_ID\" INTEGER,\n    FOREIGN KEY (\"Party_ID\") REFERENCES party (\"Party_ID\")\n);"
  },
  {
    "db_id": "hospital_1",
    "schema": "CREATE TABLE Physician (\n    \"EmployeeID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Position\" TEXT,\n    \"SSN\" INTEGER\n);\n\nCREATE TABLE Department (\n    \"DepartmentID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Head\" TEXT\n);\n\nCREATE TABLE Affiliated_With (\n    \"Physician\" INTEGER,\n    \"Department\" INTEGER,\n    \"PrimaryAffiliation\" BOOLEAN,\n    FOREIGN KEY (\"Physician\") REFERENCES Physician (\"EmployeeID\"),\n    FOREIGN KEY (\"Department\") REFERENCES Department (\"DepartmentID\")\n);\n\nCREATE TABLE Procedures (\n    \"Code\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Cost\" REAL\n);\n\nCREATE TABLE Trained_In (\n    \"Physician\" INTEGER,\n    \"Treatment\" INTEGER,\n    \"CertificationDate\" DATE,\n    \"CertificationExpires\" DATE,\n    FOREIGN KEY (\"Physician\") REFERENCES Physician (\"EmployeeID\")\n);\n\nCREATE TABLE Patient (\n    \"SSN\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Address\" TEXT,\n    \"Phone\" TEXT,\n    \"InsuranceID\" TEXT,\n    \"PCP\" INTEGER,\n    FOREIGN KEY (\"PCP\") REFERENCES Physician (\"EmployeeID\")\n);\n\nCREATE TABLE Nurse (\n    \"EmployeeID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Position\" TEXT,\n    \"Registered\" BOOLEAN,\n    \"SSN\" INTEGER\n);\n\nCREATE TABLE Appointment (\n    \"AppointmentID\" INTEGER PRIMARY KEY,\n    \"Patient\" INTEGER,\n    \"PrepNurse\" INTEGER,\n    \"Physician\" INTEGER,\n    \"Start\" TIME,\n    \"End\" TIME,\n    \"ExaminationRoom\" INTEGER,\n    FOREIGN KEY (\"Patient\") REFERENCES Patient (\"SSN\"),\n    FOREIGN KEY (\"PrepNurse\") REFERENCES Nurse (\"EmployeeID\"),\n    FOREIGN KEY (\"Physician\") REFERENCES Physician (\"EmployeeID\")\n);\n\nCREATE TABLE Medication (\n    \"Code\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Brand\" TEXT,\n    \"Description\" TEXT\n);\n\nCREATE TABLE Prescribes (\n    \"Physician\" INTEGER,\n    \"Patient\" INTEGER,\n    \"Medication\" INTEGER,\n    \"Date\" DATE,\n    \"Appointment\" INTEGER,\n    \"Dose\" TEXT,\n    FOREIGN KEY (\"Physician\") REFERENCES Physician (\"EmployeeID\"),\n    FOREIGN KEY (\"Patient\") REFERENCES Patient (\"SSN\"),\n    FOREIGN KEY (\"Medication\") REFERENCES Medication (\"Code\")\n);\n\nCREATE TABLE Block (\n    \"BlockFloor\" INTEGER,\n    \"BlockCode\" INTEGER,\n    PRIMARY KEY (\"BlockFloor\", \"BlockCode\")\n);\n\nCREATE TABLE Room (\n    \"RoomNumber\" INTEGER PRIMARY KEY,\n    \"RoomType\" TEXT,\n    \"BlockFloor\" INTEGER,\n    \"BlockCode\" INTEGER,\n    \"Unavailable\" BOOLEAN,\n    FOREIGN KEY (\"BlockFloor\", \"BlockCode\") REFERENCES Block (\"BlockFloor\", \"BlockCode\")\n);\n\nCREATE TABLE On_Call (\n    \"Nurse\" INTEGER,\n    \"BlockFloor\" INTEGER,\n    \"BlockCode\" INTEGER,\n    \"OnCallStart\" TIME,\n    \"OnCallEnd\" TIME,\n    FOREIGN KEY (\"Nurse\") REFERENCES Nurse (\"EmployeeID\"),\n    FOREIGN KEY (\"BlockFloor\", \"BlockCode\") REFERENCES Block (\"BlockFloor\", \"BlockCode\")\n);\n\nCREATE TABLE Stay (\n    \"StayID\" INTEGER PRIMARY KEY,\n    \"Patient\" INTEGER,\n    \"Room\" INTEGER,\n    \"StayStart\" DATE,\n    \"StayEnd\" DATE,\n    FOREIGN KEY (\"Patient\") REFERENCES Patient (\"SSN\"),\n    FOREIGN KEY (\"Room\") REFERENCES Room (\"RoomNumber\")\n);\n\nCREATE TABLE Undergoes (\n    \"Patient\" INTEGER,\n    \"Procedures\" INTEGER,\n    \"Stay\" INTEGER,\n    \"DateUndergoes\" DATE,\n    \"Physician\" INTEGER,\n    \"AssistingNurse\" INTEGER,\n    FOREIGN KEY (\"Patient\") REFERENCES Patient (\"SSN\"),\n    FOREIGN KEY (\"Procedures\") REFERENCES Procedures (\"Code\"),\n    FOREIGN KEY (\"Stay\") REFERENCES Stay (\"StayID\"),\n    FOREIGN KEY (\"Physician\") REFERENCES Physician (\"EmployeeID\"),\n    FOREIGN KEY (\"AssistingNurse\") REFERENCES Nurse (\"EmployeeID\")\n);"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "schema": "CREATE TABLE Premises (\n    \"premise_id\" INTEGER PRIMARY KEY,\n    \"premises_type\" TEXT,\n    \"premise_details\" TEXT\n);\n\nCREATE TABLE Products (\n    \"product_id\" INTEGER PRIMARY KEY,\n    \"product_category\" TEXT,\n    \"product_name\" TEXT\n);\n\nCREATE TABLE Customers (\n    \"customer_id\" INTEGER PRIMARY KEY,\n    \"payment_method\" TEXT,\n    \"customer_name\" TEXT,\n    \"customer_phone\" TEXT,\n    \"customer_email\" TEXT,\n    \"customer_address\" TEXT,\n    \"customer_login\" TEXT,\n    \"customer_password\" TEXT\n);\n\nCREATE TABLE Mailshot_Campaigns (\n    \"mailshot_id\" INTEGER PRIMARY KEY,\n    \"product_category\" TEXT,\n    \"mailshot_name\" TEXT,\n    \"mailshot_start_date\" DATE,\n    \"mailshot_end_date\" DATE\n);\n\nCREATE TABLE Customer_Addresses (\n    \"customer_id\" INTEGER,\n    \"premise_id\" INTEGER,\n    \"date_address_from\" DATE,\n    \"address_type_code\" TEXT,\n    \"date_address_to\" DATE,\n    FOREIGN KEY (\"customer_id\") REFERENCES Customers (\"customer_id\"),\n    FOREIGN KEY (\"premise_id\") REFERENCES Premises (\"premise_id\")\n);\n\nCREATE TABLE Customer_Orders (\n    \"order_id\" INTEGER PRIMARY KEY,\n    \"customer_id\" INTEGER,\n    \"order_status_code\" TEXT,\n    \"shipping_method_code\" TEXT,\n    \"order_placed_datetime\" DATETIME,\n    \"order_delivered_datetime\" DATETIME,\n    \"order_shipping_charges\" REAL,\n    FOREIGN KEY (\"customer_id\") REFERENCES Customers (\"customer_id\")\n);\n\nCREATE TABLE Mailshot_Customers (\n    \"mailshot_id\" INTEGER,\n    \"customer_id\" INTEGER,\n    \"outcome_code\" TEXT,\n    \"mailshot_customer_date\" DATE,\n    FOREIGN KEY (\"mailshot_id\") REFERENCES Mailshot_Campaigns (\"mailshot_id\"),\n    FOREIGN KEY (\"customer_id\") REFERENCES Customers (\"customer_id\")\n);\n\nCREATE TABLE Order_Items (\n    \"item_id\" INTEGER PRIMARY KEY,\n    \"order_item_status_code\" TEXT,\n    \"order_id\" INTEGER,\n    \"product_id\" INTEGER,\n    \"item_status_code\" TEXT,\n    \"item_delivered_datetime\" DATETIME,\n    \"item_order_quantity\" INTEGER,\n    FOREIGN KEY (\"order_id\") REFERENCES Customer_Orders (\"order_id\"),\n    FOREIGN KEY (\"product_id\") REFERENCES Products (\"product_id\")\n);"
  },
  {
    "db_id": "gymnast",
    "schema": "CREATE TABLE gymnast (\n    \"Gymnast_ID\" INTEGER PRIMARY KEY,\n    \"Floor_Exercise_Points\" REAL,\n    \"Pommel_Horse_Points\" REAL,\n    \"Rings_Points\" REAL,\n    \"Vault_Points\" REAL,\n    \"Parallel_Bars_Points\" REAL,\n    \"Horizontal_Bar_Points\" REAL,\n    \"Total_Points\" REAL\n);\n\nCREATE TABLE people (\n    \"People_ID\" INTEGER PRIMARY KEY,\n    \"Name\" TEXT,\n    \"Age\" INTEGER,\n    \"Height\" REAL,\n    \"Hometown\" TEXT,\n    FOREIGN KEY (\"People_ID\") REFERENCES gymnast (\"Gymnast_ID\")\n);"
  },
  {
    "db_id": "restaurants",
    "schema": "CREATE TABLE GEOGRAPHIC (\n    \"CITY_NAME\" TEXT PRIMARY KEY,\n    \"COUNTY\" TEXT,\n    \"REGION\" TEXT\n);\n\nCREATE TABLE RESTAURANT (\n    \"ID\" INTEGER PRIMARY KEY,\n    \"NAME\" TEXT,\n    \"FOOD_TYPE\" TEXT,\n    \"CITY_NAME\" TEXT,\n    \"RATING\" REAL,\n    FOREIGN KEY (\"CITY_NAME\") REFERENCES GEOGRAPHIC (\"CITY_NAME\")\n);\n\nCREATE TABLE LOCATION (\n    \"RESTAURANT_ID\" INTEGER,\n    \"HOUSE_NUMBER\" INTEGER,\n    \"STREET_NAME\" TEXT,\n    \"CITY_NAME\" TEXT,\n    FOREIGN KEY (\"RESTAURANT_ID\") REFERENCES RESTAURANT (\"ID\"),\n    FOREIGN KEY (\"CITY_NAME\") REFERENCES GEOGRAPHIC (\"CITY_NAME\")\n);"
  },
  {
    "db_id": "mountain_photos",
    "schema": "CREATE TABLE mountain (\n    \"id\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"Height\" INTEGER,\n    \"Prominence\" INTEGER,\n    \"Range\" TEXT,\n    \"Country\" TEXT\n);\n\nCREATE TABLE camera_lens (\n    \"id\" INTEGER PRIMARY KEY,\n    \"brand\" TEXT,\n    \"name\" TEXT,\n    \"focal_length_mm\" INTEGER,\n    \"max_aperture\" REAL\n);\n\nCREATE TABLE photos (\n    \"id\" INTEGER PRIMARY KEY,\n    \"camera_lens_id\" INTEGER,\n    \"mountain_id\" INTEGER,\n    \"color\" TEXT,\n    \"name\" TEXT,\n    FOREIGN KEY (\"camera_lens_id\") REFERENCES camera_lens (\"id\"),\n    FOREIGN KEY (\"mountain_id\") REFERENCES mountain (\"id\")\n);"
  },
  {
    "db_id": "battle_death",
    "schema": "CREATE TABLE battle (\n    \"id\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"date\" DATE,\n    \"bulgarian_commander\" TEXT,\n    \"latin_commander\" TEXT,\n    \"result\" TEXT\n);\n\nCREATE TABLE ship (\n    \"lost_in_battle\" INTEGER,\n    \"id\" INTEGER PRIMARY KEY,\n    \"name\" TEXT,\n    \"tonnage\" INTEGER,\n    \"ship_type\" TEXT,\n    \"location\" TEXT,\n    \"disposition_of_ship\" TEXT,\n    FOREIGN KEY (\"lost_in_battle\") REFERENCES battle (\"id\")\n);\n\nCREATE TABLE death (\n    \"caused_by_ship_id\" INTEGER,\n    \"id\" INTEGER PRIMARY KEY,\n    \"note\" TEXT,\n    \"killed\" INTEGER,\n    \"injured\" INTEGER,\n    FOREIGN KEY (\"caused_by_ship_id\") REFERENCES ship (\"id\")\n);"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "schema": "CREATE TABLE Ref_Document_Types (\n    \"document_type_code\" TEXT PRIMARY KEY,\n    \"document_type_description\" TEXT\n);\n\nCREATE TABLE Roles (\n    \"role_code\" TEXT PRIMARY KEY,\n    \"role_description\" TEXT\n);\n\nCREATE TABLE Addresses (\n    \"address_id\" INTEGER PRIMARY KEY,\n    \"address_details\" TEXT\n);\n\nCREATE TABLE Ref_Document_Status (\n    \"document_status_code\" TEXT PRIMARY KEY,\n    \"document_status_description\" TEXT\n);\n\nCREATE TABLE Ref_Shipping_Agents (\n    \"shipping_agent_code\" TEXT PRIMARY KEY,\n    \"shipping_agent_name\" TEXT,\n    \"shipping_agent_description\" TEXT\n);\n\nCREATE TABLE Documents (\n    \"document_id\" INTEGER PRIMARY KEY,\n    \"document_status_code\" TEXT,\n    \"document_type_code\" TEXT,\n    \"shipping_agent_code\" TEXT,\n    \"receipt_date\" DATE,\n    \"receipt_number\" INTEGER,\n    \"other_details\" TEXT,\n    FOREIGN KEY (\"document_status_code\") REFERENCES Ref_Document_Status (\"document_status_code\"),\n    FOREIGN KEY (\"document_type_code\") REFERENCES Ref_Document_Types (\"document_type_code\"),\n    FOREIGN KEY (\"shipping_agent_code\") REFERENCES Ref_Shipping_Agents (\"shipping_agent_code\")\n);\n\nCREATE TABLE Employees (\n    \"employee_id\" INTEGER PRIMARY KEY,\n    \"role_code\" TEXT,\n    \"employee_name\" TEXT,\n    \"other_details\" TEXT,\n    FOREIGN KEY (\"role_code\") REFERENCES Roles (\"role_code\")\n);\n\nCREATE TABLE Document_Drafts (\n    \"document_id\" INTEGER PRIMARY KEY,\n    \"draft_number\" INTEGER,\n    \"draft_details\" TEXT,\n    FOREIGN KEY (\"document_id\") REFERENCES Documents (\"document_id\")\n);\n\nCREATE TABLE Draft_Copies (\n    \"document_id\" INTEGER,\n    \"draft_number\" INTEGER,\n    \"copy_number\" INTEGER,\n    FOREIGN KEY (\"document_id\") REFERENCES Document_Drafts (\"document_id\")\n);\n\nCREATE TABLE Circulation_History (\n    \"document_id\" INTEGER,\n    \"draft_number\" INTEGER,\n    \"copy_number\" INTEGER,\n    \"employee_id\" INTEGER,\n    FOREIGN KEY (\"document_id\") REFERENCES Documents (\"document_id\"),\n    FOREIGN KEY (\"employee_id\") REFERENCES Employees (\"employee_id\")\n);\n\nCREATE TABLE Documents_Mailed (\n    \"document_id\" INTEGER PRIMARY KEY,\n    \"mailed_to_address_id\" INTEGER,\n    \"mailing_date\" DATE,\n    FOREIGN KEY (\"document_id\") REFERENCES Documents (\"document_id\"),\n    FOREIGN KEY (\"mailed_to_address_id\") REFERENCES Addresses (\"address_id\")\n);"
  },
  {
    "db_id": "tracking_share_transactions",
    "schema": "CREATE TABLE Investors (\n    \"investor_id\" INTEGER PRIMARY KEY,\n    \"Investor_details\" TEXT\n);\n\nCREATE TABLE Lots (\n    \"lot_id\" INTEGER PRIMARY KEY,\n    \"investor_id\" INTEGER,\n    \"lot_details\" TEXT,\n    FOREIGN KEY (\"investor_id\") REFERENCES Investors (\"investor_id\")\n);\n\nCREATE TABLE Ref_Transaction_Types (\n    \"transaction_type_code\" TEXT PRIMARY KEY,\n    \"transaction_type_description\" TEXT\n);\n\nCREATE TABLE Transactions (\n    \"transaction_id\" INTEGER PRIMARY KEY,\n    \"investor_id\" INTEGER,\n    \"transaction_type_code\" TEXT,\n    \"date_of_transaction\" DATE,\n    \"amount_of_transaction\" REAL,\n    \"share_count\" INTEGER,\n    \"other_details\" TEXT,\n    FOREIGN KEY (\"investor_id\") REFERENCES Investors (\"investor_id\"),\n    FOREIGN KEY (\"transaction_type_code\") REFERENCES Ref_Transaction_Types (\"transaction_type_code\")\n);\n\nCREATE TABLE Sales (\n    \"sales_transaction_id\" INTEGER PRIMARY KEY,\n    \"sales_details\" TEXT\n);\n\nCREATE TABLE Purchases (\n    \"purchase_transaction_id\" INTEGER PRIMARY KEY,\n    \"purchase_details\" TEXT\n);\n\nCREATE TABLE Transactions_Lots (\n    \"transaction_id\" INTEGER,\n    \"lot_id\" INTEGER,\n    FOREIGN KEY (\"transaction_id\") REFERENCES Transactions (\"transaction_id\"),\n    FOREIGN KEY (\"lot_id\") REFERENCES Lots (\"lot_id\")\n);"
  },
  {
    "db_id": "apartment_rentals",
    "schema": "CREATE TABLE Apartment_Buildings (\n    \"building_id\" INTEGER PRIMARY KEY,\n    \"building_short_name\" TEXT,\n    \"building_full_name\" TEXT,\n    \"building_description\" TEXT,\n    \"building_address\" TEXT,\n    \"building_manager\" TEXT,\n    \"building_phone\" TEXT\n);\n\nCREATE TABLE Apartments (\n    \"apt_id\" INTEGER PRIMARY KEY,\n    \"building_id\" INTEGER,\n    \"apt_type_code\" TEXT,\n    \"apt_number\" INTEGER,\n    \"bathroom_count\" INTEGER,\n    \"bedroom_count\" INTEGER,\n    \"room_count\" INTEGER,\n    FOREIGN KEY (\"building_id\") REFERENCES Apartment_Buildings (\"building_id\")\n);\n\nCREATE TABLE Apartment_Facilities (\n    \"apt_id\" INTEGER,\n    \"facility_code\" TEXT,\n    FOREIGN KEY (\"apt_id\") REFERENCES Apartments (\"apt_id\")\n);\n\nCREATE TABLE Guests (\n    \"guest_id\" INTEGER PRIMARY KEY,\n    \"gender_code\" TEXT,\n    \"guest_first_name\" TEXT,\n    \"guest_last_name\" TEXT,\n    \"date_of_birth\" DATE\n);\n\nCREATE TABLE Apartment_Bookings (\n    \"apt_booking_id\" INTEGER PRIMARY KEY,\n    \"apt_id\" INTEGER,\n    \"guest_id\" INTEGER,\n    \"booking_status_code\" TEXT,\n    \"booking_start_date\" DATE,\n    \"booking_end_date\" DATE,\n    FOREIGN KEY (\"apt_id\") REFERENCES Apartments (\"apt_id\"),\n    FOREIGN KEY (\"guest_id\") REFERENCES Guests (\"guest_id\")\n);\n\nCREATE TABLE View_Unit_Status (\n    \"apt_id\" INTEGER,\n    \"apt_booking_id\" INTEGER,\n    \"status_date\" DATE,\n    \"available_yn\" TEXT,\n    FOREIGN KEY (\"apt_id\") REFERENCES Apartments (\"apt_id\"),\n    FOREIGN KEY (\"apt_booking_id\") REFERENCES Apartment_Bookings (\"apt_booking_id\")\n);"
  },
    {
        "db_id": "student_transcripts_tracking",
        "schema": "CREATE TABLE addresses (\n    address_id INT PRIMARY KEY,\n    line_1 TEXT,\n    line_2 TEXT,\n    line_3 TEXT,\n    city TEXT,\n    zip_postcode TEXT,\n    state_province_county TEXT,\n    country TEXT,\n    other_address_details TEXT\n);\n\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_name TEXT,\n    course_description TEXT,\n    other_details TEXT\n);\n\nCREATE TABLE departments (\n    department_id INT PRIMARY KEY,\n    department_name TEXT,\n    department_description TEXT,\n    other_details TEXT\n);\n\nCREATE TABLE degree_programs (\n    degree_program_id INT PRIMARY KEY,\n    department_id INT,\n    degree_summary_name TEXT,\n    degree_summary_description TEXT,\n    other_details TEXT,\n    FOREIGN KEY (department_id) REFERENCES departments (department_id)\n);\n\nCREATE TABLE sections (\n    section_id INT PRIMARY KEY,\n    course_id INT,\n    section_name TEXT,\n    section_description TEXT,\n    other_details TEXT,\n    FOREIGN KEY (course_id) REFERENCES courses (course_id)\n);\n\nCREATE TABLE semesters (\n    semester_id INT PRIMARY KEY,\n    semester_name TEXT,\n    semester_description TEXT,\n    other_details TEXT\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    current_address_id INT,\n    permanent_address_id INT,\n    first_name TEXT,\n    middle_name TEXT,\n    last_name TEXT,\n    cell_mobile_number TEXT,\n    email_address TEXT,\n    ssn TEXT,\n    date_first_registered DATE,\n    date_left DATE,\n    other_student_details TEXT,\n    FOREIGN KEY (current_address_id) REFERENCES addresses (address_id),\n    FOREIGN KEY (permanent_address_id) REFERENCES addresses (address_id)\n);\n\nCREATE TABLE student_enrolment (\n    student_enrolment_id INT PRIMARY KEY,\n    degree_program_id INT,\n    semester_id INT,\n    student_id INT,\n    other_details TEXT,\n    FOREIGN KEY (degree_program_id) REFERENCES degree_programs (degree_program_id),\n    FOREIGN KEY (semester_id) REFERENCES semesters (semester_id),\n    FOREIGN KEY (student_id) REFERENCES students (student_id)\n);\n\nCREATE TABLE student_enrolment_courses (\n    student_course_id INT PRIMARY KEY,\n    course_id INT,\n    student_enrolment_id INT,\n    FOREIGN KEY (course_id) REFERENCES courses (course_id),\n    FOREIGN KEY (student_enrolment_id) REFERENCES student_enrolment (student_enrolment_id)\n);\n\nCREATE TABLE transcripts (\n    transcript_id INT PRIMARY KEY,\n    transcript_date DATE,\n    other_details TEXT\n);\n\nCREATE TABLE transcript_contents (\n    student_course_id INT,\n    transcript_id INT,\n    FOREIGN KEY (student_course_id) REFERENCES student_enrolment_courses (student_course_id),\n    FOREIGN KEY (transcript_id) REFERENCES transcripts (transcript_id)\n);"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "schema": "CREATE TABLE Ref_Document_Types (\n    Document_Type_Code TEXT PRIMARY KEY,\n    Document_Type_Name TEXT,\n    Document_Type_Description TEXT\n);\n\nCREATE TABLE Ref_Budget_Codes (\n    Budget_Type_Code TEXT PRIMARY KEY,\n    Budget_Type_Description TEXT\n);\n\nCREATE TABLE Projects (\n    Project_ID INT PRIMARY KEY,\n    Project_Details TEXT\n);\n\nCREATE TABLE Documents (\n    Document_ID INT PRIMARY KEY,\n    Document_Type_Code TEXT,\n    Project_ID INT,\n    Document_Date DATE,\n    Document_Name TEXT,\n    Document_Description TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Document_Type_Code) REFERENCES Ref_Document_Types (Document_Type_Code),\n    FOREIGN KEY (Project_ID) REFERENCES Projects (Project_ID)\n);\n\nCREATE TABLE Statements (\n    Statement_ID INT PRIMARY KEY,\n    Statement_Details TEXT\n);\n\nCREATE TABLE Documents_with_Expenses (\n    Document_ID INT,\n    Budget_Type_Code TEXT,\n    Document_Details TEXT,\n    FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID),\n    FOREIGN KEY (Budget_Type_Code) REFERENCES Ref_Budget_Codes (Budget_Type_Code)\n);\n\nCREATE TABLE Accounts (\n    Account_ID INT PRIMARY KEY,\n    Statement_ID INT,\n    Account_Details TEXT,\n    FOREIGN KEY (Statement_ID) REFERENCES Statements (Statement_ID)\n);"
    },
    {
        "db_id": "ship_mission",
        "schema": "CREATE TABLE mission (\n    Mission_ID INT PRIMARY KEY,\n    Ship_ID INT,\n    Code TEXT,\n    Launched_Year TEXT,\n    Location TEXT,\n    Speed_knots INT,\n    Fate TEXT,\n    FOREIGN KEY (Ship_ID) REFERENCES ship (Ship_ID)\n);\n\nCREATE TABLE ship (\n    Ship_ID INT PRIMARY KEY,\n    Name TEXT,\n    Type TEXT,\n    Nationality TEXT,\n    Tonnage INT\n);"
    },
    {
        "db_id": "company_office",
        "schema": "CREATE TABLE buildings (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    City TEXT,\n    Height INT,\n    Stories INT,\n    Status TEXT\n);\n\nCREATE TABLE Companies (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    Headquarters TEXT,\n    Industry TEXT,\n    Sales_billion INT,\n    Profits_billion INT,\n    Assets_billion INT,\n    Market_Value_billion INT\n);\n\nCREATE TABLE Office_locations (\n    building_id TEXT,\n    company_id TEXT,\n    move_in_year INT,\n    FOREIGN KEY (building_id) REFERENCES buildings (id),\n    FOREIGN KEY (company_id) REFERENCES Companies (id)\n);"
    },
    {
        "db_id": "tracking_software_problems",
        "schema": "CREATE TABLE Problem_Category_Codes (\n    problem_category_code TEXT PRIMARY KEY,\n    problem_category_description TEXT\n);\n\nCREATE TABLE Problem_Log (\n    problem_log_id INT PRIMARY KEY,\n    assigned_to_staff_id INT,\n    problem_id INT,\n    problem_category_code TEXT,\n    problem_status_code TEXT,\n    log_entry_date DATE,\n    log_entry_description TEXT,\n    log_entry_fix TEXT,\n    other_log_details TEXT,\n    FOREIGN KEY (problem_category_code) REFERENCES Problem_Category_Codes (problem_category_code)\n);\n\nCREATE TABLE Problem_Status_Codes (\n    problem_status_code TEXT PRIMARY KEY,\n    problem_status_description TEXT\n);\n\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_details TEXT\n);\n\nCREATE TABLE Staff (\n    staff_id INT PRIMARY KEY,\n    staff_first_name TEXT,\n    staff_last_name TEXT,\n    other_staff_details TEXT\n);\n\nCREATE TABLE Problems (\n    problem_id INT PRIMARY KEY,\n    product_id INT,\n    closure_authorised_by_staff_id INT,\n    reported_by_staff_id INT,\n    date_problem_reported DATE,\n    date_problem_closed DATE,\n    problem_description TEXT,\n    other_problem_details TEXT,\n    FOREIGN KEY (product_id) REFERENCES Product (product_id),\n    FOREIGN KEY (closure_authorised_by_staff_id) REFERENCES Staff (staff_id),\n    FOREIGN KEY (reported_by_staff_id) REFERENCES Staff (staff_id)\n);"
    },
    {
        "db_id": "products_gen_characteristics",
        "schema": "CREATE TABLE Ref_Characteristic_Types (\n    characteristic_type_code TEXT PRIMARY KEY,\n    characteristic_type_description TEXT\n);\n\nCREATE TABLE Ref_Colors (\n    color_code TEXT PRIMARY KEY,\n    color_description TEXT\n);\n\nCREATE TABLE Ref_Product_Categories (\n    product_category_code TEXT PRIMARY KEY,\n    product_category_description TEXT,\n    unit_of_measure TEXT\n);\n\nCREATE TABLE Characteristics (\n    characteristic_id INT PRIMARY KEY,\n    characteristic_type_code TEXT,\n    characteristic_data_type TEXT,\n    characteristic_name TEXT,\n    other_characteristic_details TEXT,\n    FOREIGN KEY (characteristic_type_code) REFERENCES Ref_Characteristic_Types (characteristic_type_code)\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    color_code TEXT,\n    product_category_code TEXT,\n    product_name TEXT,\n    typical_buying_price DECIMAL,\n    typical_selling_price DECIMAL,\n    product_description TEXT,\n    other_product_details TEXT,\n    FOREIGN KEY (color_code) REFERENCES Ref_Colors (color_code),\n    FOREIGN KEY (product_category_code) REFERENCES Ref_Product_Categories (product_category_code)\n);\n\nCREATE TABLE Product_Characteristics (\n    product_id INT,\n    characteristic_id INT,\n    product_characteristic_value TEXT,\n    FOREIGN KEY (product_id) REFERENCES Products (product_id),\n    FOREIGN KEY (characteristic_id) REFERENCES Characteristics (characteristic_id)\n);"
    },
    {
        "db_id": "coffee_shop",
        "schema": "CREATE TABLE shop (\n    Shop_ID TEXT PRIMARY KEY,\n    Address TEXT,\n    Num_of_staff INT,\n    Score INT,\n    Open_Year INT\n);\n\nCREATE TABLE member (\n    Member_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Membership_card TEXT,\n    Age INT,\n    Time_of_purchase TIME,\n    Level_of_membership INT,\n    Address TEXT\n);\n\nCREATE TABLE happy_hour (\n    HH_ID INT PRIMARY KEY,\n    Shop_ID TEXT,\n    Month INT,\n    Num_of_shaff_in_charge INT,\n    FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID)\n);\n\nCREATE TABLE happy_hour_member (\n    HH_ID INT,\n    Member_ID TEXT,\n    Total_amount INT,\n    FOREIGN KEY (HH_ID) REFERENCES happy_hour (HH_ID),\n    FOREIGN KEY (Member_ID) REFERENCES member (Member_ID)\n);"
    },
    {
        "db_id": "riding_club",
        "schema": "CREATE TABLE player (\n    Player_ID TEXT PRIMARY KEY,\n    Sponsor_name TEXT,\n    Player_name TEXT,\n    Gender TEXT,\n    Residence TEXT,\n    Occupation TEXT,\n    Votes INT,\n    Rank INT\n);\n\nCREATE TABLE club (\n    Club_ID TEXT PRIMARY KEY,\n    Club_name TEXT,\n    Region TEXT,\n    Start_year INT\n);\n\nCREATE TABLE coach (\n    Coach_ID TEXT PRIMARY KEY,\n    Coach_name TEXT,\n    Gender TEXT,\n    Club_ID TEXT,\n    Rank INT,\n    FOREIGN KEY (Club_ID) REFERENCES club (Club_ID)\n);\n\nCREATE TABLE player_coach (\n    Player_ID TEXT,\n    Coach_ID TEXT,\n    Starting_year INT,\n    FOREIGN KEY (Player_ID) REFERENCES player (Player_ID),\n    FOREIGN KEY (Coach_ID) REFERENCES coach (Coach_ID)\n);\n\nCREATE TABLE match_result (\n    Rank INT,\n    Club_ID TEXT,\n    Gold INT,\n    Big_Silver INT,\n    Small_Silver INT,\n    Bronze INT,\n    Points INT,\n    FOREIGN KEY (Club_ID) REFERENCES club (Club_ID)\n);"
    },
    {
        "db_id": "customers_card_transactions",
        "schema": "CREATE TABLE Accounts (\n    account_id TEXT PRIMARY KEY,\n    customer_id INT,\n    account_name TEXT,\n    other_account_details TEXT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_first_name TEXT,\n    customer_last_name TEXT,\n    customer_address TEXT,\n    customer_phone TEXT,\n    customer_email TEXT,\n    other_customer_details TEXT\n);\n\nCREATE TABLE Customers_Cards (\n    card_id TEXT PRIMARY KEY,\n    customer_id INT,\n    card_type_code TEXT,\n    card_number TEXT,\n    date_valid_from DATE,\n    date_valid_to DATE,\n    other_card_details TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\n\nCREATE TABLE Financial_Transactions (\n    transaction_id INT PRIMARY KEY,\n    previous_transaction_id INT,\n    account_id TEXT,\n    card_id TEXT,\n    transaction_type TEXT,\n    transaction_date DATE,\n    transaction_amount DECIMAL,\n    transaction_comment TEXT,\n    other_transaction_details TEXT,\n    FOREIGN KEY (account_id) REFERENCES Accounts (account_id),\n    FOREIGN KEY (card_id) REFERENCES Customers_Cards (card_id)\n);"
    },
    {
        "db_id": "county_public_safety",
        "schema": "CREATE TABLE county_public_safety (\n    County_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Population INT,\n    Police_officers INT,\n    Residents_per_officer INT,\n    Case_burden INT,\n    Crime_rate INT,\n    Police_force TEXT,\n    Location TEXT\n);\n\nCREATE TABLE city (\n    City_ID INT PRIMARY KEY,\n    County_ID TEXT,\n    Name TEXT,\n    White INT,\n    Black INT,\n    Amerindian INT,\n    Asian INT,\n    Multiracial INT,\n    Hispanic INT,\n    FOREIGN KEY (County_ID) REFERENCES county_public_safety (County_ID)\n);"
    },
    {
        "db_id": "performance_attendance",
        "schema": "CREATE TABLE member (\n    Member_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Nationality TEXT,\n    Role TEXT\n);\n\nCREATE TABLE performance (\n    Performance_ID INT PRIMARY KEY,\n    Date INT,\n    Host TEXT,\n    Location TEXT,\n    Attendance INT\n);\n\nCREATE TABLE member_attendance (\n    Member_ID TEXT,\n    Performance_ID INT,\n    Num_of_Pieces INT,\n    FOREIGN KEY (Member_ID) REFERENCES member (Member_ID),\n    FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);"
    },
    {
        "db_id": "club_1",
        "schema": "CREATE TABLE Student (\n    StuID INT PRIMARY KEY,\n    LName TEXT,\n    Fname TEXT,\n    Age INT,\n    Sex TEXT,\n    Major TEXT,\n    Advisor INT,\n    city_code INT\n);\n\nCREATE TABLE Club (\n    ClubID INT PRIMARY KEY,\n    ClubName TEXT,\n    ClubDesc TEXT,\n    ClubLocation TEXT\n);\n\nCREATE TABLE Member_of_club (\n    StuID INT,\n    ClubID INT,\n    Position TEXT,\n    FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    FOREIGN KEY (ClubID) REFERENCES Club (ClubID)\n);"
    },
    {
        "db_id": "singer",
        "schema": "CREATE TABLE singer (\n    Singer_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Birth_Year INT,\n    Net_Worth_Millions INT,\n    Citizenship TEXT\n);\n\nCREATE TABLE song (\n    Song_ID INT PRIMARY KEY,\n    Title TEXT,\n    Singer_ID TEXT,\n    Sales INT,\n    Highest_Position INT,\n    FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);"
    },
    {
        "db_id": "culture_company",
        "schema": "CREATE TABLE book_club (\n    book_club_id TEXT PRIMARY KEY,\n    Year INT,\n    Author_or_Editor TEXT,\n    Book_Title TEXT,\n    Publisher TEXT,\n    Category TEXT,\n    Result TEXT\n);\n\nCREATE TABLE movie (\n    movie_id INT PRIMARY KEY,\n    Title TEXT,\n    Year INT,\n    Director TEXT,\n    Budget_million DECIMAL,\n    Gross_worldwide DECIMAL\n);\n\nCREATE TABLE culture_company (\n    Company_name TEXT,\n    Type TEXT,\n    Incorporated_in TEXT,\n    Group_Equity_Shareholding DECIMAL,\n    book_club_id TEXT,\n    movie_id INT,\n    FOREIGN KEY (book_club_id) REFERENCES book_club (book_club_id),\n    FOREIGN KEY (movie_id) REFERENCES movie (movie_id)\n);"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "schema": "CREATE TABLE Ref_Template_Types (\n    Template_Type_Code TEXT PRIMARY KEY,\n    Template_Type_Description TEXT\n);\n\nCREATE TABLE Templates (\n    Template_ID INT PRIMARY KEY,\n    Version_Number INT,\n    Template_Type_Code TEXT,\n    Date_Effective_From DATE,\n    Date_Effective_To DATE,\n    Template_Details TEXT,\n    FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\n\nCREATE TABLE Documents (\n    Document_ID INT PRIMARY KEY,\n    Template_ID INT,\n    Document_Name TEXT,\n    Document_Description TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\n\nCREATE TABLE Paragraphs (\n    Paragraph_ID INT PRIMARY KEY,\n    Document_ID INT,\n    Paragraph_Text TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);"
    },
    {
        "db_id": "musical",
        "schema": "CREATE TABLE musical (\n    Musical_ID INT PRIMARY KEY,\n    Name TEXT,\n    Year INT,\n    Award TEXT,\n    Category TEXT,\n    Nominee TEXT,\n    Result TEXT\n);\n\nCREATE TABLE actor (\n    Actor_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Musical_ID INT,\n    Character TEXT,\n    Duration INT,\n    Age INT,\n    FOREIGN KEY (Musical_ID) REFERENCES musical (Musical_ID)\n);"
    },
    {
        "db_id": "world_1",
        "schema": "CREATE TABLE city (\n    ID TEXT PRIMARY KEY,\n    Name TEXT,\n    CountryCode TEXT,\n    District TEXT,\n    Population TEXT\n);\n\nCREATE TABLE sqlite_sequence (\n    name TEXT PRIMARY KEY,\n    seq TEXT\n);\n\nCREATE TABLE country (\n    Code TEXT PRIMARY KEY,\n    Name TEXT,\n    Continent TEXT,\n    Region TEXT,\n    SurfaceArea DECIMAL,\n    IndepYear INT,\n    Population INT,\n    LifeExpectancy DECIMAL,\n    GNP DECIMAL,\n    GNPOld DECIMAL,\n    LocalName TEXT,\n    GovernmentForm TEXT,\n    HeadOfState TEXT,\n    Capital INT,\n    Code2 TEXT\n);\n\nCREATE TABLE countrylanguage (\n    CountryCode TEXT,\n    Language TEXT,\n    IsOfficial TEXT,\n    Percentage INT,\n    FOREIGN KEY (CountryCode) REFERENCES country (Code)\n);"
    },
    {
        "db_id": "device",
        "schema": "CREATE TABLE device (\n    Device_ID TEXT PRIMARY KEY,\n    Device TEXT,\n    Carrier TEXT,\n    Package_Version TEXT,\n    Applications TEXT,\n    Software_Platform TEXT\n);\n\nCREATE TABLE shop (\n    Shop_ID TEXT PRIMARY KEY,\n    Shop_Name TEXT,\n    Location TEXT,\n    Open_Date DATE,\n    Open_Year INT\n);\n\nCREATE TABLE stock (\n    Shop_ID TEXT,\n    Device_ID TEXT,\n    Quantity INT,\n    FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    FOREIGN KEY (Device_ID) REFERENCES device (Device_ID)\n);"
    },
    {
        "db_id": "tracking_grants_for_research",
        "schema": "CREATE TABLE Document_Types (\n    document_type_code TEXT PRIMARY KEY,\n    document_description TEXT\n);\n\nCREATE TABLE Documents (\n    document_id INT PRIMARY KEY,\n    document_type_code TEXT,\n    grant_id INT,\n    sent_date DATE,\n    response_received_date DATE,\n    other_details TEXT,\n    FOREIGN KEY (document_type_code) REFERENCES Document_Types (document_type_code)\n);\n\nCREATE TABLE Grants (\n    grant_id INT PRIMARY KEY,\n    organisation_id INT,\n    grant_amount DECIMAL,\n    grant_start_date DATE,\n    grant_end_date DATE,\n    other_details TEXT\n);\n\nCREATE TABLE Organisation_Types (\n    organisation_type TEXT PRIMARY KEY,\n    organisation_type_description TEXT\n);\n\nCREATE TABLE Organisations (\n    organisation_id INT PRIMARY KEY,\n    organisation_type TEXT,\n    organisation_details TEXT,\n    FOREIGN KEY (organisation_type) REFERENCES Organisation_Types (organisation_type)\n);\n\nCREATE TABLE Project_Outcomes (\n    project_id INT PRIMARY KEY,\n    outcome_code TEXT,\n    outcome_details TEXT\n);\n\nCREATE TABLE Project_Staff (\n    staff_id INT PRIMARY KEY,\n    project_id INT,\n    role_code TEXT,\n    date_from DATE,\n    date_to DATE,\n    other_details TEXT,\n    FOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\n\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    organisation_id INT,\n    project_details TEXT,\n    FOREIGN KEY (organisation_id) REFERENCES Organisations (organisation_id)\n);\n\nCREATE TABLE Research_Outcomes (\n    outcome_code TEXT PRIMARY KEY,\n    outcome_description TEXT\n);\n\nCREATE TABLE Research_Staff (\n    staff_id INT PRIMARY KEY,\n    employer_organisation_id INT,\n    staff_details TEXT,\n    FOREIGN KEY (employer_organisation_id) REFERENCES Organisations (organisation_id)\n);\n\nCREATE TABLE Staff_Roles (\n    role_code TEXT PRIMARY KEY,\n    role_description TEXT\n);\n\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    project_id INT,\n    task_details TEXT,\n    eg Agree Objectives TEXT,\n    FOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);"
    },
    {
        "db_id": "employee_hire_evaluation",
        "schema": "CREATE TABLE employee (\n    Employee_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Age INT,\n    City TEXT\n);\n\nCREATE TABLE shop (\n    Shop_ID INT PRIMARY KEY,\n    Name TEXT,\n    Location TEXT,\n    District TEXT,\n    Number_products INT,\n    Manager_name TEXT\n);\n\nCREATE TABLE hiring (\n    Shop_ID INT,\n    Employee_ID TEXT,\n    Start_from DATE,\n    Is_full_time TEXT,\n    FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\n\nCREATE TABLE evaluation (\n    Employee_ID TEXT,\n    Year_awarded INT,\n    Bonus DECIMAL,\n    FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);"
    },
    {
        "db_id": "movie_1",
        "schema": "CREATE TABLE Movie (\n    mID TEXT PRIMARY KEY,\n    title TEXT,\n    year INT,\n    director TEXT\n);\n\nCREATE TABLE Reviewer (\n    rID INT PRIMARY KEY,\n    name TEXT\n);\n\nCREATE TABLE Rating (\n    rID INT,\n    mID TEXT,\n    stars INT,\n    ratingDate DATE,\n    FOREIGN KEY (rID) REFERENCES Reviewer (rID),\n    FOREIGN KEY (mID) REFERENCES Movie (mID)\n);"
    },
    {
        "db_id": "network_1",
        "schema": "CREATE TABLE Highschooler (\n    ID INT PRIMARY KEY,\n    name TEXT,\n    grade INT\n);\n\nCREATE TABLE Friend (\n    student_id INT,\n    friend_id INT,\n    FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\n\nCREATE TABLE Likes (\n    student_id INT,\n    liked_id INT,\n    FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);"
    },
    {
        "db_id": "poker_player",
        "schema": "CREATE TABLE poker_player (\n    Poker_Player_ID TEXT PRIMARY KEY,\n    People_ID INT,\n    Final_Table_Made INT,\n    Best_Finish INT,\n    Money_Rank INT,\n    Earnings DECIMAL,\n    FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID INT PRIMARY KEY,\n    Nationality TEXT,\n    Name TEXT,\n    Birth_Date DATE,\n    Height INT\n);"
    },
    {
        "db_id": "program_share",
        "schema": "CREATE TABLE program (\n    Program_ID INT PRIMARY KEY,\n    Name TEXT,\n    Origin TEXT,\n    Launch TEXT,\n    Owner TEXT\n);\n\nCREATE TABLE channel (\n    Channel_ID INT PRIMARY KEY,\n    Name TEXT,\n    Owner TEXT,\n    Share_in_percent INT,\n    Rating_in_percent INT\n);\n\nCREATE TABLE broadcast (\n    Channel_ID INT,\n    Program_ID INT,\n    Time_of_day TEXT,\n    FOREIGN KEY (Channel_ID) REFERENCES channel (Channel_ID),\n    FOREIGN KEY (Program_ID) REFERENCES program (Program_ID)\n);\n\nCREATE TABLE broadcast_share (\n    Channel_ID INT,\n    Program_ID INT,\n    Date DATE,\n    Share_in_percent INT,\n    FOREIGN KEY (Channel_ID) REFERENCES channel (Channel_ID),\n    FOREIGN KEY (Program_ID) REFERENCES program (Program_ID)\n);"
    },
    {
        "db_id": "aircraft",
        "schema": "CREATE TABLE pilot (\n    Pilot_Id TEXT PRIMARY KEY,\n    Name TEXT,\n    Age INT\n);\n\nCREATE TABLE aircraft (\n    Aircraft_ID INT PRIMARY KEY,\n    Aircraft TEXT,\n    Description TEXT,\n    Max_Gross_Weight TEXT,\n    Total_disk_area TEXT,\n    Max_disk_Loading TEXT\n);\n\nCREATE TABLE match (\n    Round INT,\n    Location TEXT,\n    Country TEXT,\n    Date DATE,\n    Fastest_Qualifying TEXT,\n    Winning_Pilot TEXT,\n    Winning_Aircraft INT,\n    FOREIGN KEY (Winning_Aircraft) REFERENCES aircraft (Aircraft_ID)\n);\n\nCREATE TABLE airport (\n    Airport_ID INT PRIMARY KEY,\n    Airport_Name TEXT,\n    Total_Passengers INT,\n    %_Change_2007 INT,\n    International_Passengers INT,\n    Domestic_Passengers INT,\n    Transit_Passengers INT,\n    Aircraft_Movements INT,\n    Freight_Metric_Tonnes DECIMAL\n);\n\nCREATE TABLE airport_aircraft (\n    ID INT PRIMARY KEY,\n    Airport_ID INT,\n    Aircraft_ID INT,\n    FOREIGN KEY (Airport_ID) REFERENCES airport (Airport_ID),\n    FOREIGN KEY (Aircraft_ID) REFERENCES aircraft (Aircraft_ID)\n);"
    },
    {
        "db_id": "restaurant_1",
        "schema": "CREATE TABLE Student (\n    StuID INT PRIMARY KEY,\n    LName TEXT,\n    Fname TEXT,\n    Age INT,\n    Sex TEXT,\n    Major TEXT,\n    Advisor INT,\n    city_code INT\n);\n\nCREATE TABLE Restaurant (\n    ResID INT PRIMARY KEY,\n    ResName TEXT,\n    Address TEXT,\n    Rating INT\n);\n\nCREATE TABLE Type_Of_Restaurant (\n    ResTypeID INT PRIMARY KEY,\n    ResTypeName TEXT,\n    ResTypeDescription TEXT\n);\n\nCREATE TABLE Restaurant_Type (\n    ResID INT,\n    ResTypeID INT,\n    FOREIGN KEY (ResID) REFERENCES Restaurant (ResID),\n    FOREIGN KEY (ResTypeID) REFERENCES Type_Of_Restaurant (ResTypeID)\n);\n\nCREATE TABLE Visits_Restaurant (\n    StuID INT,\n    ResID INT,\n    Time TIME,\n    Spent DECIMAL,\n    FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    FOREIGN KEY (ResID) REFERENCES Restaurant (ResID)\n);"
    },
    {
        "db_id": "customers_and_invoices",
        "schema": "CREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_first_name TEXT,\n    customer_middle_initial TEXT,\n    customer_last_name TEXT,\n    gender TEXT,\n    email_address TEXT,\n    login_name TEXT,\n    login_password TEXT,\n    phone_number TEXT,\n    town_city TEXT,\n    state_county_province TEXT,\n    country TEXT\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    date_order_placed DATE,\n    order_details TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\n\nCREATE TABLE Invoices (\n    invoice_number INT PRIMARY KEY,\n    order_id INT,\n    invoice_date DATE,\n    FOREIGN KEY (order_id) REFERENCES Orders (order_id)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    date_account_opened DATE,\n    account_name TEXT,\n    other_account_details TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\n\nCREATE TABLE Product_Categories (\n    production_type_code TEXT PRIMARY KEY,\n    product_type_description TEXT,\n    vat_rating TEXT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    parent_product_id INT,\n    production_type_code TEXT,\n    unit_price DECIMAL,\n    product_name TEXT,\n    product_color TEXT,\n    product_size TEXT,\n    FOREIGN KEY (production_type_code) REFERENCES Product_Categories (production_type_code)\n);\n\nCREATE TABLE Financial_Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    invoice_number INT,\n    transaction_type TEXT,\n    transaction_date DATE,\n    transaction_amount DECIMAL,\n    transaction_comment TEXT,\n    other_transaction_details TEXT,\n    FOREIGN KEY (account_id) REFERENCES Accounts (account_id),\n    FOREIGN KEY (invoice_number) REFERENCES Invoices (invoice_number)\n);\n\nCREATE TABLE Order_Items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    product_quantity INT,\n    other_order_item_details TEXT,\n    FOREIGN KEY (order_id) REFERENCES Orders (order_id),\n    FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);\n\nCREATE TABLE Invoice_Line_Items (\n    order_item_id INT,\n    invoice_number INT,\n    product_id INT,\n    product_title TEXT,\n    product_quantity INT,\n    product_price DECIMAL,\n    derived_product_cost DECIMAL,\n    derived_vat_payable DECIMAL,\n    derived_total_cost DECIMAL,\n    FOREIGN KEY (order_item_id) REFERENCES Order_Items (order_item_id),\n    FOREIGN KEY (invoice_number) REFERENCES Invoices (invoice_number),\n    FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);"
    },
    {
        "db_id": "insurance_and_eClaims",
        "schema": "CREATE TABLE Customers (\n    Customer_ID INT PRIMARY KEY,\n    Customer_Details TEXT\n);\n\nCREATE TABLE Staff (\n    Staff_ID INT PRIMARY KEY,\n    Staff_Details TEXT\n);\n\nCREATE TABLE Policies (\n    Policy_ID INT PRIMARY KEY,\n    Customer_ID INT,\n    Policy_Type_Code TEXT,\n    Start_Date DATE,\n    End_Date DATE,\n    FOREIGN KEY (Customer_ID) REFERENCES Customers (Customer_ID)\n);\n\nCREATE TABLE Claim_Headers (\n    Claim_Header_ID INT PRIMARY KEY,\n    Claim_Status_Code TEXT,\n    Claim_Type_Code TEXT,\n    Policy_ID INT,\n    Date_of_Claim DATE,\n    Date_of_Settlement DATE,\n    Amount_Claimed DECIMAL,\n    Amount_Piad DECIMAL,\n    FOREIGN KEY (Policy_ID) REFERENCES Policies (Policy_ID)\n);\n\nCREATE TABLE Claims_Documents (\n    Claim_ID INT PRIMARY KEY,\n    Document_Type_Code TEXT,\n    Created_by_Staff_ID INT,\n    Created_Date DATE,\n    FOREIGN KEY (Created_by_Staff_ID) REFERENCES Staff (Staff_ID)\n);\n\nCREATE TABLE Claims_Processing_Stages (\n    Claim_Stage_ID INT PRIMARY KEY,\n    Next_Claim_Stage_ID INT,\n    Claim_Status_Name TEXT,\n    Claim_Status_Description TEXT\n);\n\nCREATE TABLE Claims_Processing (\n    Claim_Processing_ID INT PRIMARY KEY,\n    Claim_ID INT,\n    Claim_Outcome_Code TEXT,\n    Claim_Stage_ID INT,\n    Staff_ID INT\n);"
    },
    {
        "db_id": "college_1",
        "schema": "CREATE TABLE CLASS (\n    CLASS_CODE TEXT PRIMARY KEY,\n    CRS_CODE TEXT,\n    CLASS_SECTION TEXT,\n    CLASS_TIME TEXT,\n    CLASS_ROOM TEXT,\n    PROF_NUM TEXT,\n    FOREIGN KEY (CRS_CODE) REFERENCES COURSE (CRS_CODE)\n);\n\nCREATE TABLE COURSE (\n    CRS_CODE TEXT PRIMARY KEY,\n    DEPT_CODE TEXT,\n    CRS_DESCRIPTION TEXT,\n    CRS_CREDIT INT,\n    FOREIGN KEY (DEPT_CODE) REFERENCES DEPARTMENT (DEPT_CODE)\n);\n\nCREATE TABLE DEPARTMENT (\n    DEPT_CODE TEXT PRIMARY KEY,\n    DEPT_NAME TEXT,\n    SCHOOL_CODE TEXT,\n    EMP_NUM TEXT,\n    DEPT_ADDRESS TEXT,\n    DEPT_EXTENSION TEXT\n);\n\nCREATE TABLE EMPLOYEE (\n    EMP_NUM TEXT PRIMARY KEY,\n    EMP_LNAME TEXT,\n    EMP_FNAME TEXT,\n    EMP_INITIAL TEXT,\n    EMP_JOBCODE TEXT,\n    EMP_HIREDATE DATE,\n    EMP_DOB DATE\n);\n\nCREATE TABLE ENROLL (\n    CLASS_CODE TEXT,\n    STU_NUM TEXT,\n    ENROLL_GRADE TEXT,\n    FOREIGN KEY (CLASS_CODE) REFERENCES CLASS (CLASS_CODE)\n);\n\nCREATE TABLE PROFESSOR (\n    EMP_NUM TEXT PRIMARY KEY,\n    DEPT_CODE TEXT,\n    PROF_OFFICE TEXT,\n    PROF_EXTENSION TEXT,\n    PROF_HIGH_DEGREE TEXT,\n    FOREIGN KEY (EMP_NUM) REFERENCES EMPLOYEE (EMP_NUM),\n    FOREIGN KEY (DEPT_CODE) REFERENCES DEPARTMENT (DEPT_CODE)\n);\n\nCREATE TABLE STUDENT (\n    STU_NUM TEXT PRIMARY KEY,\n    STU_LNAME TEXT,\n    STU_FNAME TEXT,\n    STU_INIT TEXT,\n    STU_DOB DATE,\n    STU_HRS INT,\n    STU_CLASS TEXT,\n    STU_GPA DECIMAL,\n    STU_TRANSFER TEXT,\n    DEPT_CODE TEXT,\n    STU_PHONE TEXT,\n    PROF_NUM TEXT,\n    FOREIGN KEY (DEPT_CODE) REFERENCES DEPARTMENT (DEPT_CODE),\n    FOREIGN KEY (PROF_NUM) REFERENCES PROFESSOR (EMP_NUM)\n);"
    },
    {
        "db_id": "local_govt_mdm",
        "schema": "CREATE TABLE Customer_Master_Index (\n    master_customer_id TEXT PRIMARY KEY,\n    cmi_details TEXT\n);\n\nCREATE TABLE CMI_Cross_References (\n    cmi_cross_ref_id INT PRIMARY KEY,\n    master_customer_id TEXT,\n    source_system_code TEXT,\n    FOREIGN KEY (master_customer_id) REFERENCES Customer_Master_Index (master_customer_id)\n);\n\nCREATE TABLE Council_Tax (\n    council_tax_id INT PRIMARY KEY,\n    cmi_cross_ref_id INT,\n    FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)\n);\n\nCREATE TABLE Business_Rates (\n    business_rates_id INT PRIMARY KEY,\n    cmi_cross_ref_id INT,\n    FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)\n);\n\nCREATE TABLE Benefits_Overpayments (\n    council_tax_id INT PRIMARY KEY,\n    cmi_cross_ref_id INT,\n    FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)\n);\n\nCREATE TABLE Parking_Fines (\n    council_tax_id INT PRIMARY KEY,\n    cmi_cross_ref_id INT,\n    FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)\n);\n\nCREATE TABLE Rent_Arrears (\n    council_tax_id INT PRIMARY KEY,\n    cmi_cross_ref_id INT,\n    FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)\n);\n\nCREATE TABLE Electoral_Register (\n    electoral_register_id INT PRIMARY KEY,\n    cmi_cross_ref_id INT,\n    FOREIGN KEY (cmi_cross_ref_id) REFERENCES CMI_Cross_References (cmi_cross_ref_id)\n);"
    },
    {
        "db_id": "book_2",
        "schema": "CREATE TABLE publication (\n    Publication_ID INT PRIMARY KEY,\n    Book_ID INT,\n    Publisher TEXT,\n    Publication_Date DATE,\n    Price DECIMAL,\n    FOREIGN KEY (Book_ID) REFERENCES book (Book_ID)\n);\n\nCREATE TABLE book (\n    Book_ID INT PRIMARY KEY,\n    Title TEXT,\n    Issues INT,\n    Writer INT\n);"
    },
    {
        "db_id": "hr_1",
        "schema": "CREATE TABLE regions (\n    REGION_ID INT PRIMARY KEY,\n    REGION_NAME TEXT\n);\n\nCREATE TABLE countries (\n    COUNTRY_ID INT PRIMARY KEY,\n    COUNTRY_NAME TEXT,\n    REGION_ID INT,\n    FOREIGN KEY (REGION_ID) REFERENCES regions (REGION_ID)\n);\n\nCREATE TABLE departments (\n    DEPARTMENT_ID INT PRIMARY KEY,\n    DEPARTMENT_NAME TEXT,\n    MANAGER_ID INT,\n    LOCATION_ID INT,\n    FOREIGN KEY (MANAGER_ID) REFERENCES employees (EMPLOYEE_ID),\n    FOREIGN KEY (LOCATION_ID) REFERENCES locations (LOCATION_ID)\n);\n\nCREATE TABLE jobs (\n    JOB_ID INT PRIMARY KEY,\n    JOB_TITLE TEXT,\n    MIN_SALARY DECIMAL,\n    MAX_SALARY DECIMAL\n);\n\nCREATE TABLE employees (\n    EMPLOYEE_ID INT PRIMARY KEY,\n    FIRST_NAME TEXT,\n    LAST_NAME TEXT,\n    EMAIL TEXT,\n    PHONE_NUMBER TEXT,\n    HIRE_DATE DATE,\n    JOB_ID INT,\n    SALARY DECIMAL,\n    COMMISSION_PCT DECIMAL,\n    MANAGER_ID INT,\n    DEPARTMENT_ID INT,\n    FOREIGN KEY (JOB_ID) REFERENCES jobs (JOB_ID),\n    FOREIGN KEY (MANAGER_ID) REFERENCES employees (EMPLOYEE_ID),\n    FOREIGN KEY (DEPARTMENT_ID) REFERENCES departments (DEPARTMENT_ID)\n);\n\nCREATE TABLE job_history (\n    EMPLOYEE_ID INT,\n    START_DATE DATE,\n    END_DATE DATE,\n    JOB_ID INT,\n    DEPARTMENT_ID INT,\n    FOREIGN KEY (EMPLOYEE_ID) REFERENCES employees (EMPLOYEE_ID),\n    FOREIGN KEY (JOB_ID) REFERENCES jobs (JOB_ID),\n    FOREIGN KEY (DEPARTMENT_ID) REFERENCES departments (DEPARTMENT_ID)\n);\n\nCREATE TABLE locations (\n    LOCATION_ID INT PRIMARY KEY,\n    STREET_ADDRESS TEXT,\n    POSTAL_CODE TEXT,\n    CITY TEXT,\n    STATE_PROVINCE TEXT,\n    COUNTRY_ID INT,\n    FOREIGN KEY (COUNTRY_ID) REFERENCES countries (COUNTRY_ID)\n);"
    },
    {
        "db_id": "soccer_1",
        "schema": "CREATE TABLE Player_Attributes (\n    id TEXT PRIMARY KEY,\n    player_fifa_api_id INT,\n    player_api_id INT,\n    date DATE,\n    overall_rating INT,\n    potential INT,\n    preferred_foot TEXT,\n    attacking_work_rate TEXT,\n    defensive_work_rate TEXT,\n    crossing INT,\n    finishing INT,\n    heading_accuracy INT,\n    short_passing INT,\n    volleys INT,\n    dribbling INT,\n    curve INT,\n    free_kick_accuracy INT,\n    long_passing INT,\n    ball_control INT,\n    acceleration INT,\n    sprint_speed INT,\n    agility INT,\n    reactions INT,\n    balance INT,\n    shot_power INT,\n    jumping INT,\n    stamina INT,\n    strength INT,\n    long_shots INT,\n    aggression INT,\n    interceptions INT,\n    positioning INT,\n    vision INT,\n    penalties INT,\n    marking INT,\n    standing_tackle INT,\n    sliding_tackle INT,\n    gk_diving INT,\n    gk_handling INT,\n    gk_kicking INT,\n    gk_positioning INT,\n    gk_reflexes INT\n);\n\nCREATE TABLE sqlite_sequence (\n    name TEXT PRIMARY KEY,\n    seq TEXT\n);\n\nCREATE TABLE Player (\n    id INT PRIMARY KEY,\n    player_api_id INT,\n    player_name TEXT,\n    player_fifa_api_id INT,\n    birthday DATE,\n    height INT,\n    weight INT\n);\n\nCREATE TABLE League (\n    id INT PRIMARY KEY,\n    country_id INT,\n    name TEXT,\n    FOREIGN KEY (country_id) REFERENCES Country (id)\n);\n\nCREATE TABLE Country (\n    id INT PRIMARY KEY,\n    name TEXT\n);\n\nCREATE TABLE Team (\n    id INT PRIMARY KEY,\n    team_api_id INT,\n    team_fifa_api_id INT,\n    team_long_name TEXT,\n    team_short_name TEXT\n);\n\nCREATE TABLE Team_Attributes (\n    id INT PRIMARY KEY,\n    team_fifa_api_id INT,\n    team_api_id INT,\n    date DATE,\n    buildUpPlaySpeed INT,\n    buildUpPlaySpeedClass TEXT,\n    buildUpPlayDribbling INT,\n    buildUpPlayDribblingClass TEXT,\n    buildUpPlayPassing INT,\n    buildUpPlayPassingClass TEXT,\n    buildUpPlayPositioningClass TEXT,\n    chanceCreationPassing INT,\n    chanceCreationPassingClass TEXT,\n    chanceCreationCrossing INT,\n    chanceCreationCrossingClass TEXT,\n    chanceCreationShooting INT,\n    chanceCreationShootingClass TEXT,\n    chanceCreationPositioningClass TEXT,\n    defencePressure INT,\n    defencePressureClass TEXT,\n    defenceAggression INT,\n    defenceAggressionClass TEXT,\n    defenceTeamWidth INT,\n    defenceTeamWidthClass TEXT,\n    defenceDefenderLineClass TEXT,\n    FOREIGN KEY (team_fifa_api_id) REFERENCES Team (team_fifa_api_id),\n    FOREIGN KEY (team_api_id) REFERENCES Team (team_api_id)\n);"
    },
    {
        "db_id": "sakila_1",
        "schema": "CREATE TABLE actor (\n    actor_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    last_update TIMESTAMP\n);\n\nCREATE TABLE address (\n    address_id INT PRIMARY KEY,\n    address TEXT,\n    address2 TEXT,\n    district TEXT,\n    city_id INT,\n    postal_code TEXT,\n    phone TEXT,\n    last_update TIMESTAMP\n);\n\nCREATE TABLE category (\n    category_id INT PRIMARY KEY,\n    name TEXT,\n    last_update TIMESTAMP\n);\n\nCREATE TABLE city (\n    city_id INT PRIMARY KEY,\n    city TEXT,\n    country_id INT,\n    last_update TIMESTAMP\n);\n\nCREATE TABLE country (\n    country_id INT PRIMARY KEY,\n    country TEXT,\n    last_update TIMESTAMP\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    store_id INT,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    address_id INT,\n    active BOOLEAN,\n    create_date DATE,\n    last_update TIMESTAMP,\n    FOREIGN KEY (store_id) REFERENCES store (store_id),\n    FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE film (\n    film_id INT PRIMARY KEY,\n    title TEXT,\n    description TEXT,\n    release_year INT,\n    language_id INT,\n    original_language_id INT,\n    rental_duration INT,\n    rental_rate DECIMAL,\n    length INT,\n    replacement_cost DECIMAL,\n    rating TEXT,\n    special_features TEXT,\n    last_update TIMESTAMP\n);\n\nCREATE TABLE film_actor (\n    actor_id INT,\n    film_id INT,\n    last_update TIMESTAMP,\n    FOREIGN KEY (actor_id) REFERENCES actor (actor_id),\n    FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE film_category (\n    film_id INT,\n    category_id INT,\n    last_update TIMESTAMP,\n    FOREIGN KEY (film_id) REFERENCES film (film_id),\n    FOREIGN KEY (category_id) REFERENCES category (category_id)\n);\n\nCREATE TABLE film_text (\n    film_id INT,\n    title TEXT,\n    description TEXT,\n    FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    film_id INT,\n    store_id INT,\n    last_update TIMESTAMP,\n    FOREIGN KEY (film_id) REFERENCES film (film_id),\n    FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE language (\n    language_id INT PRIMARY KEY,\n    name TEXT,\n    last_update TIMESTAMP\n);\n\nCREATE TABLE payment (\n    payment_id INT PRIMARY KEY,\n    customer_id INT,\n    staff_id INT,\n    rental_id INT,\n    amount DECIMAL,\n    payment_date DATE,\n    last_update TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    FOREIGN KEY (staff_id) REFERENCES staff (staff_id),\n    FOREIGN KEY (rental_id) REFERENCES rental (rental_id)\n);\n\nCREATE TABLE rental (\n    rental_id INT PRIMARY KEY,\n    rental_date DATE,\n    inventory_id INT,\n    customer_id INT,\n    return_date DATE,\n    staff_id INT,\n    last_update TIMESTAMP,\n    FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),\n    FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    FOREIGN KEY (staff_id) REFERENCES staff (staff_id)\n);\n\nCREATE TABLE staff (\n    staff_id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    address_id INT,\n    picture BLOB,\n    email TEXT,\n    store_id INT,\n    active BOOLEAN,\n    username TEXT,\n    password TEXT,\n    last_update TIMESTAMP,\n    FOREIGN KEY (address_id) REFERENCES address (address_id),\n    FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE store (\n    store_id INT PRIMARY KEY,\n    manager_staff_id INT,\n    address_id INT,\n    last_update TIMESTAMP,\n    FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id),\n    FOREIGN KEY (address_id) REFERENCES address (address_id)\n);"
    },
    {
        "db_id": "real_estate_properties",
        "schema": "CREATE TABLE Ref_Feature_Types (\n    feature_type_code TEXT PRIMARY KEY,\n    feature_type_name TEXT\n);\n\nCREATE TABLE Ref_Property_Types (\n    property_type_code TEXT PRIMARY KEY,\n    property_type_description TEXT\n);\n\nCREATE TABLE Other_Available_Features (\n    feature_id TEXT PRIMARY KEY,\n    feature_type_code TEXT,\n    feature_name TEXT,\n    feature_description TEXT,\n    FOREIGN KEY (feature_type_code) REFERENCES Ref_Feature_Types (feature_type_code)\n);\n\nCREATE TABLE Properties (\n    property_id INT PRIMARY KEY,\n    property_type_code TEXT,\n    date_on_market DATE,\n    date_sold DATE,\n    property_name TEXT,\n    property_address TEXT,\n    room_count INT,\n    vendor_requested_price DECIMAL,\n    buyer_offered_price DECIMAL,\n    agreed_selling_price DECIMAL,\n    apt_feature_1 TEXT,\n    apt_feature_2 TEXT,\n    apt_feature_3 TEXT,\n    fld_feature_1 TEXT,\n    fld_feature_2 TEXT,\n    fld_feature_3 TEXT,\n    hse_feature_1 TEXT,\n    hse_feature_2 TEXT,\n    hse_feature_3 TEXT,\n    oth_feature_1 TEXT,\n    oth_feature_2 TEXT,\n    oth_feature_3 TEXT,\n    shp_feature_1 TEXT,\n    shp_feature_2 TEXT,\n    shp_feature_3 TEXT,\n    other_property_details TEXT,\n    FOREIGN KEY (property_type_code) REFERENCES Ref_Property_Types (property_type_code)\n);\n\nCREATE TABLE Other_Property_Features (\n    property_id INT,\n    feature_id TEXT,\n    property_feature_description TEXT,\n    FOREIGN KEY (property_id) REFERENCES Properties (property_id),\n    FOREIGN KEY (feature_id) REFERENCES Other_Available_Features (feature_id)\n);"
    },
    {
        "db_id": "college_3",
        "schema": "CREATE TABLE Student (\n    StuID INT PRIMARY KEY,\n    LName TEXT,\n    Fname TEXT,\n    Age INT,\n    Sex TEXT,\n    Major TEXT,\n    Advisor INT,\n    city_code INT\n);\n\nCREATE TABLE Faculty (\n    FacID INT PRIMARY KEY,\n    Lname TEXT,\n    Fname TEXT,\n    Rank TEXT,\n    Sex TEXT,\n    Phone INT,\n    Room INT,\n    Building INT\n);\n\nCREATE TABLE Department (\n    DNO INT PRIMARY KEY,\n    Division TEXT,\n    DName TEXT,\n    Room INT,\n    Building INT,\n    DPhone INT\n);\n\nCREATE TABLE Member_of (\n    FacID INT,\n    DNO INT,\n    FOREIGN KEY (FacID) REFERENCES Faculty (FacID),\n    FOREIGN KEY (DNO) REFERENCES Department (DNO)\n);\n\nCREATE TABLE Course (\n    CID INT PRIMARY KEY,\n    CName TEXT,\n    Credits INT,\n    Instructor INT,\n    Days TEXT,\n    Hours INT,\n    DNO INT,\n    FOREIGN KEY (Instructor) REFERENCES Faculty (FacID),\n    FOREIGN KEY (DNO) REFERENCES Department (DNO)\n);\n\nCREATE TABLE Minor_in (\n    StuID INT,\n    DNO INT,\n    FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    FOREIGN KEY (DNO) REFERENCES Department (DNO)\n);\n\nCREATE TABLE Enrolled_in (\n    StuID INT,\n    CID INT,\n    Grade TEXT,\n    FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    FOREIGN KEY (CID) REFERENCES Course (CID)\n);\n\nCREATE TABLE Gradeconversion (\n    lettergrade TEXT,\n    gradepoint INT\n);"
    },
    {
        "db_id": "course_teach",
        "schema": "CREATE TABLE course (\n    Course_ID INT PRIMARY KEY,\n    Staring_Date INT,\n    Course TEXT\n);\n\nCREATE TABLE teacher (\n    Teacher_ID INT PRIMARY KEY,\n    Name TEXT,\n    Age INT,\n    Hometown TEXT\n);\n\nCREATE TABLE course_arrange (\n    Course_ID INT,\n    Teacher_ID INT,\n    Grade INT,\n    FOREIGN KEY (Course_ID) REFERENCES course (Course_ID),\n    FOREIGN KEY (Teacher_ID) REFERENCES teacher (Teacher_ID)\n);"
    },
    {
        "db_id": "roller_coaster",
        "schema": "CREATE TABLE roller_coaster (\n    Roller_Coaster_ID INT PRIMARY KEY,\n    Name TEXT,\n    Park TEXT,\n    Country_ID INT,\n    Length INT,\n    Height INT,\n    Speed INT,\n    Opened DATE,\n    Status TEXT,\n    FOREIGN KEY (Country_ID) REFERENCES country (Country_ID)\n);\n\nCREATE TABLE country (\n    Country_ID INT PRIMARY KEY,\n    Name TEXT,\n    Population INT,\n    Area INT,\n    Languages TEXT\n);"
    },
    {
        "db_id": "customer_deliveries",
        "schema": "CREATE TABLE Products (\n    product_id TEXT PRIMARY KEY,\n    product_name TEXT,\n    product_price DECIMAL,\n    product_description TEXT\n);\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    address_details TEXT,\n    city TEXT,\n    zip_postcode TEXT,\n    state_province_county TEXT,\n    country TEXT\n);\n\nCREATE TABLE Customers (\n    customer_id TEXT PRIMARY KEY,\n    payment_method TEXT,\n    customer_name TEXT,\n    customer_phone TEXT,\n    customer_email TEXT,\n    date_became_customer DATE\n);\n\nCREATE TABLE Regular_Orders (\n    regular_order_id INT PRIMARY KEY,\n    distributer_id INT\n);\n\nCREATE TABLE Regular_Order_Products (\n    regular_order_id INT,\n    product_id TEXT,\n    FOREIGN KEY (regular_order_id    ) REFERENCES Regular_Orders (regular_order_id),\n    FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);\n\nCREATE TABLE Actual_Orders (\n    actual_order_id INT PRIMARY KEY,\n    order_status_code TEXT,\n    regular_order_id INT,\n    actual_order_date DATE,\n    FOREIGN KEY (regular_order_id) REFERENCES Regular_Orders (regular_order_id)\n);\n\nCREATE TABLE Actual_Order_Products (\n    actual_order_id INT,\n    product_id TEXT,\n    FOREIGN KEY (actual_order_id) REFERENCES Actual_Orders (actual_order_id),\n    FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);\n\nCREATE TABLE Customer_Addresses (\n    customer_id TEXT,\n    address_id INT,\n    date_from DATE,\n    address_type TEXT,\n    date_to DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),\n    FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Delivery_Routes (\n    route_id INT PRIMARY KEY,\n    route_name TEXT,\n    other_route_details TEXT\n);\n\nCREATE TABLE Delivery_Route_Locations (\n    location_code TEXT,\n    route_id INT,\n    location_address_id INT,\n    location_name TEXT,\n    FOREIGN KEY (route_id) REFERENCES Delivery_Routes (route_id)\n);\n\nCREATE TABLE Trucks (\n    truck_id INT PRIMARY KEY,\n    truck_licence_number TEXT,\n    truck_details TEXT\n);\n\nCREATE TABLE Employees (\n    employee_id INT PRIMARY KEY,\n    employee_address_id INT,\n    employee_name TEXT,\n    employee_phone TEXT,\n    FOREIGN KEY (employee_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Order_Deliveries (\n    location_code TEXT,\n    actual_order_id INT,\n    delivery_status_code TEXT,\n    driver_employee_id INT,\n    truck_id INT,\n    delivery_date DATE,\n    FOREIGN KEY (actual_order_id) REFERENCES Actual_Orders (actual_order_id),\n    FOREIGN KEY (driver_employee_id) REFERENCES Employees (employee_id),\n    FOREIGN KEY (truck_id) REFERENCES Trucks (truck_id)\n);"
    },
    {
        "db_id": "game_injury",
        "schema": "CREATE TABLE stadium (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    Home_Games INT,\n    Average_Attendance INT,\n    Total_Attendance INT,\n    Capacity_Percentage INT\n);\n\nCREATE TABLE game (\n    stadium_id INT,\n    id INT PRIMARY KEY,\n    Season INT,\n    Date DATE,\n    Home_team TEXT,\n    Away_team TEXT,\n    Score TEXT,\n    Competition TEXT,\n    FOREIGN KEY (stadium_id) REFERENCES stadium (id)\n);\n\nCREATE TABLE injury_accident (\n    game_id INT,\n    id INT PRIMARY KEY,\n    Player TEXT,\n    Injury TEXT,\n    Number_of_matches INT,\n    Source TEXT,\n    FOREIGN KEY (game_id) REFERENCES game (id)\n);"
    },
    {
        "db_id": "school_finance",
        "schema": "CREATE TABLE School (\n    School_id TEXT PRIMARY KEY,\n    School_name TEXT,\n    Location TEXT,\n    Mascot TEXT,\n    Enrollment INT,\n    IHSAA_Class TEXT,\n    IHSAA_Football_Class TEXT,\n    County TEXT\n);\n\nCREATE TABLE budget (\n    School_id TEXT,\n    Year INT,\n    Budgeted INT,\n    total_budget_percent_budgeted INT,\n    Invested INT,\n    total_budget_percent_invested INT,\n    Budget_invested_percent INT,\n    PRIMARY KEY (School_id, Year),\n    FOREIGN KEY (School_id) REFERENCES School (School_id)\n);\n\nCREATE TABLE endowment (\n    endowment_id INT PRIMARY KEY,\n    School_id TEXT,\n    donator_name TEXT,\n    amount INT,\n    FOREIGN KEY (School_id) REFERENCES School (School_id)\n);"
    },
    {
        "db_id": "scholar",
        "schema": "CREATE TABLE venue (\n    venueId INT PRIMARY KEY,\n    venueName TEXT\n);\n\nCREATE TABLE author (\n    authorId INT PRIMARY KEY,\n    authorName TEXT\n);\n\nCREATE TABLE dataset (\n    datasetId INT PRIMARY KEY,\n    datasetName TEXT\n);\n\nCREATE TABLE journal (\n    journalId INT PRIMARY KEY,\n    journalName TEXT\n);\n\nCREATE TABLE keyphrase (\n    keyphraseId INT PRIMARY KEY,\n    keyphraseName TEXT\n);\n\nCREATE TABLE paper (\n    paperId INT PRIMARY KEY,\n    title TEXT,\n    venueId INT,\n    year INT,\n    numCiting INT,\n    numCitedBy INT,\n    journalId INT,\n    FOREIGN KEY (venueId) REFERENCES venue (venueId),\n    FOREIGN KEY (journalId) REFERENCES journal (journalId)\n);\n\nCREATE TABLE cite (\n    citingPaperId INT,\n    citedPaperId INT,\n    FOREIGN KEY (citingPaperId) REFERENCES paper (paperId),\n    FOREIGN KEY (citedPaperId) REFERENCES paper (paperId)\n);\n\nCREATE TABLE paperDataset (\n    paperId INT,\n    datasetId INT,\n    FOREIGN KEY (paperId) REFERENCES paper (paperId),\n    FOREIGN KEY (datasetId) REFERENCES dataset (datasetId)\n);\n\nCREATE TABLE paperKeyphrase (\n    paperId INT,\n    keyphraseId INT,\n    FOREIGN KEY (paperId) REFERENCES paper (paperId),\n    FOREIGN KEY (keyphraseId) REFERENCES keyphrase (keyphraseId)\n);\n\nCREATE TABLE writes (\n    paperId INT,\n    authorId INT,\n    FOREIGN KEY (paperId) REFERENCES paper (paperId),\n    FOREIGN KEY (authorId) REFERENCES author (authorId)\n);"
    },
    {
        "db_id": "voter_1",
        "schema": "CREATE TABLE AREA_CODE_STATE (\n    area_code TEXT PRIMARY KEY,\n    state INT\n);\n\nCREATE TABLE CONTESTANTS (\n    contestant_number INT PRIMARY KEY,\n    contestant_name TEXT\n);\n\nCREATE TABLE VOTES (\n    vote_id INT PRIMARY KEY,\n    phone_number TEXT,\n    state INT,\n    contestant_number INT,\n    created DATE,\n    FOREIGN KEY (contestant_number) REFERENCES CONTESTANTS (contestant_number)\n);"
    },
    {
        "db_id": "match_season",
        "schema": "CREATE TABLE country (\n    Country_id INT PRIMARY KEY,\n    Country_name TEXT,\n    Capital TEXT,\n    Official_native_language TEXT\n);\n\nCREATE TABLE team (\n    Team_id INT PRIMARY KEY,\n    Name TEXT\n);\n\nCREATE TABLE match_season (\n    Season INT,\n    Player TEXT,\n    Position TEXT,\n    Country TEXT,\n    Team INT,\n    Draft_Pick_Number INT,\n    Draft_Class INT,\n    College TEXT,\n    FOREIGN KEY (Team) REFERENCES team (Team_id)\n);\n\nCREATE TABLE player (\n    Player_ID INT PRIMARY KEY,\n    Player TEXT,\n    Years_Played INT,\n    Total_WL TEXT,\n    Singles_WL TEXT,\n    Doubles_WL TEXT,\n    Team INT,\n    FOREIGN KEY (Team) REFERENCES team (Team_id)\n);"
    },
    {
        "db_id": "small_bank_1",
        "schema": "CREATE TABLE ACCOUNTS (\n    custid INT PRIMARY KEY,\n    name TEXT\n);\n\nCREATE TABLE SAVINGS (\n    custid INT PRIMARY KEY,\n    balance DECIMAL,\n    FOREIGN KEY (custid) REFERENCES ACCOUNTS (custid)\n);\n\nCREATE TABLE CHECKING (\n    custid INT PRIMARY KEY,\n    balance DECIMAL,\n    FOREIGN KEY (custid) REFERENCES ACCOUNTS (custid)\n);"
    },
    {
        "db_id": "wta_1",
        "schema": "CREATE TABLE players (\n    player_id TEXT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    hand TEXT,\n    birth_date DATE,\n    country_code TEXT\n);\n\nCREATE TABLE matches (\n    best_of INT,\n    draw_size INT,\n    loser_age INT,\n    loser_entry INT,\n    loser_hand TEXT,\n    loser_ht INT,\n    loser_id TEXT,\n    loser_ioc TEXT,\n    loser_name TEXT,\n    loser_rank TEXT,\n    loser_rank_points INT,\n    loser_seed INT,\n    match_num INT,\n    minutes INT,\n    round TEXT,\n    score TEXT,\n    surface TEXT,\n    tourney_date DATE,\n    tourney_id TEXT,\n    tourney_level TEXT,\n    tourney_name TEXT,\n    winner_age INT,\n    winner_entry INT,\n    winner_hand TEXT,\n    winner_ht INT,\n    winner_id TEXT,\n    winner_ioc TEXT,\n    winner_name TEXT,\n    winner_rank TEXT,\n    winner_rank_points INT,\n winner_seed INT,\n    year INT,\n    FOREIGN KEY (loser_id) REFERENCES players (player_id),\n    FOREIGN KEY (winner_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n    ranking_date DATE,\n    ranking INT,\n    player_id TEXT,\n    ranking_points INT,\n    tours TEXT,\n    FOREIGN KEY (player_id) REFERENCES players (player_id)\n);"
    },
    {
        "db_id": "yelp",
        "schema": "CREATE TABLE business (\n    bid TEXT PRIMARY KEY,\n    business_id INT,\n    name TEXT,\n    full_address TEXT,\n    city TEXT,\n    latitude TEXT,\n    longitude TEXT,\n    review_count INT,\n    is_open INT,\n    rating INT,\n    state TEXT\n);\n\nCREATE TABLE category (\n    id INT PRIMARY KEY,\n    business_id INT,\n    category_name TEXT,\n    FOREIGN KEY (business_id) REFERENCES business (business_id)\n);\n\nCREATE TABLE user (\n    uid INT PRIMARY KEY,\n    user_id INT,\n    name TEXT,\n    FOREIGN KEY (user_id) REFERENCES business (business_id)\n);\n\nCREATE TABLE checkin (\n    cid INT PRIMARY KEY,\n    business_id INT,\n    count INT,\n    day INT,\n    FOREIGN KEY (business_id) REFERENCES business (business_id)\n);\n\nCREATE TABLE neighbourhood (\n    id INT PRIMARY KEY,\n    business_id INT,\n    neighbourhood_name TEXT,\n    FOREIGN KEY (business_id) REFERENCES business (business_id)\n);\n\nCREATE TABLE review (\n    rid INT PRIMARY KEY,\n    business_id INT,\n    user_id INT,\n    rating INT,\n    text TEXT,\n    year INT,\n    month INT,\n    FOREIGN KEY (business_id) REFERENCES business (business_id),\n    FOREIGN KEY (user_id) REFERENCES user (uid)\n);\n\nCREATE TABLE tip (\n    tip_id INT PRIMARY KEY,\n    business_id INT,\n    text TEXT,\n    user_id INT,\n    likes INT,\n    year INT,\n    month INT,\n    FOREIGN KEY (business_id) REFERENCES business (business_id),\n    FOREIGN KEY (user_id) REFERENCES user (uid)\n);"
    },
    {
        "db_id": "student_1",
        "schema": "CREATE TABLE list (\n    LastName TEXT,\n    FirstName TEXT,\n    Grade TEXT,\n    Classroom INT\n);\n\nCREATE TABLE teachers (\n    LastName TEXT,\n    FirstName TEXT,\n    Classroom INT\n);"
    },
    {
        "db_id": "manufacturer",
        "schema": "CREATE TABLE manufacturer (\n    Manufacturer_ID TEXT PRIMARY KEY,\n    Open_Year INT,\n    Name TEXT,\n    Num_of_Factories INT,\n    Num_of_Shops INT\n);\n\nCREATE TABLE furniture (\n    Furniture_ID INT PRIMARY KEY,\n    Name TEXT,\n    Num_of_Component INT,\n    Market_Rate INT\n);\n\nCREATE TABLE furniture_manufacte (\n    Manufacturer_ID TEXT,\n    Furniture_ID INT,\n    Price_in_Dollar INT,\n    FOREIGN KEY (Manufacturer_ID) REFERENCES manufacturer (Manufacturer_ID),\n    FOREIGN KEY (Furniture_ID) REFERENCES furniture (Furniture_ID)\n);"
    },
    {
        "db_id": "store_1",
        "schema": "CREATE TABLE artists (\n    id INT PRIMARY KEY,\n    name TEXT\n);\n\nCREATE TABLE sqlite_sequence (\n    name TEXT,\n    seq INT\n);\n\nCREATE TABLE albums (\n    id INT PRIMARY KEY,\n    title TEXT,\n    artist_id INT,\n    FOREIGN KEY (artist_id) REFERENCES artists (id)\n);\n\nCREATE TABLE employees (\n    id INT PRIMARY KEY,\n    last_name TEXT,\n    first_name TEXT,\n    title TEXT,\n    reports_to INT,\n    birth_date DATE,\n    hire_date DATE,\n    address TEXT,\n    city TEXT,\n    state TEXT,\n    country TEXT,\n    postal_code TEXT,\n    phone TEXT,\n    fax TEXT,\n    email TEXT\n);\n\nCREATE TABLE customers (\n    id INT PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    company TEXT,\n    address TEXT,\n    city TEXT,\n    state TEXT,\n    country TEXT,\n    postal_code TEXT,\n    phone TEXT,\n    fax TEXT,\n    email TEXT,\n    support_rep_id INT,\n    FOREIGN KEY (support_rep_id) REFERENCES employees (id)\n);\n\nCREATE TABLE genres (\n    id INT PRIMARY KEY,\n    name TEXT\n);\n\nCREATE TABLE invoices (\n    id INT PRIMARY KEY,\n    customer_id INT,\n    invoice_date DATE,\n    billing_address TEXT,\n    billing_city TEXT,\n    billing_state TEXT,\n    billing_country TEXT,\n    billing_postal_code TEXT,\n    total DECIMAL,\n    FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE media_types (\n    id INT PRIMARY KEY,\n    name TEXT\n);\n\nCREATE TABLE tracks (\n    id INT PRIMARY KEY,\n    name TEXT,\n    album_id INT,\n    media_type_id INT,\n    genre_id INT,\n    composer TEXT,\n    milliseconds INT,\n    bytes INT,\n    unit_price DECIMAL,\n    FOREIGN KEY (album_id) REFERENCES albums (id),\n    FOREIGN KEY (media_type_id) REFERENCES media_types (id),\n    FOREIGN KEY (genre_id) REFERENCES genres (id)\n);\n\nCREATE TABLE invoice_lines (\n    invoice_id INT,\n    track_id INT,\n    unit_price DECIMAL,\n    quantity INT,\n    FOREIGN KEY (invoice_id) REFERENCES invoices (id),\n    FOREIGN KEY (track_id) REFERENCES tracks (id)\n);\n\nCREATE TABLE playlists (\n    id INT PRIMARY KEY,\n    name TEXT\n);\n\nCREATE TABLE playlist_tracks (\n    playlist_id INT,\n    track_id INT,\n    FOREIGN KEY (playlist_id) REFERENCES playlists (id),\n    FOREIGN KEY (track_id) REFERENCES tracks (id)\n);"
    },
    {
        "db_id": "train_station",
        "schema": "CREATE TABLE station (\n    Station_ID INT PRIMARY KEY,\n    Name TEXT,\n    Annual_entry_exit INT,\n    Annual_interchanges INT,\n    Total_Passengers INT,\n    Location TEXT,\n    Main_Services TEXT,\n    Number_of_Platforms INT\n);\n\nCREATE TABLE train (\n    Train_ID INT PRIMARY KEY,\n    Name TEXT,\n    Time TEXT,\n    Service TEXT\n);\n\nCREATE TABLE train_station (\n    Train_ID INT,\n    Station_ID INT,\n    FOREIGN KEY (Train_ID) REFERENCES train (Train_ID),\n    FOREIGN KEY (Station_ID) REFERENCES station (Station_ID)\n);"
    },
    {
        "db_id": "document_management",
        "schema": "CREATE TABLE Roles (\n    role_code TEXT PRIMARY KEY,\n    role_description TEXT\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    role_code TEXT,\n    user_name TEXT,\n    user_login TEXT,\n    password TEXT,\n    FOREIGN KEY (role_code) REFERENCES Roles (role_code)\n);\n\nCREATE TABLE Document_Structures (\n    document_structure_code TEXT PRIMARY KEY,\n    parent_document_structure_code TEXT,\n    document_structure_description TEXT\n);\n\nCREATE TABLE Functional_Areas (\n    functional_area_code TEXT PRIMARY KEY,\n    parent_functional_area_code TEXT,\n    functional_area_description TEXT\n);\n\nCREATE TABLE Images (\n    image_id INT PRIMARY KEY,\n    image_alt_text TEXT,\n    image_name TEXT,\n    image_url TEXT\n);\n\nCREATE TABLE Documents (\n    document_code INT PRIMARY KEY,\n    document_structure_code TEXT,\n    document_type_code TEXT,\n    access_count INT,\n    document_name TEXT,\n    FOREIGN KEY (document_structure_code) REFERENCES Document_Structures (document_structure_code)\n);\n\nCREATE TABLE Document_Functional_Areas (\n    document_code INT,\n    functional_area_code TEXT,\n    FOREIGN KEY (document_code) REFERENCES Documents (document_code),\n    FOREIGN KEY (functional_area_code) REFERENCES Functional_Areas (functional_area_code)\n);\n\nCREATE TABLE Document_Sections (\n    section_id INT PRIMARY KEY,\n    document_code INT,\n    section_sequence INT,\n    section_code TEXT,\n    section_title TEXT,\n    FOREIGN KEY (document_code) REFERENCES Documents (document_code)\n);\n\nCREATE TABLE Document_Sections_Images (\n    section_id INT,\n    image_id INT,\n    FOREIGN KEY (section_id) REFERENCES Document_Sections (section_id),\n    FOREIGN KEY (image_id) REFERENCES Images (image_id)\n);"
    },
    {
        "db_id": "formula_1",
        "schema": "CREATE TABLE circuits (\n    circuitId INT PRIMARY KEY,\n    circuitRef INT,\n    name TEXT,\n    location TEXT,\n    country TEXT,\n    lat TEXT,\n    lng TEXT,\n alt INT,\n    url TEXT\n);\n\nCREATE TABLE races (\n    raceId INT PRIMARY KEY,\n    year INT,\n    round INT,\n    circuitId INT,\n    name TEXT,\n    date DATE,\n    time TEXT,\n    url TEXT,\n    FOREIGN KEY (circuitId) REFERENCES circuits (circuitId)\n);\n\nCREATE TABLE drivers (\n    driverId INT PRIMARY KEY,\n    driverRef INT,\n    number INT,\n    code TEXT,\n    forename TEXT,\n    surname TEXT,\n    dob DATE,\n    nationality TEXT,\n    url TEXT\n);\n\nCREATE TABLE status (\n    statusId INT PRIMARY KEY,\n    status TEXT\n);\n\nCREATE TABLE seasons (\n    year INT PRIMARY KEY,\n    url TEXT\n);\n\nCREATE TABLE constructors (\n    constructorId INT PRIMARY KEY,\n    constructorRef INT,\n    name TEXT,\n    nationality TEXT,\n    url TEXT\n);\n\nCREATE TABLE constructorStandings (\n    constructorStandingsId INT PRIMARY KEY,\n    raceId INT,\n    constructorId INT,\n    points INT,\n    position INT,\n    positionText TEXT,\n    wins INT,\n    FOREIGN KEY (raceId) REFERENCES races (raceId),\n    FOREIGN KEY (constructorId) REFERENCES constructors (constructorId)\n);\n\nCREATE TABLE results (\n    resultId INT PRIMARY KEY,\n    raceId INT,\n    driverId INT,\n    constructorId INT,\n    number INT,\n    grid INT,\n    position INT,\n    positionText TEXT,\n    positionOrder INT,\n    points INT,\n    laps INT,\n    time TEXT,\n    milliseconds INT,\n    fastestLap BOOLEAN,\n    rank INT,\n    fastestLapTime TEXT,\n    fastestLapSpeed TEXT,\n    statusId INT,\n    FOREIGN KEY (raceId) REFERENCES races (raceId),\n    FOREIGN KEY (driverId) REFERENCES drivers (driverId),\n    FOREIGN KEY (constructorId) REFERENCES constructors (constructorId),\n    FOREIGN KEY (statusId) REFERENCES status (statusId)\n);\n\nCREATE TABLE driverStandings (\n    driverStandingsId INT PRIMARY KEY,\n    raceId INT,\n    driverId INT,\n    points INT,\n    position INT,\n    positionText TEXT,\n    wins INT,\n    FOREIGN KEY (raceId) REFERENCES races (raceId),\n    FOREIGN KEY (driverId) REFERENCES drivers (driverId)\n);\n\nCREATE TABLE constructorResults (\n    constructorResultsId INT PRIMARY KEY,\n    raceId INT,\n    constructorId INT,\n    points INT,\n    status TEXT,\n    FOREIGN KEY (raceId) REFERENCES races (raceId),\n    FOREIGN KEY (constructorId) REFERENCES constructors (constructorId)\n);\n\nCREATE TABLE qualifying (\n    qualifyId INT PRIMARY KEY,\n    raceId INT,\n    driverId INT,\n    constructorId INT,\n    number INT,\n    position INT,\n    q1 BOOLEAN,\n    q2 BOOLEAN,\n    q3 BOOLEAN,\n    FOREIGN KEY (raceId) REFERENCES races (raceId),\n    FOREIGN KEY (driverId) REFERENCES drivers (driverId),\n    FOREIGN KEY (constructorId) REFERENCES constructors (constructorId)\n);\n\nCREATE TABLE pitStops (\n    raceId INT,\n    driverId INT,\n    stop INT,\n    lap INT,\n    time TIME,\n    duration TIME,\n    milliseconds INT,\n    FOREIGN KEY (raceId) REFERENCES races (raceId),\n    FOREIGN KEY (driverId) REFERENCES drivers (driverId)\n);\n\nCREATE TABLE lapTimes (\n    raceId INT,\n    driverId INT,\n    lap INT,\n    position INT,\n    time TIME,\n    milliseconds INT,\n    FOREIGN KEY (raceId) REFERENCES races (raceId),\n    FOREIGN KEY (driverId) REFERENCES drivers (driverId)\n);"
    },
    {
        "db_id": "game_1",
        "schema": "CREATE TABLE Student (\n    StuID INT PRIMARY KEY,\n    LName TEXT,\n    Fname TEXT,\n    Age INT,\n    Sex TEXT,\n    Major TEXT,\n    Advisor INT,\n    city_code INT\n);\n\nCREATE TABLE Video_Games (\n    GameID INT PRIMARY KEY,\n    GName TEXT,\n    GType TEXT\n);\n\nCREATE TABLE Plays_Games (\n    StuID INT,\n    GameID INT,\n    Hours_Played INT,\n    FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    FOREIGN KEY (GameID) REFERENCES Video_Games (GameID)\n);\n\nCREATE TABLE SportsInfo (\n    StuID INT,\n    SportName TEXT,\n    HoursPerWeek INT,\n    GamesPlayed INT,\n    OnScholarship BOOLEAN,\n    FOREIGN KEY (StuID) REFERENCES Student (StuID)\n);"
    },
        {
            "db_id": "loan_1",
            "schema": "CREATE TABLE bank (\n    branch_ID INT PRIMARY KEY,\n    bname TEXT,\n    no_of_customers INT,\n    city TEXT,\n    state TEXT\n);\n\nCREATE TABLE customer (\n    cust_ID INT PRIMARY KEY,\n    cust_name TEXT,\n    acc_type TEXT,\n    acc_bal DECIMAL,\n    no_of_loans INT,\n    credit_score INT,\n    branch_ID INT,\n    state TEXT,\n    FOREIGN KEY (branch_ID) REFERENCES bank (branch_ID)\n);\n\nCREATE TABLE loan (\n    loan_ID INT PRIMARY KEY,\n    loan_type TEXT,\n    cust_ID INT,\n    branch_ID INT,\n    amount DECIMAL,\n    FOREIGN KEY (cust_ID) REFERENCES customer (cust_ID),\n    FOREIGN KEY (branch_ID) REFERENCES bank (branch_ID)\n);"
        },
        {
            "db_id": "bike_1",
            "schema": "CREATE TABLE station (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    lat TEXT,\n    long TEXT,\n    dock_count INT,\n    city TEXT,\n    installation_date DATE\n);\n\nCREATE TABLE status (\n    station_id TEXT PRIMARY KEY,\n    bikes_available INT,\n    docks_available INT,\n    time DATE\n);\n\nCREATE TABLE trip (\n    id INT PRIMARY KEY,\n    duration INT,\n    start_date DATE,\n    start_station_name TEXT,\n    start_station_id TEXT,\n    end_date DATE,\n    end_station_name TEXT,\n    end_station_id TEXT,\n    bike_id TEXT,\n    subscription_type TEXT,\n    zip_code TEXT,\n    FOREIGN KEY (start_station_id) REFERENCES station (id)\n);\n\nCREATE TABLE weather (\n    date DATE,\n    max_temperature_f INT,\n    mean_temperature_f INT,\n    min_temperature_f INT,\n    max_dew_point_f INT,\n    mean_dew_point_f INT,\n    min_dew_point_f INT,\n    max_humidity INT,\n    mean_humidity INT,\n    min_humidity INT,\n    max_sea_level_pressure_inches INT,\n    mean_sea_level_pressure_inches INT,\n    min_sea_level_pressure_inches INT,\n    max_visibility_miles INT,\n    mean_visibility_miles INT,\n    min_visibility_miles INT,\n    max_wind_speed_mph INT,\n    mean_wind_speed_mph INT,\n    max_gust_speed_mph INT,\n    precipitation_inches DECIMAL,\n    cloud_cover INT,\n    events TEXT,\n    wind_dir_degrees INT,\n    zip_code TEXT\n);"
        },
        {
            "db_id": "entrepreneur",
            "schema": "CREATE TABLE entrepreneur (\n    Entrepreneur_ID TEXT PRIMARY KEY,\n    People_ID INT,\n    Company TEXT,\n    Money_Requested DECIMAL,\n    Investor TEXT,\n    FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n    People_ID INT PRIMARY KEY,\n    Name TEXT,\n    Height INT,\n    Weight INT,\n    Date_of_Birth DATE\n);"
        },
        {
            "db_id": "orchestra",
            "schema": "CREATE TABLE conductor (\n    Conductor_ID INT PRIMARY KEY,\n    Name TEXT,\n    Age INT,\n    Nationality TEXT,\n    Year_of_Work INT\n);\n\nCREATE TABLE orchestra (\n    Orchestra_ID INT PRIMARY KEY,\n    Orchestra TEXT,\n    Conductor_ID INT,\n    Record_Company TEXT,\n    Year_of_Founded INT,\n    Major_Record_Format TEXT,\n    FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n    Performance_ID INT PRIMARY KEY,\n    Orchestra_ID INT,\n    Type TEXT,\n    Date DATE,\n    Official_ratings_(millions) DECIMAL,\n    Weekly_rank INT,\n    Share DECIMAL,\n    FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n    Show_ID INT PRIMARY KEY,\n    Performance_ID INT,\n    If_first_show TEXT,\n    Result TEXT,\n    Attendance INT,\n    FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);"
        },
        {
            "db_id": "cre_Drama_Workshop_Groups",
            "schema": "CREATE TABLE Ref_Payment_Methods (\n    payment_method_code TEXT PRIMARY KEY,\n    payment_method_description TEXT\n);\n\nCREATE TABLE Ref_Service_Types (\n    Service_Type_Code TEXT PRIMARY KEY,\n    Parent_Service_Type_Code TEXT,\n    Service_Type_Description TEXT\n);\n\nCREATE TABLE Addresses (\n    Address_ID INT PRIMARY KEY,\n    Line_1 TEXT,\n    Line_2 TEXT,\n    City_Town TEXT,\n    State_County TEXT,\n    Other_Details TEXT\n);\n\nCREATE TABLE Products (\n    Product_ID INT PRIMARY KEY,\n    Product_Name TEXT,\n    Product_Price DECIMAL,\n    Product_Description TEXT,\n    Other_Product_Service_Details TEXT\n);\n\nCREATE TABLE Marketing_Regions (\n    Marketing_Region_Code TEXT PRIMARY KEY,\n    Marketing_Region_Name TEXT,\n    Marketing_Region_Descriptrion TEXT,\n    Other_Details TEXT\n);\n\nCREATE TABLE Clients (\n    Client_ID INT PRIMARY KEY,\n    Address_ID INT,\n    Customer_Email_Address TEXT,\n    Customer_Name TEXT,\n    Customer_Phone TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID)\n);\n\nCREATE TABLE Drama_Workshop_Groups (\n    Workshop_Group_ID INT PRIMARY KEY,\n    Address_ID INT,\n    Currency_Code TEXT,\n    Marketing_Region_Code TEXT,\n    Store_Name TEXT,\n    Store_Phone TEXT,\n    Store_Email_Address TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID),\n    FOREIGN KEY (Marketing_Region_Code) REFERENCES Marketing_Regions (Marketing_Region_Code)\n);\n\nCREATE TABLE Performers (\n    Performer_ID INT PRIMARY KEY,\n    Address_ID INT,\n    Customer_Name TEXT,\n    Customer_Phone TEXT,\n    Customer_Email_Address TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID)\n);\n\nCREATE TABLE Customers (\n    Customer_ID INT PRIMARY KEY,\n    Address_ID INT,\n    Customer_Name TEXT,\n    Customer_Phone TEXT,\n    Customer_Email_Address TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID)\n);\n\nCREATE TABLE Stores (\n    Store_ID INT PRIMARY KEY,\n    Address_ID INT,\n    Marketing_Region_Code TEXT,\n    Store_Name TEXT,\n    Store_Phone TEXT,\n    Store_Email_Address TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID),\n    FOREIGN KEY (Marketing_Region_Code) REFERENCES Marketing_Regions (Marketing_Region_Code)\n);\n\nCREATE TABLE Bookings (\n    Booking_ID INT PRIMARY KEY,\n    Customer_ID INT,\n    Workshop_Group_ID INT,\n    Status_Code TEXT,\n    Store_ID INT,\n    Order_Date DATE,\n    Planned_Delivery_Date DATE,\n    Actual_Delivery_Date DATE,\n    Other_Order_Details TEXT,\n    FOREIGN KEY (Customer_ID) REFERENCES Customers (Customer_ID),\n    FOREIGN KEY (Workshop_Group_ID) REFERENCES Drama_Workshop_Groups (Workshop_Group_ID),\n    FOREIGN KEY (Store_ID) REFERENCES Stores (Store_ID)\n);\n\nCREATE TABLE Performers_in_Bookings (\n    Performer_ID INT,\n    Booking_ID INT,\n    FOREIGN KEY (Performer_ID) REFERENCES Performers (Performer_ID),\n    FOREIGN KEY (Booking_ID) REFERENCES Bookings (Booking_ID)\n);\n\nCREATE TABLE Customer_Orders (\n    Order_ID INT PRIMARY KEY,\n    Customer_ID INT,\n    Store_ID INT,\n    Order_Date DATE,\n    Planned_Delivery_Date DATE,\n    Actual_Delivery_Date DATE,\n    Other_Order_Details TEXT,\n    FOREIGN KEY (Customer_ID) REFERENCES Customers (Customer_ID),\n    FOREIGN KEY (Store_ID) REFERENCES Stores (Store_ID)\n);\n\nCREATE TABLE Order_Items (\n    Order_Item_ID INT PRIMARY KEY,\n    Order_ID INT,\n    Product_ID INT,\n    Order_Quantity INT,\n    Other_Item_Details TEXT,\n    FOREIGN KEY (Order_ID) REFERENCES Customer_Orders (Order_ID),\n    FOREIGN KEY (Product_ID) REFERENCES Products (Product_ID)\n);\n\nCREATE TABLE Invoices (\n    Invoice_ID INT PRIMARY KEY,\n    Order_ID INT,\n    payment_method_code TEXT,\n    Product_ID INT,\n    Order_Quantity INT,\n    Other_Item_Details TEXT,\n    Order_Item_ID INT,\n    FOREIGN KEY (Order_ID) REFERENCES Customer_Orders (Order_ID),\n    FOREIGN KEY (payment_method_code) REFERENCES Ref_Payment_Methods (payment_method_code),\n    FOREIGN KEY (Product_ID) REFERENCES Products (Product_ID),\n FOREIGN KEY (Order_Item_ID) REFERENCES Order_Items (Order_Item_ID)\n);\n\nCREATE TABLE Services (\n    Service_ID INT PRIMARY KEY,\n    Service_Type_Code TEXT,\n    Workshop_Group_ID INT,\n    Product_Description TEXT,\n    Product_Name TEXT,\n    Product_Price DECIMAL,\n    Other_Product_Service_Details TEXT,\n    FOREIGN KEY (Service_Type_Code) REFERENCES Ref_Service_Types (Service_Type_Code),\n    FOREIGN KEY (Workshop_Group_ID) REFERENCES Drama_Workshop_Groups (Workshop_Group_ID)\n);\n\nCREATE TABLE Bookings_Services (\n    Order_ID INT,\n    Service_ID INT,\n    FOREIGN KEY (Order_ID) REFERENCES Bookings (Booking_ID),\n    FOREIGN KEY (Service_ID) REFERENCES Services (Service_ID)\n);\n\nCREATE TABLE Invoice_Items (\n    Invoice_Item_ID INT PRIMARY KEY,\n    Invoice_ID INT,\n    Order_ID INT,\n    Order_Item_ID INT,\n    Product_ID INT,\n    Order_Quantity INT,\n    Other_Item_Details TEXT,\n    FOREIGN KEY (Invoice_ID) REFERENCES Invoices (Invoice_ID),\n    FOREIGN KEY (Order_ID) REFERENCES Customer_Orders (Order_ID),\n    FOREIGN KEY (Order_Item_ID) REFERENCES Order_Items (Order_Item_ID),\n    FOREIGN KEY (Product_ID) REFERENCES Products (Product_ID)\n);"
    },
    {
        "db_id": "car_1",
        "schema": "CREATE TABLE continents (\n    ContId INT PRIMARY KEY,\n    Continent TEXT\n);\n\nCREATE TABLE countries (\n    CountryId INT PRIMARY KEY,\n    CountryName TEXT,\n    Continent TEXT,\n    FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n    Id INT PRIMARY KEY,\n    Maker TEXT,\n    FullName TEXT,\n    Country TEXT,\n    FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n    ModelId INT PRIMARY KEY,\n    Maker TEXT,\n    Model TEXT,\n    FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n    MakeId INT PRIMARY KEY,\n    Model TEXT,\n    Make TEXT,\n    FOREIGN KEY (Model) REFERENCES model_list (ModelId),\n    FOREIGN KEY (Make) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE cars_data (\n    Id INT PRIMARY KEY,\n    MPG INT,\n    Cylinders INT,\n    Edispl TEXT,\n    Horsepower INT,\n    Weight INT,\n    Accelerate INT,\n    Year INT\n);"
    },
    {
        "db_id": "geo",
        "schema": "CREATE TABLE state (\n    state_name TEXT PRIMARY KEY,\n    population INT,\n    area INT,\n    country_name TEXT,\n    capital TEXT,\n    density INT\n);\n\nCREATE TABLE city (\n    city_name TEXT,\n    population INT,\n    country_name TEXT,\n    state_name TEXT,\n    FOREIGN KEY (state_name) REFERENCES state (state_name)\n);\n\nCREATE TABLE border_info (\n    state_name TEXT,\n    border TEXT,\n    FOREIGN KEY (state_name) REFERENCES state (state_name)\n);\n\nCREATE TABLE highlow (\n    state_name TEXT,\n    highest_elevation INT,\n    lowest_point TEXT,\n    highest_point INT,\n    lowest_elevation INT,\n    FOREIGN KEY (state_name) REFERENCES state (state_name)\n);\n\nCREATE TABLE lake (\n    lake_name TEXT,\n    area INT,\n    country_name TEXT,\n    state_name TEXT,\n    FOREIGN KEY (state_name) REFERENCES state (state_name)\n);\n\nCREATE TABLE mountain (\n    mountain_name TEXT,\n    mountain_altitude INT,\n    country_name TEXT,\n    state_name TEXT,\n    FOREIGN KEY (state_name) REFERENCES state (state_name)\n);\n\nCREATE TABLE river (\n    river_name TEXT,\n    length INT,\n    country_name TEXT,\n    traverse TEXT,\n    FOREIGN KEY (state_name) REFERENCES state (state_name)\n);"
    },
    {
        "db_id": "behavior_monitoring",
        "schema": "CREATE TABLE Ref_Address_Types (\n    address_type_code TEXT PRIMARY KEY,\n    address_type_description TEXT\n);\n\nCREATE TABLE Ref_Detention_Type (\n    detention_type_code TEXT PRIMARY KEY,\n    detention_type_description TEXT\n);\n\nCREATE TABLE Ref_Incident_Type (\n    incident_type_code TEXT PRIMARY KEY,\n    incident_type_description TEXT\n);\n\nCREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    line_1 TEXT,\n    line_2 TEXT,\n    line_3 TEXT,\n    city TEXT,\n    zip_postcode TEXT,\n    state_province_county TEXT,\n    country TEXT,\n    other_address_details TEXT\n);\n\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    address_id INT,\n    first_name TEXT,\n    middle_name TEXT,\n    last_name TEXT,\n    cell_mobile_number TEXT,\n    email_address TEXT,\n    date_first_rental DATE,\n    date_left_university DATE,\n    other_student_details TEXT,\n    FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Teachers (\n    teacher_id INT PRIMARY KEY,\n    address_id INT,\n    first_name TEXT,\n    middle_name TEXT,\n    last_name TEXT,\n    gender TEXT,\n    cell_mobile_number TEXT,\n    email_address TEXT,\n    other_details TEXT,\n    FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Assessment_Notes (\n    notes_id INT PRIMARY KEY,\n    student_id INT,\n    teacher_id INT,\n    date_of_notes DATE,\n    text_of_notes TEXT,\n    other_details TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students (student_id),\n    FOREIGN KEY (teacher_id) REFERENCES Teachers (teacher_id)\n);\n\nCREATE TABLE Behavior_Incident (\n    incident_id INT PRIMARY KEY,\n    incident_type_code TEXT,\n    student_id INT,\n    date_incident_start DATE,\n    date_incident_end DATE,\n    incident_summary TEXT,\n    recommendations TEXT,\n    other_details TEXT,\n    FOREIGN KEY (incident_type_code) REFERENCES Ref_Incident_Type (incident_type_code),\n    FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Detention (\n    detention_id INT PRIMARY KEY,\n    detention_type_code TEXT,\n    teacher_id INT,\n    datetime_detention_start DATETIME,\n    datetime_detention_end DATETIME,\n    detention_summary TEXT,\n    other_details TEXT,\n    FOREIGN KEY (detention_type_code) REFERENCES Ref_Detention_Type (detention_type_code),\n    FOREIGN KEY (teacher_id) REFERENCES Teachers (teacher_id)\n);\n\nCREATE TABLE Student_Addresses (\n    student_id INT,\n    address_id INT,\n    date_address_from DATE,\n    date_address_to DATE,\n    monthly_rental DECIMAL,\n    other_details TEXT,\n    FOREIGN KEY (student_id) REFERENCES Students (student_id),\n    FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Students_in_Detention (\n    student_id INT,\n    detention_id INT,\n    incident_id INT,\n    FOREIGN KEY (student_id) REFERENCES Students (student_id),\n    FOREIGN KEY (detention_id) REFERENCES Detention (detention_id),\n    FOREIGN KEY (incident_id) REFERENCES Behavior_Incident (incident_id)\n);"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "schema": "CREATE TABLE Ref_Document_Types (\n    Document_Type_Code TEXT PRIMARY KEY,\n    Document_Type_Name TEXT,\n    Document_Type_Description TEXT\n);\n\nCREATE TABLE Ref_Calendar (\n    Calendar_Date DATE PRIMARY KEY,\n    Day_Number INT\n);\n\nCREATE TABLE Ref_Locations (\n    Location_Code TEXT PRIMARY KEY,\n    Location_Name TEXT,\n    Location_Description TEXT\n);\n\nCREATE TABLE Roles (\n    Role_Code TEXT PRIMARY KEY,\n    Role_Name TEXT,\n    Role_Description TEXT\n);\n\nCREATE TABLE All_Documents (\n    Document_ID INT PRIMARY KEY,\n    Date_Stored DATE,\n    Document_Type_Code TEXT,\n    Document_Name TEXT,\n    Document_Description TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Document_Type_Code) REFERENCES Ref_Document_Types (Document_Type_Code)\n);\n\nCREATE TABLE Employees (\n    Employee_ID INT PRIMARY KEY,\n    Role_Code TEXT,\n    Employee_Name TEXT,\n    Gender_MFU TEXT,\n    Date_of_Birth DATE,\n    Other_Details TEXT,\n    FOREIGN KEY (Role_Code) REFERENCES Roles (Role_Code)\n);\n\nCREATE TABLE Document_Locations (\n    Document_ID INT,\n    Location_Code TEXT,\n    Date_in_Location_From DATE,\n    Date_in_Locaton_To DATE,\n    FOREIGN KEY (Document_ID) REFERENCES All_Documents (Document_ID),\n    FOREIGN KEY (Location_Code) REFERENCES Ref_Locations (Location_Code)\n);\n\nCREATE TABLE Documents_to_be_Destroyed (\n    Document_ID INT,\n    Destruction_Authorised_by_Employee_ID INT,\n    Destroyed_by_Employee_ID INT,\n    Planned_Destruction_Date DATE,\n    Actual_Destruction_Date DATE,\n    Other_Details TEXT,\n    FOREIGN KEY (Document_ID) REFERENCES All_Documents (Document_ID),\n    FOREIGN KEY (Destruction_Authorised_by_Employee_ID) REFERENCES Employees (Employee_ID),\n    FOREIGN KEY (Destroyed_by_Employee_ID) REFERENCES Employees (Employee_ID)\n);"
    },
    {
        "db_id": "university_basketball",
        "schema": "CREATE TABLE basketball_match (\n    Team_ID TEXT,\n    School_ID INT,\n    Team_Name TEXT,\n    ACC_Regular_Season TEXT,\n    ACC_Percent TEXT,\n    ACC_Home TEXT,\n    ACC_Road TEXT,\n    All_Games TEXT,\n    All_Games_Percent TEXT,\n    All_Home TEXT,\n    All_Road TEXT,\n    All_Neutral TEXT,\n    FOREIGN KEY (School_ID) REFERENCES university (School_ID)\n);\n\nCREATE TABLE university (\n    School_ID INT PRIMARY KEY,\n    School TEXT,\n    Location TEXT,\n    Founded INT,\n    Affiliation TEXT,\n    Enrollment INT,\n    Nickname TEXT,\n    Primary_conference TEXT\n);"
    },
    {
        "db_id": "soccer_2",
        "schema": "CREATE TABLE College (\n    cName TEXT PRIMARY KEY,\n    state TEXT,\n    enr INT\n);\n\nCREATE TABLE Player (\n    pID INT PRIMARY KEY,\n    pName TEXT,\n    yCard INT,\n    HS INT\n);\n\nCREATE TABLE Tryout (\n    pID INT,\n    cName TEXT,\n    pPos TEXT,\n    decision TEXT,\n    FOREIGN KEY (pID) REFERENCES Player (pID),\n    FOREIGN KEY (cName) REFERENCES College (cName)\n);"
    },
    {
        "db_id": "activity_1",
        "schema": "CREATE TABLE Activity (\n    actid INT PRIMARY KEY,\n    activity_name TEXT\n);\n\nCREATE TABLE Participates_in (\n    stuid INT,\n    actid INT,\n    FOREIGN KEY (stuid) REFERENCES Student (StuID),\n    FOREIGN KEY (actid) REFERENCES Activity (actid)\n);\n\nCREATE TABLE Faculty_Participates_in (\n    FacID INT,\n    actid INT,\n    FOREIGN KEY (FacID) REFERENCES Faculty (FacID),\n    FOREIGN KEY (actid) REFERENCES Activity (actid)\n);\n\nCREATE TABLE Student (\n    StuID INT PRIMARY KEY,\n    LName TEXT,\n    Fname TEXT,\n    Age INT,\n    Sex TEXT,\n    Major TEXT,\n    Advisor INT,\n    city_code INT\n);\n\nCREATE TABLE Faculty (\n    FacID INT PRIMARY KEY,\n    Lname TEXT,\n    Fname TEXT,\n    Rank TEXT,\n    Sex TEXT,\n    Phone INT,\n    Room INT,\n    Building INT\n);"
    },
    {
        "db_id": "cre_Theme_park",
        "schema": "CREATE TABLE Ref_Hotel_Star_Ratings (\n    star_rating_code TEXT PRIMARY KEY,\n    star_rating_description TEXT\n);\n\nCREATE TABLE Locations (\n    Location_ID INT PRIMARY KEY,\n    Location_Name TEXT,\n    Address TEXT,\n    Other_Details TEXT\n);\n\nCREATE TABLE Ref_Attraction_Types (\n    attraction_type_code TEXT PRIMARY KEY,\n    attraction_type_description TEXT\n);\n\nCREATE TABLE Visitors (\n    Tourist_ID INT PRIMARY KEY,\n    Tourist_Details TEXT\n);\n\nCREATE TABLE Features (\n    Feature_ID INT PRIMARY KEY,\n    Feature_Details TEXT\n);\n\nCREATE TABLE Hotels (\n    hotel_id INT PRIMARY KEY,\n    star_rating_code TEXT,\n    pets_allowed_yn TEXT,\n    price_range INT,\n    other_hotel_details TEXT,\n    FOREIGN KEY (star_rating_code) REFERENCES Ref_Hotel_Star_Ratings (star_rating_code)\n);\n\nCREATE TABLE Tourist_Attractions (\n    Tourist_Attraction_ID INT PRIMARY KEY,\n    attraction_type_code TEXT,\n    Location_ID INT,\n    How_to_Get_There TEXT,\n    Name TEXT,\n    Description TEXT,\n    Opening_Hours TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (attraction_type_code) REFERENCES Ref_Attraction_Types (attraction_type_code),\n    FOREIGN KEY (Location_ID) REFERENCES Locations (Location_ID)\n);\n\nCREATE TABLE Street_Markets (\n    Market_ID INT PRIMARY KEY,\n    Market_Details TEXT\n);\n\nCREATE TABLE Shops (\n    Shop_ID INT PRIMARY KEY,\n    Shop_Details TEXT\n);\n\nCREATE TABLE Museums (\n    Museum_ID INT PRIMARY KEY,\n    Museum_Details TEXT\n);\n\nCREATE TABLE Royal_Family (\n    Royal_Family_ID INT PRIMARY KEY,\n    Royal_Family_Details TEXT\n);\n\nCREATE TABLE Theme_Parks (\n    Theme_Park_ID INT PRIMARY KEY,\n    Theme_Park_Details TEXT\n);\n\nCREATE TABLE Visits (\n    Visit_ID INT PRIMARY KEY,\n    Tourist_Attraction_ID INT,\n    Tourist_ID INT,\n    Visit_Date DATE,\n    Visit_Details TEXT,\n    FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID),\n    FOREIGN KEY (Tourist_ID) REFERENCES Visitors (Tourist_ID)\n);\n\nCREATE TABLE Photos (\n    Photo_ID INT PRIMARY KEY,\n    Tourist_Attraction_ID INT,\n    Name TEXT,\n    Description TEXT,\n    Filename TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID)\n);\n\nCREATE TABLE Staff (\n    Staff_ID INT PRIMARY KEY,\n    Tourist_Attraction_ID INT,\n    Name TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID)\n);\n\nCREATE TABLE Tourist_Attraction_Features (\n    Tourist_Attraction_ID INT,\n    Feature_ID INT,\n    FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID),\n    FOREIGN KEY (Feature_ID) REFERENCES Features (Feature_ID)\n);"
    },
    {
        "db_id": "twitter_1",
        "schema": "CREATE TABLE follows (\n    f1 TEXT,\n    f2 INT,\n    FOREIGN KEY (f1) REFERENCES user_profiles (uid),\n    FOREIGN KEY (f2) REFERENCES user_profiles (uid)\n);\n\nCREATE TABLE tweets (\n    id INT PRIMARY KEY,\n    uid INT,\n    text TEXT,\n    createdate DATE,\n    FOREIGN KEY (uid) REFERENCES user_profiles (uid)\n);\n\nCREATE TABLE user_profiles (\n    uid INT PRIMARY KEY,\n    name TEXT,\n    email TEXT,\n    partitionid INT,\n    followers INT\n);"
    },
    {
        "db_id": "election_representative",
        "schema": "CREATE TABLE election (\n    Election_ID INT PRIMARY KEY,\n    Representative_ID INT,\n    Date DATE,\n    Votes INT,\n    Vote_Percent INT,\n    Seats INT,\n    Place INT,\n    FOREIGN KEY (Representative_ID) REFERENCES representative (Representative_ID)\n);\n\nCREATE TABLE representative (\n    Representative_ID INT PRIMARY KEY,\n    Name TEXT,\n    State TEXT,\n    Party TEXT,\n    Lifespan TEXT\n);"
    },
    {
        "db_id": "voter_2",
        "schema": "CREATE TABLE Student (\n    StuID INT PRIMARY KEY,\n    LName TEXT,\n    Fname TEXT,\n    Age INT,\n    Sex TEXT,\n    Major TEXT,\n    Advisor INT,\n    city_code INT\n);\n\nCREATE TABLE Voting_record (\n    StuID INT,\n    Registration_Date DATE,\n    Election_Cycle TEXT,\n    President_Vote INT,\n    Vice_President_Vote INT,\n    Secretary_Vote INT,\n    Treasurer_Vote INT,\n    Class_President_Vote INT,\n    Class_Senator_Vote INT,\n    FOREIGN KEY (StuID) REFERENCES Student (StuID)\n);"
    },
    {
        "db_id": "wedding",
        "schema": "CREATE TABLE people (\n    People_ID INT PRIMARY KEY,\n    Name TEXT,\n    Country TEXT,\n    Is_Male TEXT,\n    Age INT\n);\n\nCREATE TABLE church (\n    Church_ID INT PRIMARY KEY,\n    Name TEXT,\n    Organized_by TEXT,\n    Open_Date DATE,\n    Continuation_of TEXT\n);\n\nCREATE TABLE wedding (\n    Church_ID INT,\n    Male_ID INT,\n    Female_ID INT,\n    Year INT,\n    FOREIGN KEY (Church_ID) REFERENCES church (Church_ID),\n    FOREIGN KEY (Male_ID) REFERENCES people (People_ID),\n    FOREIGN KEY (Female_ID) REFERENCES people (People_ID)\n);"
    },
    {
        "db_id": "news_report",
        "schema": "CREATE TABLE event (\n    Event_ID INT PRIMARY KEY,\n    Date DATE,\n    Venue TEXT,\n    Name TEXT,\n    Event_Attendance INT\n);\n\nCREATE TABLE journalist (\n    journalist_ID INT PRIMARY KEY,\n    Name TEXT,\n    Nationality TEXT,\n    Age INT,\n    Years_working INT\n);\n\nCREATE TABLE news_report (\n    journalist_ID INT,\n    Event_ID INT,\n    Work_Type TEXT,\n    FOREIGN KEY (journalist_ID) REFERENCES journalist (journalist_ID),\n    FOREIGN KEY (Event_ID) REFERENCES event (Event_ID)\n);"
    },
    {
        "db_id": "wine_1",
        "schema": "CREATE TABLE grapes (\n    ID INT PRIMARY KEY,\n    Grape TEXT,\n    Color TEXT\n);\n\nCREATE TABLE appellations (\n    No INT PRIMARY KEY,\n    Appelation TEXT,\n    County TEXT,\n    State TEXT,\n    Area INT,\n    isAVA TEXT\n);\n\nCREATE TABLE wine (\n    No INT,\n    Grape INT,\n    Winery TEXT,\n    Appelation TEXT,\n    State TEXT,\n    Name TEXT,\n    Year INT,\n    Price DECIMAL,\n    Score INT,\n    Cases INT,\n    Drink TEXT,\n    FOREIGN KEY (Grape) REFERENCES grapes (ID),\n    FOREIGN KEY (Appelation) REFERENCES appellations (No)\n);"
    },
    {
        "db_id": "customers_and_addresses",
        "schema": "CREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    address_content TEXT,\n    city TEXT,\n    zip_postcode TEXT,\n    state_province_county TEXT,\n    country TEXT,\n    other_address_details TEXT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_details TEXT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    payment_method TEXT,\n    customer_name TEXT,\n    date_became_customer DATE,\n    other_customer_details TEXT\n);\n\nCREATE TABLE Customer_Addresses (\n    customer_id INT,\n    address_id INT,\n    date_address_from DATE,\n    address_type TEXT,\n    date_address_to DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),\n    FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Customer_Contact_Channels (\n    customer_id INT,\n    channel_code TEXT,\n    active_from_date DATE,\n    active_to_date DATE,\n    contact_number TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\n\nCREATE TABLE Customer_Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_status TEXT,\n    order_date DATE,\n    order_details TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\n\nCREATE TABLE Order_Items (\n    order_id INT,\n    product_id INT,\n    order_quantity INT,\n    FOREIGN KEY (order_id) REFERENCES Customer_Orders (order_id),\n    FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);"
    },
    {
        "db_id": "protein_institute",
        "schema": "CREATE TABLE building (\n    building_id TEXT PRIMARY KEY,\n    Name TEXT,\n    Street_address TEXT,\n    Years_as_tallest INT,\n    Height_feet INT,\n    Floors INT\n);\n\nCREATE TABLE Institution (\n    Institution_id INT PRIMARY KEY,\n    Institution TEXT,\n    Location TEXT,\n    Founded INT,\n    Type TEXT,\n    Enrollment INT,\n    Team TEXT,\n    Primary_Conference TEXT,\n    building_id TEXT,\n    FOREIGN KEY (building_id) REFERENCES building (building_id)\n);\n\nCREATE TABLE protein (\n    common_name TEXT,\n    protein_name TEXT,\n    divergence_from_human_lineage TEXT,\n    accession_number TEXT,\n    sequence_length INT,\n    sequence_identity_to_human_protein INT,\n    Institution_id INT,\n    PRIMARY KEY (common_name),\n    FOREIGN KEY (Institution_id) REFERENCES Institution (Institution_id)\n);"
    },
    {
        "db_id": "school_player",
        "schema": "CREATE TABLE school (\n    School_ID INT PRIMARY KEY,\n    School TEXT,\n    Location TEXT,\n    Enrollment INT,\n    Founded INT,\n    Denomination TEXT,\n    Boys_or_Girls TEXT,\n    Day_or_Boarding TEXT,\n    Year_Entered_Competition INT,\n    School_Colors TEXT\n);\n\nCREATE TABLE school_details (\n    School_ID INT,\n    Nickname TEXT,\n    Colors TEXT,\n    League TEXT,\n    Class TEXT,\n    Division TEXT,\n    FOREIGN KEY (School_ID) REFERENCES school (School_ID)\n);\n\nCREATE TABLE school_performance (\n    School_Id INT,\n    School_Year INT,\n    Class_A INT,\n    Class_AA INT,\n    FOREIGN KEY (School_Id) REFERENCES school (School_ID)\n);\n\nCREATE TABLE player (\n    Player_ID INT PRIMARY KEY,\n    Player TEXT,\n    Team TEXT,\n    Age INT,\n    Position TEXT,\n    School_ID INT,\n    FOREIGN KEY (School_ID) REFERENCES school (School_ID)\n);"
    },
    {
        "db_id": "phone_1",
        "schema": "CREATE TABLE chip_model (\n    Model_name TEXT,\n    Launch_year TEXT,\n    RAM_MiB INT,\n    ROM_MiB INT,\n    Slots INT,\n    WiFi TEXT,\n    Bluetooth TEXT,\n    PRIMARY KEY (Model_name)\n);\n\nCREATE TABLE screen_mode (\n    Graphics_mode TEXT,\n    Char_cells INT,\n    Pixels INT,\n    Hardware_colours INT,\n    used_kb INT,\n    map TEXT,\n    Type TEXT,\n    PRIMARY KEY (Graphics_mode)\n);\n\nCREATE TABLE phone (\n    Company_name TEXT,\n    Hardware_Model_name TEXT,\n    Accreditation_type TEXT,\n    Accreditation_level TEXT,\n    Date DATE,\n    chip_model TEXT,\n    screen_mode TEXT,\n    FOREIGN KEY (chip_model) REFERENCES chip_model (Model_name),\n    FOREIGN KEY (screen_mode) REFERENCES screen_mode (Graphics_mode)\n);"
    },
    {
        "db_id": "tvshow",
        "schema": "CREATE TABLE TV_Channel (\n    id TEXT PRIMARY KEY,\n    series_name TEXT,\n    Country TEXT,\n    Language TEXT,\n    Content TEXT,\n    Pixel_aspect_ratio_PAR TEXT,\n    Hight_definition_TV TEXT,\n    Pay_per_view_PPV TEXT,\n    Package_Option TEXT\n);\n\nCREATE TABLE TV_series (\n    id INT PRIMARY KEY,\n    Episode TEXT,\n    Air_Date DATE,\n    Rating TEXT,\n    Share TEXT,\n    18_49_Rating_Share TEXT,\n    Viewers_m INT,\n    Weekly_Rank INT,\n    Channel TEXT,\n    FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n    id INT PRIMARY KEY,\n    Title TEXT,\n    Directed_by TEXT,\n    Written_by TEXT,\n    Original_air_date DATE,\n    Production_code TEXT,\n    Channel TEXT,\n    FOREIGN KEY (Channel) REFERENCES TV_Channel (id)\n);"
    },
        {
            "db_id": "wrestler",
            "schema": "CREATE TABLE wrestler (\n    Wrestler_ID INT PRIMARY KEY,\n    Name TEXT,\n    Reign TEXT,\n    Days_held TEXT,\n    Location TEXT,\n    Event TEXT\n);\n\nCREATE TABLE Elimination (\n    Elimination_ID INT PRIMARY KEY,\n    Wrestler_ID INT,\n    Team TEXT,\n    Eliminated_By TEXT,\n    Elimination_Move TEXT,\n    Time TEXT,\n    FOREIGN KEY (Wrestler_ID) REFERENCES wrestler (Wrestler_ID)\n);"
        },
        {
            "db_id": "customer_complaints",
            "schema": "CREATE TABLE Staff (\n    staff_id INT PRIMARY KEY,\n    gender TEXT,\n    first_name TEXT,\n    last_name TEXT,\n    email_address TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_type_code TEXT,\n    address_line_1 TEXT,\n    address_line_2 TEXT,\n    town_city TEXT,\n    state TEXT,\n    email_address TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    parent_product_id INT,\n    product_category_code TEXT,\n    date_product_first_available DATE,\n    date_product_discontinued DATE,\n    product_name TEXT,\n    product_description TEXT,\n    product_price DECIMAL\n);\n\nCREATE TABLE Complaints (\n    complaint_id INT PRIMARY KEY,\n    product_id INT,\n    customer_id INT,\n    complaint_outcome_code TEXT,\n    complaint_status_code TEXT,\n    complaint_type_code TEXT,\n    date_complaint_raised DATE,\n    date_complaint_closed DATE,\n    staff_id INT,\n    FOREIGN KEY (product_id) REFERENCES Products (product_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),\n    FOREIGN KEY (staff_id) REFERENCES Staff (staff_id)\n);"
        },
        {
            "db_id": "department_management",
            "schema": "CREATE TABLE department (\n    Department_ID INT PRIMARY KEY,\n    Name TEXT,\n    Creation TEXT,\n    Ranking TEXT,\n    Budget_in_Billions DECIMAL,\n    Num_Employees INT\n);\n\nCREATE TABLE head (\n    head_ID INT PRIMARY KEY,\n    name TEXT,\n    born_state TEXT,\n    age INT\n);\n\nCREATE TABLE management (\n    department_ID INT,\n    head_ID INT,\n    temporary_acting TEXT,\n    FOREIGN KEY (department_ID) REFERENCES department (Department_ID),\n    FOREIGN KEY (head_ID) REFERENCES head (head_ID)\n);"
        },
        {
            "db_id": "customers_and_products_contacts",
            "schema": "CREATE TABLE Addresses (\n    address_id INT PRIMARY KEY,\n    line_1_number_building TEXT,\n    city TEXT,\n    zip_postcode TEXT,\n    state_province_county TEXT,\n    country TEXT\n);\n\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_type_code TEXT,\n    product_name TEXT,\n    product_price DECIMAL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    payment_method_code TEXT,\n    customer_number TEXT,\n    customer_name TEXT,\n    customer_address TEXT,\n    customer_phone TEXT,\n    customer_email TEXT\n);\n\nCREATE TABLE Contacts (\n    contact_id INT PRIMARY KEY,\n    customer_id INT,\n    gender TEXT,\n    first_name TEXT,\n    last_name TEXT,\n    contact_phone TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\n\nCREATE TABLE Customer_Address_History (\n    customer_id INT,\n    address_id INT,\n    date_from DATE,\n    date_to DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),\n    FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Customer_Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    order_status_code TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\n\nCREATE TABLE Order_Items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    order_quantity INT,\n    FOREIGN KEY (order_id) REFERENCES Customer_Orders (order_id),\n    FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);"
        },
        {
            "db_id": "company_1",
            "schema": "CREATE TABLE works_on (\n    Essn TEXT,\n    Pno INT,\n    Hours INT,\n    PRIMARY KEY (Essn, Pno)\n);\n\nCREATE TABLE employee (\n    Ssn TEXT PRIMARY KEY,\n    Fname TEXT,\n    Minit TEXT,\n    Lname TEXT,\n    Bdate DATE,\n    Address TEXT,\n    Sex TEXT,\n    Salary DECIMAL,\n    Super_ssn TEXT,\n    Department_no TEXT\n);\n\nCREATE TABLE department (\n    Dname TEXT,\n    Dnumber TEXT PRIMARY KEY,\n    Mgr_ssn TEXT,\n    Mgr_start_date DATE\n);\n\nCREATE TABLE project (\n    Pname TEXT,\n    Pnumber INT PRIMARY KEY,\n    Plocation TEXT,\n    Dnum TEXT\n);\n\nCREATE TABLE dependent (\n    Pname TEXT,\n    Pnumber INT,\n    Dnum TEXT,\n    PRIMARY KEY (Pnumber),\n    FOREIGN KEY (Dnum) REFERENCES department (Dnumber)\n);\n\nCREATE TABLE dept_locations (\n    Dnumber TEXT,\n    Dlocation TEXT,\n    PRIMARY KEY (Dnumber)\n);"
        },
        {
            "db_id": "workshop_paper",
            "schema": "CREATE TABLE workshop (\n    Workshop_ID INT PRIMARY KEY,\n    Date INT,\n    Venue TEXT,\n    Name TEXT\n);\n\nCREATE TABLE submission (\n    Submission_ID INT PRIMARY KEY,\n    Scores INT,\n    Author TEXT,\n    College TEXT\n);\n\nCREATE TABLE Acceptance (\n    Submission_ID INT,\n    Workshop_ID INT,\n    Result TEXT,\n    FOREIGN KEY (Submission_ID) REFERENCES submission (Submission_ID),\n    FOREIGN KEY (Workshop_ID) REFERENCES workshop (Workshop_ID)\n);"
        },
        {
            "db_id": "epinions_1",
            "schema": "CREATE TABLE item (\n    i_id INT PRIMARY KEY,\n    title TEXT\n);\n\nCREATE TABLE review (\n    a_id INT PRIMARY KEY,\n    u_id INT,\n    i_id INT,\n    rating INT,\n    rank INT,\n    FOREIGN KEY (u_id) REFERENCES useracct (u_id),\n    FOREIGN KEY (i_id) REFERENCES item (i_id)\n);\n\nCREATE TABLE useracct (\n    u_id INT PRIMARY KEY,\n    name TEXT\n);\n\nCREATE TABLE trust (\n    source_u_id INT,\n    target_u_id INT,\n    trust INT,\n    FOREIGN KEY (source_u_id) REFERENCES useracct (u_id),\n    FOREIGN KEY (target_u_id) REFERENCES useracct (u_id)\n);"
        },
        {
            "db_id": "party_host",
            "schema": "CREATE TABLE party (\n    Party_ID INT PRIMARY KEY,\n    Party_Theme TEXT,\n    Location TEXT,\n    First_year INT,\n    Last_year INT,\n    Number_of_hosts INT\n);\n\nCREATE TABLE host (\n    Host_ID INT PRIMARY KEY,\n    Name TEXT,\n    Nationality TEXT,\n    Age INT\n);\n\nCREATE TABLE party_host (\n    Party_ID INT,\n    Host_ID INT,\n    Is_Main_in_Charge TEXT,\n    FOREIGN KEY (Party_ID) REFERENCES party (Party_ID),\n    FOREIGN KEY (Host_ID) REFERENCES host (Host_ID)\n);"
        },
        {
            "db_id": "product_catalog",
            "schema": "CREATE TABLE Attribute_Definitions (\n    attribute_id TEXT PRIMARY KEY,\n    attribute_name TEXT,\n    attribute_data_type TEXT\n);\n\nCREATE TABLE Catalogs (\n    catalog_id INT PRIMARY KEY,\n    catalog_name TEXT,\n    catalog_publisher TEXT,\n    date_of_publication DATE,\n    date_of_latest_revision DATE\n);\n\nCREATE TABLE Catalog_Structure (\n    catalog_level_number INT,\n    catalog_id INT,\n    catalog_level_name TEXT,\n    FOREIGN KEY (catalog_id) REFERENCES Catalogs (catalog_id)\n);\n\nCREATE TABLE Catalog_Contents (\n    catalog_entry_id INT PRIMARY KEY,\n    catalog_level_number INT,\n    parent_entry_id INT,\n    previous_entry_id INT,\n    next_entry_id INT,\n    catalog_entry_name TEXT,\n    product_stock_number TEXT,\n    price_in_dollars DECIMAL,\n    price_in_euros DECIMAL,\n    price_in_pounds DECIMAL,\n    capacity INT,\n    length DECIMAL,\n    height DECIMAL,\n    width DECIMAL,\n    FOREIGN KEY (catalog_level_number) REFERENCES Catalog_Structure (catalog_level_number)\n);\n\nCREATE TABLE Catalog_Contents_Additional_Attributes (\n    catalog_entry_id INT,\n    catalog_level_number INT,\n    attribute_id TEXT,\n    attribute_value TEXT,\n    FOREIGN KEY (catalog_entry_id) REFERENCES Catalog_Contents (catalog_entry_id),\n    FOREIGN KEY (attribute_id) REFERENCES Attribute_Definitions (attribute_id)\n);"
    }  
]

    
    
  
    
            
