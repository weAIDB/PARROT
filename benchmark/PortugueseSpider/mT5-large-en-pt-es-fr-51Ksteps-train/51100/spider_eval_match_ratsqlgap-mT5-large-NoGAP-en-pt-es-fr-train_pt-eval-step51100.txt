Match OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Match OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Match OK   medium pred: SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Desc
           medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
---
Match OK   medium pred: SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Desc
           medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
---
Match OK   medium pred: SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Country = 'terminal'
           medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
---
Match OK   medium pred: SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Country = 'terminal'
           medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
---
Match OK   medium pred: SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age Asc LIMIT 1
           medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
---
Match OK   medium pred: SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age Asc LIMIT 1
           medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
---
Match OK   easy pred: SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
           easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20
---
Match OK   easy pred: SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
           easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20
---
Match OK   medium pred: SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
           medium gold: SELECT country ,  count(*) FROM singer GROUP BY country
---
Match OK   medium pred: SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
           medium gold: SELECT country ,  count(*) FROM singer GROUP BY country
---
Match OK   hard pred: SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
           hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
---
Match OK   hard pred: SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
           hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
---
Match OK   medium pred: SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'
           medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
---
Match OK   medium pred: SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'
           medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
---
Match Fail medium pred: SELECT Max(stadium.Capacity), Avg(stadium.Average) FROM stadium
           medium gold: select max(capacity), average from stadium
---
Match Fail medium pred: SELECT Avg(stadium.Capacity), Max(stadium.Highest) FROM stadium
           medium gold: select avg(capacity) ,  max(capacity) from stadium
---
Match OK   medium pred: SELECT stadium.Name, stadium.Capacity FROM stadium ORDER BY stadium.Average Desc LIMIT 1
           medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
---
Match OK   medium pred: SELECT stadium.Name, stadium.Capacity FROM stadium ORDER BY stadium.Average Desc LIMIT 1
           medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
---
Match OK   medium pred: SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
---
Match OK   medium pred: SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
---
Match OK   medium pred: SELECT stadium.Name, Count(*) FROM concert JOIN stadium GROUP BY stadium.Stadium_ID
           medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
---
Match Fail medium pred: SELECT stadium.Stadium_ID, Count(*) FROM stadium JOIN concert GROUP BY concert.Stadium_ID
           medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
---
Match OK   extra pred: SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert WHERE concert.Year >= 'terminal' GROUP BY stadium.Stadium_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert WHERE concert.Year > 'terminal' GROUP BY stadium.Stadium_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1
---
Match OK   hard pred: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)
           hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
---
Match OK   hard pred: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)
           hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
---
Match OK   hard pred: SELECT singer.Country FROM singer WHERE singer.Age > 'terminal' INTERSECT SELECT singer.Country FROM singer WHERE singer.Age < 'terminal'
           hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
---
Match OK   hard pred: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
---
Match OK   hard pred: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM concert JOIN stadium WHERE concert.Year = 'terminal'
           hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
---
Match OK   medium pred: SELECT concert.concert_Name, concert.Theme, Count(*) FROM concert JOIN singer_in_concert GROUP BY singer_in_concert.concert_ID
           medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
---
Match OK   medium pred: SELECT concert.concert_Name, concert.Theme, Count(*) FROM concert JOIN singer_in_concert GROUP BY singer_in_concert.concert_ID
           medium gold: select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id
---
Match Fail medium pred: SELECT singer.Name, Count(*) FROM singer_in_concert JOIN singer GROUP BY singer.Name
           medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
---
Match Fail medium pred: SELECT singer.Name, Count(*) FROM singer_in_concert JOIN singer GROUP BY singer.Name
           medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
---
Match OK   hard pred: SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
---
Match OK   hard pred: SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
---
Match OK   medium pred: SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE 'terminal'
           medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
---
Match OK   medium pred: SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE 'terminal'
           medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
---
Match Fail extra pred: SELECT stadium.Name, stadium.Location FROM stadium JOIN concert WHERE concert.Year >= 'terminal' AND concert.Year <= 'terminal'
           extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
---
Match OK   extra pred: SELECT stadium.Name, stadium.Location FROM stadium JOIN concert WHERE concert.Year = 'terminal' INTERSECT SELECT stadium.Name, stadium.Location FROM stadium JOIN concert WHERE concert.Year = 'terminal'
           extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
---
Match Fail hard pred: SELECT Count(*) FROM concert JOIN stadium WHERE stadium.Capacity = (SELECT Max(stadium.Capacity) FROM stadium)
           hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
---
Match Fail hard pred: SELECT Count(*) FROM concert JOIN stadium WHERE stadium.Capacity = (SELECT Max(stadium.Capacity) FROM stadium)
           hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
---
Match OK   easy pred: SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
           easy gold: SELECT count(*) FROM pets WHERE weight  >  10
---
Match OK   easy pred: SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
           easy gold: SELECT count(*) FROM pets WHERE weight  >  10
---
Match OK   medium pred: SELECT Pets.weight FROM Pets ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
---
Match OK   medium pred: SELECT Pets.weight FROM Pets ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
---
Match OK   medium pred: SELECT Max(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType
---
Match OK   medium pred: SELECT Max(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType
---
Match Fail medium pred: SELECT Count(*) FROM Has_Pet JOIN Pets JOIN Student WHERE Student.Age > 'terminal'
           medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
---
Match Fail medium pred: SELECT Count(*) FROM Has_Pet JOIN Pets JOIN Student WHERE Student.Age > 'terminal'
           medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
---
Match Fail hard pred: SELECT Count(*) FROM Has_Pet JOIN Pets JOIN Student WHERE Student.Sex = 'terminal'
           hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
---
Match Fail hard pred: SELECT Count(*) FROM Has_Pet JOIN Pets JOIN Student WHERE Student.Sex = 'terminal'
           hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
---
Match OK   easy pred: SELECT Count(DISTINCT Pets.PetType) FROM Pets
           easy gold: SELECT count(DISTINCT pettype) FROM pets
---
Match OK   easy pred: SELECT Count(DISTINCT Pets.PetType) FROM Pets
           easy gold: SELECT count(DISTINCT pettype) FROM pets
---
Match OK   extra pred: SELECT DISTINCT Student.Fname FROM Has_Pet JOIN Pets JOIN Student WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'
           extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
---
Match OK   extra pred: SELECT DISTINCT Student.Fname FROM Has_Pet JOIN Pets JOIN Student WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'
           extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
---
Match OK   extra pred: SELECT Student.Fname FROM Has_Pet JOIN Pets JOIN Student WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Has_Pet JOIN Pets JOIN Student WHERE Pets.PetType = 'terminal'
           extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'
---
Match OK   extra pred: SELECT Student.Fname FROM Has_Pet JOIN Pets JOIN Student WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Has_Pet JOIN Pets JOIN Student WHERE Pets.PetType = 'terminal'
           extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
---
Match Fail extra pred: SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)
           extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Match Fail extra pred: SELECT Student.Major, Student.Major FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal')
           extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Match Fail hard pred: SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet
           hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
---
Match Fail hard pred: SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
---
Match Fail extra pred: SELECT Student.Fname, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal')
           extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Match Fail extra pred: SELECT Student.Fname FROM Student WHERE Pets.PetType = 'terminal' EXCEPT SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Match Fail medium pred: SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.pet_age Desc LIMIT 1
           medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
---
Match OK   medium pred: SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
---
Match OK   medium pred: SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 'terminal'
           medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
---
Match Fail medium pred: SELECT Pets.PetID, Pets.weight FROM Pets GROUP BY Pets.PetID HAVING Count(*) > 'terminal'
           medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
---
Match OK   medium pred: SELECT Avg(Pets.pet_age), Max(Pets.pet_age), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
---
Match OK   medium pred: SELECT Avg(Pets.pet_age), Max(Pets.pet_age), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
---
Match OK   medium pred: SELECT Pets.PetType, Avg(Pets.weight) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
---
Match OK   medium pred: SELECT Avg(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
---
Match Fail medium pred: SELECT DISTINCT Student.Fname, Student.Age FROM Has_Pet JOIN Pets JOIN Student
           medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
---
Match Fail medium pred: SELECT DISTINCT Student.Fname, Student.Age FROM Has_Pet JOIN Pets JOIN Student
           medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
---
Match Fail medium pred: SELECT Has_Pet.PetID FROM Pets JOIN Has_Pet JOIN Student WHERE Student.LName = 'terminal'
           medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
---
Match Fail medium pred: SELECT Has_Pet.PetID FROM Pets JOIN Has_Pet JOIN Student WHERE Student.LName = 'terminal'
           medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
---
Match Fail medium pred: SELECT Count(*), Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID
           medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
---
Match Fail medium pred: SELECT Student.Fname, Count(*) FROM Student JOIN Has_Pet GROUP BY Has_Pet.StuID
           medium gold: select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid
---
Match OK   medium pred: SELECT Student.Fname, Student.Sex FROM Has_Pet JOIN Student GROUP BY Has_Pet.StuID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
---
Match OK   medium pred: SELECT Student.Fname, Student.Sex FROM Has_Pet JOIN Student GROUP BY Has_Pet.StuID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
---
Match Fail hard pred: SELECT Student.LName FROM Student JOIN Has_Pet WHERE Student.Age = 'terminal'
           hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
---
Match Fail hard pred: SELECT Student.LName FROM Student JOIN Has_Pet WHERE Student.Age = 'terminal'
           hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
---
Match OK   extra pred: SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)
           extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)
---
Match OK   extra pred: SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)
           extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)
---
Match OK   easy pred: SELECT Count(*) FROM continents
           easy gold: SELECT count(*) FROM CONTINENTS;
---
Match OK   easy pred: SELECT Count(*) FROM continents
           easy gold: SELECT count(*) FROM CONTINENTS;
---
Match Fail medium pred: SELECT continents.ContId, countries.CountryName, Count(*) FROM countries JOIN continents GROUP BY continents.ContId
           medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
---
Match OK   medium pred: SELECT continents.ContId, continents.Continent, Count(*) FROM countries JOIN continents GROUP BY countries.Continent
           medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
---
Match OK   easy pred: SELECT Count(*) FROM countries
           easy gold: SELECT count(*) FROM COUNTRIES;
---
Match OK   easy pred: SELECT Count(*) FROM countries
           easy gold: SELECT count(*) FROM COUNTRIES;
---
Match Fail medium pred: SELECT car_makers.FullName, car_names.Make, Count(*) FROM model_list JOIN car_makers JOIN car_names GROUP BY car_makers.Id
           medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
---
Match Fail medium pred: SELECT car_makers.FullName, car_names.Make, Count(*) FROM model_list JOIN car_makers JOIN car_names GROUP BY car_makers.Id
           medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
---
Match OK   hard pred: SELECT car_names.Model FROM car_names JOIN cars_data ORDER BY cars_data.Horsepower Asc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
---
Match OK   hard pred: SELECT car_names.Model FROM car_names JOIN cars_data ORDER BY cars_data.Horsepower Asc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
---
Match Fail extra pred: SELECT car_names.Model FROM car_names JOIN model_list WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
           extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
---
Match OK   extra pred: SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
           extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
---
Match Fail extra pred: SELECT car_makers.Maker FROM cars_data JOIN model_list JOIN car_makers WHERE cars_data.Year = 'terminal'
           extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
---
Match Fail extra pred: SELECT DISTINCT car_makers.Maker FROM model_list JOIN car_makers JOIN cars_data WHERE cars_data.Year = 'terminal'
           extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
---
Match Fail extra pred: SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ORDER BY cars_data.Year Asc LIMIT 1
           extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
---
Match Fail extra pred: SELECT car_makers.Maker, cars_data.Year FROM car_names JOIN cars_data JOIN car_makers ORDER BY cars_data.Year Asc LIMIT 1
           extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
---
Match Fail hard pred: SELECT DISTINCT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Year > 'terminal'
           hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
---
Match OK   hard pred: SELECT DISTINCT car_names.Model FROM model_list JOIN car_names JOIN cars_data WHERE cars_data.Year > 'terminal'
           hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
---
Match Fail hard pred: SELECT continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.Continent
           hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
---
Match Fail hard pred: SELECT continents.Continent, Count(*) FROM countries JOIN continents GROUP BY continents.Continent
           hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
---
Match Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
---
Match Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
---
Match Fail medium pred: SELECT car_makers.Id, car_makers.FullName, Count(*) FROM car_makers JOIN model_list GROUP BY car_makers.Maker
           medium gold: select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
---
Match Fail medium pred: SELECT car_makers.Id, car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list GROUP BY car_makers.Id
           medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
---
Match Fail medium pred: SELECT cars_data.Accelerate FROM car_names JOIN cars_data JOIN car_makers WHERE car_names.Model = 'terminal' AND car_makers.FullName = 'terminal'
           medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
---
Match Fail medium pred: SELECT cars_data.Accelerate FROM car_names JOIN cars_data JOIN car_makers WHERE car_names.Model = 'terminal' AND car_makers.FullName = 'terminal'
           medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
---
Match OK   medium pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
---
Match OK   medium pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
---
Match Fail hard pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
---
Match Fail hard pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
---
Match OK   easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
---
Match OK   easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
---
Match Fail medium pred: SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
---
Match Fail medium pred: SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 'terminal'
           medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
---
Match Fail medium pred: SELECT car_makers.Maker, model_list.Model FROM model_list JOIN car_makers
           medium gold: SELECT Maker ,  Model FROM MODEL_LIST;
---
Match Fail medium pred: SELECT car_makers.Maker, model_list.Model FROM model_list JOIN car_makers
           medium gold: SELECT Maker ,  Model FROM MODEL_LIST;
---
Match OK   medium pred: SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers GROUP BY countries.CountryId HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
---
Match OK   medium pred: SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers GROUP BY countries.CountryId HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
---
Match OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
---
Match OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
---
Match OK   medium pred: SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
           medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
---
Match OK   medium pred: SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
           medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
---
Match Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers JOIN continents WHERE continents.Continent = 'terminal' GROUP BY countries.CountryId HAVING Count(*) >= 'terminal'
           extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
---
Match Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryId HAVING Count(*) >= 'terminal'
           extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
---
Match Fail extra pred: SELECT Max(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Cylinders = 'terminal'
           extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
---
Match Fail extra pred: SELECT Max(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Cylinders = 'terminal'
           extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
---
Match Fail hard pred: SELECT car_names.Model FROM car_names JOIN model_list JOIN cars_data GROUP BY car_names.Model ORDER BY Avg(cars_data.MPG) Desc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
---
Match OK   hard pred: SELECT car_names.Model FROM car_names JOIN cars_data ORDER BY cars_data.MPG Desc LIMIT 1
           hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
---
Match OK   easy pred: SELECT Avg(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 'terminal'
           easy gold: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
---
Match OK   easy pred: SELECT Avg(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 'terminal'
           easy gold: select avg(horsepower) from cars_data where year  <  1980;
---
Match OK   medium pred: SELECT Avg(cars_data.Edispl) FROM car_names JOIN cars_data WHERE car_names.Model = 'terminal'
           medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
---
Match Fail medium pred: SELECT Avg(cars_data.Edispl) FROM cars_data
           medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
---
Match OK   medium pred: SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
           medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
---
Match Fail medium pred: SELECT Max(cars_data.Accelerate), cars_data.Id FROM cars_data GROUP BY cars_data.Id
           medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
---
Match OK   hard pred: SELECT car_names.Model FROM car_names GROUP BY car_names.Model ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
---
Match Fail hard pred: SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
---
Match OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
---
Match OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
---
Match OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Year = 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
---
Match OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Year = 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
---
Match OK   medium pred: SELECT Count(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
---
Match OK   medium pred: SELECT Count(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
---
Match Fail medium pred: SELECT car_makers.FullName, car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
---
Match OK   medium pred: SELECT car_makers.FullName, car_makers.Id FROM model_list JOIN car_makers GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
---
Match Fail extra pred: SELECT DISTINCT car_names.Model FROM model_list JOIN car_makers WHERE car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
           extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
---
Match Fail extra pred: SELECT DISTINCT car_names.Model FROM car_names JOIN car_makers JOIN cars_data WHERE cars_data.Weight > 'terminal' OR car_makers.FullName = 'terminal'
           extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
---
Match OK   easy pred: SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight BETWEEN 'terminal' AND 'terminal'
           easy gold: select distinct year from cars_data where weight between 3000 and 4000;
---
Match Fail easy pred: SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
           easy gold: select distinct year from cars_data where weight between 3000 and 4000;
---
Match OK   medium pred: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1
           medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
---
Match OK   medium pred: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1
           medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
---
Match Fail extra pred: SELECT cars_data.Cylinders FROM car_names JOIN cars_data JOIN car_makers WHERE car_names.Model = 'terminal' ORDER BY cars_data.Accelerate Asc LIMIT 1
           extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
---
Match OK   extra pred: SELECT cars_data.Cylinders FROM cars_data JOIN car_names WHERE car_names.Model = 'terminal' ORDER BY cars_data.Accelerate Asc LIMIT 1
           extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
---
Match Fail hard pred: SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Horsepower Desc LIMIT 1)
           hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
---
Match Fail hard pred: SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Horsepower Desc LIMIT 1)
           hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
---
Match Fail medium pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryId > 'terminal' GROUP BY countries.CountryName HAVING Count(*) > 'terminal'
           medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
---
Match Fail medium pred: SELECT Count(*) FROM car_makers
           medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
---
Match OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
---
Match OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
---
Match OK   extra pred: SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Cylinders = 'terminal' ORDER BY cars_data.Horsepower Desc LIMIT 1
           extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
---
Match OK   extra pred: SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Cylinders = 'terminal' ORDER BY cars_data.Horsepower Desc LIMIT 1
           extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
---
Match Fail extra pred: SELECT car_names.Make, car_names.Make FROM car_names JOIN cars_data WHERE cars_data.Cylinders > 'terminal' EXCEPT SELECT car_names.Make, car_names.Make FROM car_names JOIN cars_data WHERE cars_data.Cylinders > 'terminal'
           extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
---
Match Fail extra pred: SELECT cars_data.Id, car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Horsepower < 'terminal'
           extra gold: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
---
Match Fail medium pred: SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Cylinders < 'terminal'
           medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
---
Match Fail medium pred: SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Cylinders < 'terminal'
           medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
---
Match Fail extra pred: SELECT model_list.Model FROM model_list WHERE cars_data.Weight > 'terminal' OR car_makers.FullName = 'terminal' EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.FullName = 'terminal'
           extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
---
Match Fail extra pred: SELECT DISTINCT car_names.Model FROM model_list JOIN car_makers WHERE cars_data.Weight > 'terminal' OR car_makers.Maker = 'terminal'
           extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
---
Match Fail hard pred: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
           hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
---
Match Fail hard pred: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
           hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
---
Match Fail extra pred: SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'
           extra gold: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
---
Match Fail extra pred: SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'
           extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
---
Match Fail extra pred: SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers WHERE car_names.Model = 'terminal' GROUP BY countries.CountryId HAVING Count(*) > 'terminal' UNION SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers JOIN car_names WHERE car_names.Model = 'terminal'
           extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
---
Match Fail extra pred: SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryId HAVING Count(*) > 'terminal' UNION SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers JOIN model_list WHERE model_list.Model = 'terminal' GROUP BY countries.CountryId HAVING Count(*) > 'terminal'
           extra gold: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
---
Match OK   easy pred: SELECT airlines.Country FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Match OK   easy pred: SELECT airlines.Country FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Match OK   easy pred: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Match OK   easy pred: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Match OK   medium pred: SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'terminal'
           medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
---
Match OK   medium pred: SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'terminal'
           medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
---
Match OK   medium pred: SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'terminal'
           medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
---
Match OK   medium pred: SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'terminal'
           medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
---
Match OK   easy pred: SELECT Count(*) FROM airlines
           easy gold: SELECT count(*) FROM AIRLINES
---
Match OK   easy pred: SELECT Count(*) FROM airlines
           easy gold: SELECT count(*) FROM AIRLINES
---
Match OK   easy pred: SELECT Count(*) FROM airports
           easy gold: SELECT count(*) FROM AIRPORTS
---
Match OK   easy pred: SELECT Count(*) FROM airports
           easy gold: SELECT count(*) FROM AIRPORTS
---
Match OK   easy pred: SELECT Count(*) FROM flights
           easy gold: SELECT count(*) FROM FLIGHTS
---
Match OK   easy pred: SELECT Count(*) FROM flights
           easy gold: SELECT count(*) FROM FLIGHTS
---
Match OK   easy pred: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = 'terminal'
           easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
---
Match OK   easy pred: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = 'terminal'
           easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
---
Match OK   easy pred: SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'
           easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
---
Match OK   easy pred: SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'
           easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
---
Match OK   medium pred: SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'
           medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
---
Match OK   medium pred: SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'
           medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
---
Match OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
---
Match OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
---
Match OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
---
Match OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
---
Match OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Match OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Match OK   easy pred: SELECT Count(*) FROM flights WHERE flights.DestAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
---
Match OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
---
Match OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Match OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Match OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Match OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Match Fail hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' AND airports.City = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
---
Match Fail hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' AND airports.AirportName = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
---
Match OK   medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
---
Match OK   medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
---
Match OK   medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal' AND flights.DestAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
---
Match OK   medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal' AND flights.DestAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
---
Match OK   medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal' AND flights.SourceAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
---
Match Fail medium pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal' AND flights.SourceAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
---
Match OK   hard pred: SELECT Count(*) FROM airlines JOIN flights JOIN airports WHERE airlines.Airline = 'terminal' AND airports.City = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
---
Match Fail hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.AirportName = 'terminal' AND airports.City = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
---
Match OK   extra pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT flights.SourceAirport FROM flights GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT flights.SourceAirport FROM flights GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT flights.SourceAirport FROM flights GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
---
Match Fail extra pred: SELECT flights.SourceAirport FROM flights GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
---
Match OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights ORDER BY flights.FlightNo Asc LIMIT 1
           extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
---
Match Fail extra pred: SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights GROUP BY flights.Airline ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
---
Match OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
---
Match OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
---
Match OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
---
Match OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.DestAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
---
Match Fail extra pred: SELECT airlines.Airline FROM flights JOIN airports JOIN airlines WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM flights JOIN airports JOIN airlines WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
---
Match OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
---
Match OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' EXCEPT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
---
Match Fail extra pred: SELECT airlines.Airline FROM airlines WHERE flights.SourceAirport = 'terminal' AND airports.AirportName = 'terminal' EXCEPT SELECT airlines.Airline FROM flights WHERE flights.SourceAirport = 'terminal' AND flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
---
Match Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
---
Match Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
---
Match Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.FlightNo < 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
---
Match OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline HAVING Count(*) < 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
---
Match OK   medium pred: SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
---
Match OK   medium pred: SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
---
Match OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Match OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Match OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
---
Match OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
---
Match OK   medium pred: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Match OK   medium pred: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Match OK   medium pred: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Match OK   medium pred: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Match OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' OR airports.City = 'terminal'
           hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
---
Match OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' OR airports.City = 'terminal'
           hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
---
Match Fail hard pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode NOT IN (SELECT flights.SourceAirport FROM flights)
           hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
---
Match Fail hard pred: SELECT airports.AirportName FROM airports EXCEPT SELECT airports.AirportName FROM airports JOIN flights WHERE flights.FlightNo = 'terminal'
           hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
---
Match OK   easy pred: SELECT Count(*) FROM employee
           easy gold: SELECT count(*) FROM employee
---
Match OK   easy pred: SELECT Count(*) FROM employee
           easy gold: SELECT count(*) FROM employee
---
Match OK   easy pred: SELECT employee.Name FROM employee ORDER BY employee.Age Asc
           easy gold: SELECT name FROM employee ORDER BY age
---
Match OK   easy pred: SELECT employee.Name FROM employee ORDER BY employee.Age Asc
           easy gold: SELECT name FROM employee ORDER BY age
---
Match OK   medium pred: SELECT Count(*), employee.City FROM employee GROUP BY employee.City
           medium gold: SELECT count(*) ,  city FROM employee GROUP BY city
---
Match OK   medium pred: SELECT Count(*), employee.City FROM employee GROUP BY employee.City
           medium gold: SELECT count(*) ,  city FROM employee GROUP BY city
---
Match Fail medium pred: SELECT employee.City FROM employee WHERE employee.Age > 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
           medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
---
Match Fail medium pred: SELECT employee.City FROM employee WHERE employee.Age > 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
           medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
---
Match OK   medium pred: SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location
           medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
---
Match OK   medium pred: SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location
           medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
---
Match OK   medium pred: SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1
           medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
---
Match OK   medium pred: SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1
           medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
---
Match OK   medium pred: SELECT Min(shop.Number_products), Max(shop.Number_products) FROM shop
           medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop
---
Match OK   medium pred: SELECT Min(shop.Number_products), Max(shop.Number_products) FROM shop
           medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop
---
Match OK   medium pred: SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products Desc
           medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
---
Match OK   medium pred: SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products Desc
           medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
---
Match OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT Avg(shop.Number_products) FROM shop)
           hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
---
Match OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT Avg(shop.Number_products) FROM shop)
           hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
---
Match Fail extra pred: SELECT employee.Name FROM employee JOIN evaluation ORDER BY evaluation.Bonus Desc LIMIT 1
           extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT employee.Name FROM employee JOIN evaluation ORDER BY evaluation.Bonus Desc LIMIT 1
           extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT employee.Name FROM evaluation JOIN employee ORDER BY evaluation.Bonus Desc LIMIT 1
           hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
---
Match OK   hard pred: SELECT employee.Name FROM evaluation JOIN employee ORDER BY evaluation.Bonus Desc LIMIT 1
           hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
---
Match OK   hard pred: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)
           hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
---
Match OK   hard pred: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)
           hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
---
Match OK   extra pred: SELECT shop.Name FROM shop JOIN hiring GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT shop.Name FROM shop JOIN hiring GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)
           hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
---
Match OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)
           hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
---
Match Fail medium pred: SELECT hiring.Shop_ID, Count(*) FROM hiring JOIN shop GROUP BY hiring.Shop_ID
           medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
---
Match Fail medium pred: SELECT Count(*), shop.Name FROM shop JOIN hiring GROUP BY hiring.Shop_ID
           medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
---
Match OK   easy pred: SELECT Sum(evaluation.Bonus) FROM evaluation
           easy gold: SELECT sum(bonus) FROM evaluation
---
Match OK   easy pred: SELECT Sum(evaluation.Bonus) FROM evaluation
           easy gold: SELECT sum(bonus) FROM evaluation
---
Match OK   easy pred: SELECT * FROM hiring
           easy gold: SELECT * FROM hiring
---
Match OK   easy pred: SELECT * FROM hiring
           easy gold: SELECT * FROM hiring
---
Match OK   hard pred: SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal' INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal'
           hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
---
Match OK   hard pred: SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal' INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal'
           hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
---
Match OK   easy pred: SELECT Count(DISTINCT shop.Location) FROM shop
           easy gold: SELECT count(DISTINCT LOCATION) FROM shop
---
Match OK   easy pred: SELECT Count(DISTINCT shop.Location) FROM shop
           easy gold: SELECT count(DISTINCT LOCATION) FROM shop
---
Match OK   easy pred: SELECT Count(*) FROM Documents
           easy gold: SELECT count(*) FROM Documents
---
Match OK   easy pred: SELECT Count(*) FROM Documents
           easy gold: SELECT count(*) FROM Documents
---
Match OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents
           medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents
---
Match OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents
           medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents
---
Match OK   medium pred: SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'
           medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
---
Match OK   medium pred: SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'
           medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
---
Match OK   medium pred: SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
---
Match OK   medium pred: SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
---
Match Fail easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(DISTINCT template_id) FROM Documents
---
Match Fail easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(DISTINCT template_id) FROM Documents
---
Match Fail medium pred: SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
---
Match OK   medium pred: SELECT Count(*) FROM Templates JOIN Documents WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
---
Match OK   medium pred: SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID
           medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
---
Match OK   medium pred: SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID
           medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
---
Match OK   extra pred: SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Templates.Template_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Documents.Template_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   easy pred: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'
           easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
---
Match OK   easy pred: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'
           easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
---
Match OK   hard pred: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
           hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
---
Match OK   hard pred: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
           hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
---
Match OK   easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(*) FROM Templates
---
Match OK   easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(*) FROM Templates
---
Match OK   medium pred: SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates
---
Match OK   medium pred: SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates
---
Match OK   easy pred: SELECT DISTINCT Templates.Template_Type_Code FROM Templates
           easy gold: SELECT DISTINCT template_type_code FROM Templates
---
Match Fail easy pred: SELECT DISTINCT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types
           easy gold: SELECT DISTINCT template_type_code FROM Templates
---
Match OK   medium pred: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
---
Match OK   medium pred: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
---
Match OK   easy pred: SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'
           easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
---
Match OK   easy pred: SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'
           easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
---
Match OK   medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 'terminal'
           medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
---
Match Fail medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates GROUP BY Templates.Version_Number HAVING Count(*) > 'terminal'
           medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
---
Match OK   medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
---
Match OK   medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
---
Match OK   hard pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
---
Match OK   easy pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) < 'terminal'
           easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
---
Match OK   easy pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) < 'terminal'
           easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
---
Match Fail medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates ORDER BY Templates.Version_Number Asc LIMIT 1
           medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates
---
Match Fail medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates ORDER BY Templates.Version_Number Asc LIMIT 1
           medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates
---
Match OK   medium pred: SELECT Templates.Template_Type_Code FROM Documents JOIN Templates WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
---
Match OK   medium pred: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
---
Match OK   medium pred: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
---
Match OK   medium pred: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
---
Match OK   medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates JOIN Documents GROUP BY Templates.Template_Type_Code
           medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
---
Match Fail medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
---
Match Fail extra pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
---
Match Fail hard pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates
           hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
---
Match Fail hard pred: SELECT Templates.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates
           hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
---
Match OK   medium pred: SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
           medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types
---
Match OK   medium pred: SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
           medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types
---
Match OK   easy pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'
           easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
---
Match OK   easy pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'
           easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
---
Match OK   easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
---
Match OK   easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
---
Match Fail medium pred: SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates
           medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
---
Match Fail medium pred: SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates
           medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
---
Match OK   medium pred: SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
---
Match OK   medium pred: SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
---
Match OK   easy pred: SELECT Count(*) FROM Paragraphs
           easy gold: SELECT count(*) FROM Paragraphs
---
Match OK   easy pred: SELECT Count(*) FROM Paragraphs
           easy gold: SELECT count(*) FROM Paragraphs
---
Match OK   medium pred: SELECT Count(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
---
Match OK   medium pred: SELECT Count(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
---
Match Fail medium pred: SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal'
           medium gold: select other_details from paragraphs where paragraph_text like 'korea'
---
Match OK   medium pred: SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE 'terminal'
           medium gold: select other_details from paragraphs where paragraph_text like 'korea'
---
Match OK   medium pred: SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
---
Match OK   medium pred: SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
---
Match OK   medium pred: SELECT Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
---
Match OK   medium pred: SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
---
Match Fail medium pred: SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID
           medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
---
Match Fail medium pred: SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc
           medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
---
Match OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID
           medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
---
Match OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID
           medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
---
Match OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
---
Match OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
---
Match OK   extra pred: SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
---
Match OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
---
Match Fail easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
---
Match OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
---
Match OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal'
           hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
---
Match OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal'
           hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
---
Match OK   easy pred: SELECT Count(*) FROM teacher
           easy gold: SELECT count(*) FROM teacher
---
Match OK   easy pred: SELECT Count(*) FROM teacher
           easy gold: SELECT count(*) FROM teacher
---
Match OK   easy pred: SELECT teacher.Name FROM teacher ORDER BY teacher.Age Asc
           easy gold: SELECT Name FROM teacher ORDER BY Age ASC
---
Match OK   easy pred: SELECT teacher.Name FROM teacher ORDER BY teacher.Age Asc
           easy gold: SELECT Name FROM teacher ORDER BY Age ASC
---
Match OK   medium pred: SELECT teacher.Age, teacher.Hometown FROM teacher
           medium gold: SELECT Age ,  Hometown FROM teacher
---
Match OK   medium pred: SELECT teacher.Age, teacher.Hometown FROM teacher
           medium gold: SELECT Age ,  Hometown FROM teacher
---
Match OK   easy pred: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'
           easy gold: select name from teacher where hometown != "little lever urban district"
---
Match OK   easy pred: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'
           easy gold: select name from teacher where hometown != "little lever urban district"
---
Match OK   medium pred: SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'
           medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
---
Match OK   medium pred: SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'
           medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
---
Match OK   medium pred: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age Asc LIMIT 1
           medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
---
Match Fail medium pred: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age Desc LIMIT 1
           medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
---
Match OK   medium pred: SELECT teacher.Hometown, Count(*) FROM teacher GROUP BY teacher.Hometown
           medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
---
Match OK   medium pred: SELECT teacher.Hometown, Count(*) FROM teacher GROUP BY teacher.Hometown
           medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
---
Match OK   hard pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   easy pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING Count(*) >= 'terminal'
           easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
---
Match OK   easy pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING Count(*) >= 'terminal'
           easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
---
Match OK   medium pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN course JOIN teacher
           medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
---
Match OK   medium pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN course JOIN teacher
           medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
---
Match OK   hard pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN course JOIN teacher ORDER BY teacher.Name Asc
           hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
---
Match OK   hard pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN course JOIN teacher ORDER BY teacher.Name Asc
           hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
---
Match OK   hard pred: SELECT teacher.Name FROM course_arrange JOIN teacher JOIN course WHERE course.Course = 'terminal'
           hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
---
Match OK   hard pred: SELECT teacher.Name FROM course_arrange JOIN teacher JOIN course WHERE course.Course = 'terminal'
           hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
---
Match OK   medium pred: SELECT teacher.Name, Count(*) FROM course_arrange JOIN teacher GROUP BY teacher.Name
           medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
---
Match OK   medium pred: SELECT teacher.Name, Count(*) FROM course_arrange JOIN teacher GROUP BY teacher.Name
           medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
---
Match Fail medium pred: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
---
Match Fail medium pred: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
---
Match OK   hard pred: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)
           hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
---
Match OK   hard pred: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)
           hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
---
Match OK   easy pred: SELECT Count(*) FROM visitor WHERE visitor.Age < 'terminal'
           easy gold: SELECT count(*) FROM visitor WHERE age  <  30
---
Match OK   medium pred: SELECT visitor.Name FROM visitor WHERE visitor.Level_of_membership > 'terminal' ORDER BY visitor.Level_of_membership Desc
           medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
---
Match Fail easy pred: SELECT Avg(visitor.Age) FROM visitor WHERE visitor.Level_of_membership != 'terminal'
           easy gold: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
---
Match Fail medium pred: SELECT visitor.Name FROM visitor WHERE visitor.Level_of_membership > 'terminal' ORDER BY visitor.Age Asc
           medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
---
Match OK   medium pred: SELECT museum.Museum_ID, museum.Name FROM museum ORDER BY museum.Num_of_Staff Desc LIMIT 1
           medium gold: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
---
Match OK   easy pred: SELECT Avg(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year < 'terminal'
           easy gold: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
---
Match OK   medium pred: SELECT museum.Open_Year, museum.Num_of_Staff FROM museum WHERE museum.Name = 'terminal'
           medium gold: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
---
Match OK   hard pred: SELECT museum.Name FROM museum WHERE museum.Num_of_Staff > (SELECT Min(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year > 'terminal')
           hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
---
Match OK   medium pred: SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID HAVING Count(*) > 'terminal'
           medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1
---
Match OK   extra pred: SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit GROUP BY visitor.ID ORDER BY Sum(visit.Total_spent) Desc LIMIT 1
           extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
---
Match OK   extra pred: SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit GROUP BY visit.Museum_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT museum.Name FROM museum WHERE museum.Museum_ID NOT IN (SELECT visit.Museum_ID FROM visit)
           hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
---
Match Fail hard pred: SELECT visitor.Name, visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID HAVING Count(*) > 'terminal'
           hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
---
Match OK   medium pred: SELECT Avg(visit.Num_of_Ticket), Max(visit.Num_of_Ticket) FROM visit
           medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
---
Match OK   medium pred: SELECT Sum(visit.Total_spent) FROM visit JOIN visitor WHERE visitor.Level_of_membership = 'terminal'
           medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
---
Match OK   extra pred: SELECT visitor.Name FROM visitor JOIN visit JOIN museum WHERE museum.Open_Year < 'terminal' INTERSECT SELECT visitor.Name FROM visitor JOIN visit JOIN museum WHERE museum.Open_Year > 'terminal'
           extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
---
Match Fail extra pred: SELECT Count(*) FROM visitor WHERE visit.Museum_ID NOT IN (SELECT museum.Museum_ID FROM museum WHERE museum.Open_Year > 'terminal')
           extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
---
Match OK   medium pred: SELECT Count(*) FROM museum WHERE museum.Open_Year > 'terminal' OR museum.Open_Year < 'terminal'
           medium gold: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
---
Match OK   easy pred: SELECT Count(*) FROM players
           easy gold: SELECT count(*) FROM players
---
Match OK   easy pred: SELECT Count(*) FROM players
           easy gold: SELECT count(*) FROM players
---
Match OK   easy pred: SELECT Count(*) FROM matches
           easy gold: SELECT count(*) FROM matches
---
Match OK   easy pred: SELECT Count(*) FROM matches
           easy gold: SELECT count(*) FROM matches
---
Match OK   medium pred: SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal'
           medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
---
Match OK   medium pred: SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal'
           medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
---
Match OK   medium pred: SELECT Avg(matches.loser_age), Avg(matches.winner_age) FROM matches
           medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
---
Match OK   medium pred: SELECT Avg(matches.loser_age), Avg(matches.winner_age) FROM matches
           medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
---
Match Fail easy pred: SELECT Avg(rankings.ranking) FROM rankings
           easy gold: SELECT avg(winner_rank) FROM matches
---
Match Fail easy pred: SELECT Avg(rankings.ranking) FROM rankings
           easy gold: SELECT avg(winner_rank) FROM matches
---
Match Fail easy pred: SELECT Max(matches.loser_rank) FROM matches
           easy gold: SELECT min(loser_rank) FROM matches
---
Match Fail easy pred: SELECT rankings.ranking FROM matches JOIN rankings ORDER BY rankings.ranking Asc LIMIT 1
           easy gold: SELECT min(loser_rank) FROM matches
---
Match OK   easy pred: SELECT Count(DISTINCT players.country_code) FROM players
           easy gold: SELECT count(DISTINCT country_code) FROM players
---
Match OK   easy pred: SELECT Count(DISTINCT players.country_code) FROM players
           easy gold: SELECT count(DISTINCT country_code) FROM players
---
Match OK   easy pred: SELECT Count(DISTINCT matches.loser_name) FROM matches
           easy gold: SELECT count(DISTINCT loser_name) FROM matches
---
Match OK   easy pred: SELECT Count(DISTINCT matches.loser_name) FROM matches
           easy gold: SELECT count(DISTINCT loser_name) FROM matches
---
Match OK   easy pred: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING Count(*) > 'terminal'
           easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
---
Match OK   easy pred: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING Count(*) > 'terminal'
           easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
---
Match OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.year = 'terminal' INTERSECT SELECT matches.winner_name FROM matches WHERE matches.year = 'terminal'
           hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
---
Match Fail hard pred: SELECT players.first_name FROM players JOIN matches WHERE matches.year = 'terminal' INTERSECT SELECT players.first_name FROM players JOIN matches WHERE matches.year = 'terminal'
           hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
---
Match OK   medium pred: SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
           medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
---
Match OK   medium pred: SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
           medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
---
Match OK   extra pred: SELECT players.country_code, players.first_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal' INTERSECT SELECT players.country_code, players.first_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal'
           extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
---
Match OK   extra pred: SELECT players.first_name, players.country_code FROM players JOIN matches WHERE matches.tourney_name = 'terminal' INTERSECT SELECT players.first_name, players.country_code FROM players JOIN matches WHERE matches.tourney_name = 'terminal'
           extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
---
Match Fail medium pred: SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Desc LIMIT 1
           medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
---
Match Fail medium pred: SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Desc LIMIT 1
           medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
---
Match OK   medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date
---
Match OK   medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date
---
Match Fail medium pred: SELECT players.first_name, players.last_name FROM players WHERE players.first_name = 'terminal' ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
---
Match Fail medium pred: SELECT players.first_name, players.last_name FROM players WHERE players.first_name = 'terminal' ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
---
Match Fail hard pred: SELECT players.first_name, players.country_code FROM players JOIN matches GROUP BY players.first_name ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
---
Match Fail hard pred: SELECT players.first_name, players.country_code FROM players JOIN matches JOIN rankings GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
---
Match OK   hard pred: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Match Fail hard pred: SELECT players.first_name, rankings.ranking_points FROM rankings JOIN players GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
---
Match Fail hard pred: SELECT matches.winner_name, matches.winner_rank_points FROM players JOIN matches GROUP BY matches.winner_name ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
---
Match Fail hard pred: SELECT matches.winner_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal' ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
---
Match Fail hard pred: SELECT matches.winner_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal' ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
---
Match OK   medium pred: SELECT matches.loser_name, matches.winner_name FROM matches ORDER BY matches.minutes Desc LIMIT 1
           medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
---
Match OK   medium pred: SELECT matches.winner_name, matches.loser_name FROM matches ORDER BY matches.minutes Desc LIMIT 1
           medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
---
Match Fail medium pred: SELECT Avg(rankings.ranking), players.first_name FROM players JOIN rankings GROUP BY rankings.player_id
           medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Match Fail medium pred: SELECT players.first_name, Avg(rankings.ranking_points) FROM players JOIN rankings GROUP BY rankings.player_id
           medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Match Fail medium pred: SELECT players.first_name, rankings.ranking_points FROM rankings JOIN players GROUP BY rankings.player_id
           medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Match Fail medium pred: SELECT players.first_name, Sum(rankings.ranking_points) FROM rankings JOIN players GROUP BY rankings.player_id
           medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Match OK   medium pred: SELECT Count(*), players.country_code FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code
---
Match OK   medium pred: SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code
---
Match OK   hard pred: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
---
Match OK   easy pred: SELECT players.country_code FROM players GROUP BY players.country_code HAVING Count(*) > 'terminal'
           easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
---
Match OK   easy pred: SELECT players.country_code FROM players GROUP BY players.country_code HAVING Count(*) > 'terminal'
           easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
---
Match OK   medium pred: SELECT Sum(rankings.tours), rankings.ranking_date FROM rankings GROUP BY rankings.ranking_date
           medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
---
Match OK   medium pred: SELECT Sum(rankings.tours), rankings.ranking_date FROM rankings GROUP BY rankings.ranking_date
           medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
---
Match OK   medium pred: SELECT matches.year, Count(*) FROM matches GROUP BY matches.year
           medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
---
Match OK   medium pred: SELECT matches.year, Count(*) FROM matches GROUP BY matches.year
           medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
---
Match OK   medium pred: SELECT matches.winner_name, matches.winner_rank FROM matches ORDER BY matches.winner_age Asc LIMIT 1
           medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
---
Match OK   medium pred: SELECT matches.winner_name, matches.winner_rank FROM matches ORDER BY matches.winner_age Asc LIMIT 1
           medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
---
Match Fail medium pred: SELECT Count(*) FROM matches WHERE matches.tourney_name = 'terminal' AND matches.tourney_name = 'terminal'
           medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
---
Match Fail medium pred: SELECT Count(*) FROM players JOIN matches WHERE players.first_name = 'terminal' AND matches.tourney_name = 'terminal'
           medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
---
Match OK   hard pred: SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN matches ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
---
Match OK   hard pred: SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN matches ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
---
Match OK   medium pred: SELECT Count(*), players.hand FROM players GROUP BY players.hand
           medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand
---
Match OK   medium pred: SELECT Count(*), players.hand FROM players GROUP BY players.hand
           medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand
---
Match Fail easy pred: SELECT Count(*) FROM battle JOIN ship WHERE battle.result = 'terminal'
           easy gold: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
---
Match OK   medium pred: SELECT ship.name, ship.tonnage FROM ship ORDER BY ship.name Desc
           medium gold: SELECT name ,  tonnage FROM ship ORDER BY name DESC
---
Match Fail medium pred: SELECT battle.name, battle.date, battle.result FROM battle
           medium gold: SELECT name ,  date FROM battle
---
Match Fail medium pred: SELECT Max(death.killed), Min(death.killed), death.id FROM death GROUP BY death.id
           medium gold: SELECT max(killed) ,  min(killed) FROM death
---
Match Fail easy pred: SELECT ship.name, Avg(death.injured) FROM death JOIN ship GROUP BY ship.name
           easy gold: SELECT avg(injured) FROM death
---
Match OK   medium pred: SELECT death.killed, death.injured FROM death JOIN ship WHERE ship.tonnage = 'terminal'
           medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
---
Match OK   medium pred: SELECT battle.name, battle.result FROM battle WHERE battle.bulgarian_commander != 'terminal'
           medium gold: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
---
Match OK   medium pred: SELECT DISTINCT battle.id, battle.name FROM battle JOIN ship WHERE ship.ship_type = 'terminal'
           medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
---
Match OK   hard pred: SELECT battle.id, battle.name FROM death JOIN ship JOIN battle GROUP BY battle.id HAVING Sum(death.killed) > 'terminal'
           hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
---
Match Fail extra pred: SELECT ship.id, ship.name FROM death JOIN ship ORDER BY death.injured Desc LIMIT 1
           extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
---
Match Fail medium pred: SELECT DISTINCT battle.bulgarian_commander FROM battle WHERE battle.bulgarian_commander = 'terminal' AND battle.latin_commander = 'terminal'
           medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
---
Match OK   easy pred: SELECT Count(DISTINCT battle.result) FROM battle
           easy gold: SELECT count(DISTINCT RESULT) FROM battle
---
Match OK   extra pred: SELECT Count(*) FROM battle WHERE battle.id NOT IN (SELECT ship.lost_in_battle FROM ship WHERE ship.tonnage = 'terminal')
           extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );
---
Match OK   extra pred: SELECT battle.name, battle.date FROM battle JOIN ship WHERE ship.name = 'terminal' INTERSECT SELECT battle.name, battle.date FROM battle JOIN ship WHERE ship.name = 'terminal'
           extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
---
Match Fail extra pred: SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle WHERE battle.id NOT IN (SELECT ship.lost_in_battle FROM ship WHERE ship.name = 'terminal')
           extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
---
Match OK   medium pred: SELECT death.note FROM death WHERE death.note LIKE 'terminal'
           medium gold: SELECT note FROM death WHERE note LIKE '%East%'
---
Match Fail medium pred: SELECT Addresses.line_1 FROM Addresses UNION SELECT Addresses.line_1 FROM Addresses
           medium gold: SELECT line_1 ,  line_2 FROM addresses
---
Match OK   medium pred: SELECT Addresses.line_1, Addresses.line_2 FROM Addresses
           medium gold: SELECT line_1 ,  line_2 FROM addresses
---
Match OK   easy pred: SELECT Count(*) FROM Courses
           easy gold: SELECT count(*) FROM Courses
---
Match OK   easy pred: SELECT Count(*) FROM Courses
           easy gold: SELECT count(*) FROM Courses
---
Match OK   easy pred: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'
           easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'
---
Match OK   easy pred: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'
           easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'
---
Match OK   easy pred: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'
           easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
---
Match OK   easy pred: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'
           easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
---
Match OK   extra pred: SELECT Departments.department_name, Departments.department_id FROM Departments JOIN Degree_Programs GROUP BY Departments.department_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT Departments.department_name, Departments.department_id FROM Departments JOIN Degree_Programs GROUP BY Degree_Programs.department_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1
---
Match Fail easy pred: SELECT Count(*) FROM Departments JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = 'terminal'
           easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs
---
Match Fail easy pred: SELECT Count(DISTINCT Departments.department_name) FROM Departments
           easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs
---
Match OK   easy pred: SELECT Count(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
---
Match Fail easy pred: SELECT Count(*) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
---
Match Fail medium pred: SELECT Count(*) FROM Departments JOIN Courses WHERE Departments.department_name = 'terminal'
           medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
---
Match Fail medium pred: SELECT Count(*) FROM Departments WHERE Departments.department_name = 'terminal'
           medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
---
Match OK   medium pred: SELECT Sections.section_name, Sections.section_description FROM Sections
           medium gold: SELECT section_name ,  section_description FROM Sections
---
Match OK   medium pred: SELECT Sections.section_name, Sections.section_description FROM Sections
           medium gold: SELECT section_name ,  section_description FROM Sections
---
Match OK   medium pred: SELECT Courses.course_name, Courses.course_id FROM Courses JOIN Sections GROUP BY Courses.course_id HAVING Count(*) <= 'terminal'
           medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
---
Match Fail medium pred: SELECT Courses.course_name, Courses.course_id FROM Courses JOIN Sections GROUP BY Courses.course_id HAVING Count(*) < 'terminal'
           medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
---
Match OK   easy pred: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Desc
           easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC
---
Match OK   easy pred: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Desc
           easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC
---
Match OK   extra pred: SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Semesters.semester_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Semesters.semester_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   medium pred: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'
           medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
---
Match OK   medium pred: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'
           medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
---
Match Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.student_id HAVING Count(*) = 'terminal'
           medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
---
Match Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name, Student_Enrolment.student_id FROM Student_Enrolment JOIN Students JOIN Semesters WHERE Semesters.semester_name = 'terminal'
           medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
---
Match Fail hard pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Courses JOIN Students JOIN Student_Enrolment_Courses WHERE Courses.course_name = 'terminal'
           hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
---
Match Fail hard pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Courses JOIN Student_Enrolment JOIN Students WHERE Courses.course_name = 'terminal'
           hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
---
Match Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment JOIN Student_Enrolment_Courses GROUP BY Student_Enrolment.degree_program_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Courses.course_id, Courses.course_description FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Courses.course_id, Courses.course_description FROM Courses JOIN Student_Enrolment_Courses GROUP BY Student_Enrolment_Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Student_Enrolment.student_id, Students.middle_name, Count(*), Student_Enrolment.student_id FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Students.first_name, Students.middle_name, Count(*), Student_Enrolment.student_id FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Match Fail hard pred: SELECT Semesters.semester_name FROM Semesters EXCEPT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment
           hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
---
Match Fail hard pred: SELECT Semesters.semester_name FROM Semesters EXCEPT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment
           hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
---
Match OK   easy pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses
           easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
---
Match OK   easy pred: SELECT DISTINCT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses
           easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
---
Match Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Student_Enrolment_Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Students.last_name FROM Students WHERE Addresses.state_province_county = 'terminal' EXCEPT SELECT Students.last_name FROM Addresses JOIN Student_Enrolment JOIN Courses WHERE Courses.course_name = 'terminal'
           extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
---
Match Fail extra pred: SELECT Students.last_name FROM Students WHERE Addresses.state_province_county = 'terminal' EXCEPT SELECT Students.last_name FROM Addresses JOIN Student_Enrolment JOIN Courses WHERE Courses.course_name = 'terminal'
           extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
---
Match OK   medium pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcripts.transcript_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
---
Match OK   medium pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcripts.transcript_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
---
Match OK   medium pred: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'
           medium gold: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
---
Match OK   medium pred: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'
           medium gold: select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
---
Match OK   medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_first_registered Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
---
Match OK   medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_first_registered Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
---
Match Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.last_name Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
---
Match Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.last_name Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
---
Match Fail easy pred: SELECT Students.first_name FROM Addresses JOIN Students GROUP BY Addresses.address_id HAVING Count(*) >= 'terminal'
           easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
---
Match OK   easy pred: SELECT Students.first_name FROM Students WHERE Students.permanent_address_id != 'terminal'
           easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
---
Match Fail extra pred: SELECT Addresses.address_id, Addresses.line_3 FROM Addresses JOIN Students GROUP BY Addresses.address_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT Addresses.address_id, Addresses.line_1, Addresses.line_2 FROM Addresses JOIN Students GROUP BY Addresses.address_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   easy pred: SELECT Avg(Transcripts.transcript_date) FROM Transcripts
           easy gold: SELECT avg(transcript_date) FROM Transcripts
---
Match OK   easy pred: SELECT Avg(Transcripts.transcript_date) FROM Transcripts
           easy gold: SELECT avg(transcript_date) FROM Transcripts
---
Match OK   medium pred: SELECT Transcripts.transcript_date, Transcripts.other_details FROM Transcripts ORDER BY Transcripts.transcript_date Asc LIMIT 1
           medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
---
Match Fail medium pred: SELECT Transcripts.transcript_date, Transcripts.other_details FROM Transcripts
           medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
---
Match OK   easy pred: SELECT Count(*) FROM Transcripts
           easy gold: SELECT count(*) FROM Transcripts
---
Match OK   easy pred: SELECT Count(*) FROM Transcripts
           easy gold: SELECT count(*) FROM Transcripts
---
Match OK   medium pred: SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date Desc LIMIT 1
           medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
---
Match Fail medium pred: SELECT Max(Transcripts.transcript_date) FROM Transcripts
           medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
---
Match Fail hard pred: SELECT Transcripts.transcript_id, Count(*) FROM Transcripts JOIN Transcript_Contents GROUP BY Transcripts.transcript_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
---
Match Fail hard pred: SELECT Count(*), Student_Enrolment_Courses.student_enrolment_id FROM Courses JOIN Student_Enrolment_Courses JOIN Transcripts GROUP BY Transcripts.transcript_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
---
Match OK   extra pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
---
Match Fail extra pred: SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment INTERSECT SELECT Semesters.semester_name FROM Student_Enrolment JOIN Semesters WHERE Semesters.semester_name = 'terminal'
           extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
---
Match Fail extra pred: SELECT Student_Enrolment.semester_id FROM Student_Enrolment INTERSECT SELECT Student_Enrolment.semester_id FROM Student_Enrolment JOIN Semesters WHERE Semesters.semester_name = 'terminal'
           extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
---
Match OK   easy pred: SELECT Count(DISTINCT Students.current_address_id) FROM Students
           easy gold: SELECT count(DISTINCT current_address_id) FROM Students
---
Match Fail easy pred: SELECT DISTINCT Students.email_address FROM Students
           easy gold: SELECT count(DISTINCT current_address_id) FROM Students
---
Match OK   easy pred: SELECT Students.other_student_details FROM Students ORDER BY Students.other_student_details Desc
           easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
---
Match OK   easy pred: SELECT Students.other_student_details FROM Students ORDER BY Students.other_student_details Desc
           easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
---
Match OK   easy pred: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'terminal'
           easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'
---
Match OK   easy pred: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'terminal'
           easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'
---
Match OK   hard pred: SELECT Students.first_name FROM Addresses JOIN Students WHERE Addresses.country = 'terminal' OR Students.cell_mobile_number = 'terminal'
           hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
---
Match OK   hard pred: SELECT Students.first_name FROM Addresses JOIN Students WHERE Addresses.country = 'terminal' OR Students.cell_mobile_number = 'terminal'
           hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
---
Match OK   easy pred: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc
           easy gold: SELECT Title FROM Cartoon ORDER BY title
---
Match OK   easy pred: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc
           easy gold: SELECT Title FROM Cartoon ORDER BY title
---
Match OK   easy pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
---
Match OK   easy pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
---
Match OK   easy pred: SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'
           easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
---
Match OK   easy pred: SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'
           easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
---
Match OK   medium pred: SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date Asc
           medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
---
Match OK   medium pred: SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date Asc
           medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
---
Match OK   medium pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'
           medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
---
Match OK   medium pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'
           medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
---
Match OK   hard pred: SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
---
Match OK   hard pred: SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
---
Match Fail medium pred: SELECT TV_Channel.series_name, Count(DISTINCT TV_Channel.Content) FROM TV_Channel GROUP BY TV_Channel.series_name
           medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
---
Match Fail medium pred: SELECT Count(DISTINCT TV_Channel.Content), TV_Channel.Content FROM TV_Channel
           medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
---
Match OK   easy pred: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
---
Match OK   easy pred: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
---
Match OK   easy pred: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
---
Match OK   easy pred: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
---
Match OK   easy pred: SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'
           easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
---
Match OK   easy pred: SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'
           easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
---
Match OK   hard pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
---
Match OK   hard pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
---
Match OK   medium pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language
           medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
---
Match OK   medium pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language
           medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
---
Match OK   medium pred: SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel WHERE Cartoon.Title = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
---
Match OK   medium pred: SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel WHERE Cartoon.Title = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
---
Match OK   medium pred: SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Match OK   medium pred: SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Match OK   easy pred: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Asc
           easy gold: SELECT Episode FROM TV_series ORDER BY rating
---
Match OK   easy pred: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Asc
           easy gold: SELECT Episode FROM TV_series ORDER BY rating
---
Match OK   medium pred: SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating Desc LIMIT 1
           medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
---
Match OK   medium pred: SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating Desc LIMIT 1
           medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
---
Match Fail medium pred: SELECT Min(TV_series.Share), Max(TV_series.Viewers_m) FROM TV_series
           medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;
---
Match OK   medium pred: SELECT Max(TV_series.Share), Min(TV_series.Share) FROM TV_series
           medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;
---
Match OK   easy pred: SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Match OK   easy pred: SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Match OK   easy pred: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Match OK   easy pred: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Match OK   medium pred: SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel WHERE TV_series.Episode = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
---
Match OK   medium pred: SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel WHERE TV_series.Episode = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
---
Match OK   medium pred: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Match OK   medium pred: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Match OK   medium pred: SELECT Cartoon.Directed_by, Count(*) FROM Cartoon GROUP BY Cartoon.Directed_by
           medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
---
Match OK   medium pred: SELECT Cartoon.Directed_by, Count(*) FROM Cartoon GROUP BY Cartoon.Directed_by
           medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
---
Match OK   medium pred: SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date Desc LIMIT 1
           medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1
---
Match OK   medium pred: SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date Desc LIMIT 1
           medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1
---
Match OK   medium pred: SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'terminal'
           medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
---
Match OK   medium pred: SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'terminal'
           medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
---
Match OK   medium pred: SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Match OK   medium pred: SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Match OK   hard pred: SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Match OK   hard pred: SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Match OK   extra pred: SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal'
           extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
---
Match OK   extra pred: SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal'
           extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
---
Match OK   medium pred: SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != 'terminal'
           medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
---
Match OK   medium pred: SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != 'terminal'
           medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
---
Match Fail easy pred: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING Count(*) > 'terminal'
           easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
---
Match Fail easy pred: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING Count(*) > 'terminal'
           easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
---
Match Fail hard pred: SELECT Cartoon.id FROM Cartoon EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
---
Match Fail hard pred: SELECT Cartoon.id FROM Cartoon EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
---
Match Fail hard pred: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
---
Match Fail hard pred: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
---
Match OK   easy pred: SELECT Count(*) FROM poker_player
           easy gold: SELECT count(*) FROM poker_player
---
Match OK   easy pred: SELECT Count(*) FROM poker_player
           easy gold: SELECT count(*) FROM poker_player
---
Match OK   easy pred: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings Desc
           easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
---
Match Fail easy pred: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Money_Rank Desc
           easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
---
Match OK   medium pred: SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player
           medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
---
Match OK   medium pred: SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player
           medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
---
Match OK   easy pred: SELECT Avg(poker_player.Earnings) FROM poker_player
           easy gold: SELECT avg(Earnings) FROM poker_player
---
Match OK   easy pred: SELECT Avg(poker_player.Earnings) FROM poker_player
           easy gold: SELECT avg(Earnings) FROM poker_player
---
Match OK   medium pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1
           medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
---
Match OK   medium pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1
           medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
---
Match OK   easy pred: SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'
           easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
---
Match OK   easy pred: SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'
           easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
---
Match OK   easy pred: SELECT people.Name FROM poker_player JOIN people
           easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
---
Match OK   easy pred: SELECT people.Name FROM poker_player JOIN people
           easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
---
Match OK   medium pred: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
---
Match OK   medium pred: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
---
Match OK   medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made Asc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
---
Match OK   medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made Asc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
---
Match OK   hard pred: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings Asc LIMIT 1
           hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
---
Match OK   hard pred: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings Asc LIMIT 1
           hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
---
Match OK   hard pred: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height Desc LIMIT 1
           hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
---
Match OK   hard pred: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height Desc LIMIT 1
           hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
---
Match OK   medium pred: SELECT Avg(poker_player.Earnings) FROM poker_player JOIN people WHERE people.Height > 'terminal'
           medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
---
Match OK   medium pred: SELECT Avg(poker_player.Earnings) FROM poker_player JOIN people WHERE people.Height > 'terminal'
           medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
---
Match OK   medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings Desc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
---
Match OK   medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings Desc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
---
Match OK   medium pred: SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality
           medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
---
Match OK   medium pred: SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality
           medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
---
Match OK   hard pred: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   easy pred: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
           easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
---
Match OK   easy pred: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
           easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
---
Match OK   medium pred: SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc
           medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
---
Match OK   medium pred: SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc
           medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
---
Match OK   easy pred: SELECT people.Name FROM people WHERE people.Nationality != 'terminal'
           easy gold: SELECT Name FROM people WHERE Nationality != "Russia"
---
Match OK   easy pred: SELECT people.Name FROM people WHERE people.Nationality != 'terminal'
           easy gold: SELECT Name FROM people WHERE Nationality != "Russia"
---
Match OK   hard pred: SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)
           hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
---
Match OK   hard pred: SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)
           hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
---
Match OK   easy pred: SELECT Count(DISTINCT people.Nationality) FROM people
           easy gold: SELECT count(DISTINCT Nationality) FROM people
---
Match OK   easy pred: SELECT Count(DISTINCT people.Nationality) FROM people
           easy gold: SELECT count(DISTINCT Nationality) FROM people
---
Match Fail easy pred: SELECT Count(DISTINCT AREA_CODE_STATE.state) FROM AREA_CODE_STATE
           easy gold: SELECT count(*) FROM area_code_state
---
Match OK   medium pred: SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS ORDER BY CONTESTANTS.contestant_name Desc
           medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
---
Match OK   medium pred: SELECT VOTES.vote_id, VOTES.phone_number, VOTES.state FROM VOTES
           medium gold: SELECT vote_id ,  phone_number ,  state FROM votes
---
Match OK   medium pred: SELECT Max(AREA_CODE_STATE.area_code), Min(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE
           medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state
---
Match OK   easy pred: SELECT Max(VOTES.created) FROM VOTES WHERE VOTES.state = 'terminal'
           easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'
---
Match OK   easy pred: SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name != 'terminal'
           easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
---
Match OK   medium pred: SELECT DISTINCT VOTES.state, VOTES.created FROM VOTES
           medium gold: SELECT DISTINCT state ,  created FROM votes
---
Match OK   medium pred: SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
---
Match Fail extra pred: SELECT Count(*), CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES GROUP BY VOTES.contestant_number ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
---
Match Fail medium pred: SELECT Count(*) FROM AREA_CODE_STATE JOIN VOTES WHERE AREA_CODE_STATE.state = 'terminal' OR AREA_CODE_STATE.state = 'terminal'
           medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
---
Match OK   extra pred: SELECT Count(*) FROM CONTESTANTS WHERE CONTESTANTS.contestant_number NOT IN (SELECT VOTES.contestant_number FROM VOTES)
           extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
---
Match Fail extra pred: SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES GROUP BY VOTES.state ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
---
Match OK   medium pred: SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM CONTESTANTS JOIN VOTES WHERE CONTESTANTS.contestant_name = 'terminal'
           medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'
---
Match Fail extra pred: SELECT VOTES.created FROM VOTES JOIN AREA_CODE_STATE JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal' INTERSECT SELECT VOTES.created FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal'
           extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
---
Match OK   medium pred: SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name LIKE 'terminal'
           medium gold: select contestant_name from contestants where contestant_name like "%al%"
---
Match OK   easy pred: SELECT country.Name FROM country WHERE country.IndepYear > 'terminal'
           easy gold: SELECT Name FROM country WHERE IndepYear  >  1950
---
Match OK   easy pred: SELECT country.Name FROM country WHERE country.IndepYear > 'terminal'
           easy gold: SELECT Name FROM country WHERE IndepYear  >  1950
---
Match Fail easy pred: SELECT Count(*) FROM country
           easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
---
Match OK   easy pred: SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
---
Match OK   easy pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
---
Match OK   easy pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
---
Match OK   easy pred: SELECT country.Continent FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"
---
Match Fail easy pred: SELECT country.Name FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"
---
Match OK   medium pred: SELECT country.Region FROM country JOIN city WHERE city.Name = 'terminal'
           medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
---
Match OK   medium pred: SELECT country.Region FROM city JOIN country WHERE city.Name = 'terminal'
           medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
---
Match Fail extra pred: SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE country.Name = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
---
Match Fail extra pred: SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE country.Name = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
---
Match Fail medium pred: SELECT country.Population, country.LifeExpectancy FROM country WHERE country.LocalName = 'terminal'
           medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
---
Match Fail medium pred: SELECT country.Population, country.LifeExpectancy FROM country WHERE country.LocalName = 'terminal'
           medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
---
Match OK   medium pred: SELECT country.Region, country.Population FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
---
Match OK   medium pred: SELECT country.Region, country.Population FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
---
Match OK   easy pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
---
Match OK   easy pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
---
Match Fail hard pred: SELECT country.Name FROM country WHERE country.Region = 'terminal' ORDER BY country.LifeExpectancy Asc LIMIT 1
           hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
---
Match Fail hard pred: SELECT country.Name FROM country WHERE country.Region = 'terminal' ORDER BY country.LifeExpectancy Asc LIMIT 1
           hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
---
Match Fail medium pred: SELECT Sum(country.GNP), Max(country.GNP) FROM country WHERE country.Region = 'terminal'
           medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
---
Match Fail medium pred: SELECT country.Population, country.GNP FROM country WHERE country.Region = 'terminal' ORDER BY country.GNP Desc LIMIT 1
           medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
---
Match Fail medium pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.GovernmentForm = 'terminal'
           medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
---
Match Fail medium pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'
           medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
---
Match Fail medium pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' OR country.Continent = 'terminal'
           medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
---
Match Fail medium pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' OR country.Continent = 'terminal'
           medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
---
Match OK   easy pred: SELECT Sum(city.Population) FROM city WHERE city.District = 'terminal'
           easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
---
Match OK   easy pred: SELECT Sum(city.Population) FROM city WHERE city.District = 'terminal'
           easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
---
Match OK   medium pred: SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.GovernmentForm = 'terminal'
           medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
---
Match Fail medium pred: SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.Continent = 'terminal'
           medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
---
Match OK   easy pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage
           easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
---
Match OK   easy pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage
           easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
---
Match Fail easy pred: SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
---
Match Fail easy pred: SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
---
Match Fail medium pred: SELECT Count(*) FROM country JOIN countrylanguage WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
---
Match OK   medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
---
Match Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage WHERE countrylanguage.IsOfficial = 'terminal'
           medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
---
Match Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage WHERE countrylanguage.IsOfficial = 'terminal'
           medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
---
Match Fail extra pred: SELECT country.Name FROM country JOIN countrylanguage GROUP BY countrylanguage.CountryCode ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT country.Name FROM country JOIN countrylanguage GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT country.Continent FROM country JOIN countrylanguage GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT country.Continent FROM country JOIN countrylanguage GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
---
Match Fail easy pred: SELECT Count(*) FROM (SELECT countrylanguage.Language FROM countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
---
Match Fail easy pred: SELECT Count(*) FROM (SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal')
           easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
---
Match OK   extra pred: SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
---
Match OK   extra pred: SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
---
Match Fail extra pred: SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.IsOfficial = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
---
Match Fail extra pred: SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.IsOfficial = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
---
Match OK   medium pred: SELECT Count(DISTINCT country.Continent) FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
---
Match Fail medium pred: SELECT Count(*) FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
---
Match OK   hard pred: SELECT country.Region FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
---
Match OK   hard pred: SELECT country.Region FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
---
Match Fail extra pred: SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' OR countrylanguage.IsOfficial = 'terminal'
           extra gold: select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
---
Match Fail extra pred: SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' OR countrylanguage.IsOfficial = 'terminal'
           extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
---
Match Fail extra pred: SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE country.Region = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
---
Match OK   extra pred: SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE country.Continent = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
---
Match Fail hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language HAVING Count(*) = 'terminal'
           hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
---
Match Fail hard pred: SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE country.GovernmentForm = 'terminal'
           hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
---
Match Fail extra pred: SELECT city.Name FROM countrylanguage JOIN city WHERE countrylanguage.Language = 'terminal' ORDER BY city.Population Desc LIMIT 1
           extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
---
Match Fail extra pred: SELECT city.Name FROM city JOIN country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY city.Population Desc LIMIT 1
           extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
---
Match OK   hard pred: SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'terminal' ORDER BY country.SurfaceArea Desc LIMIT 1
           hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
---
Match Fail hard pred: SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Region = 'terminal' ORDER BY country.SurfaceArea Desc LIMIT 1
           hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
---
Match Fail extra pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
---
Match Fail extra pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
---
Match Fail extra pred: SELECT Sum(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
---
Match Fail extra pred: SELECT Sum(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
---
Match Fail medium pred: SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE country.HeadOfState = 'terminal'
           medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
---
Match Fail medium pred: SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE country.HeadOfState = 'terminal'
           medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
---
Match Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage WHERE country.IndepYear < 'terminal'
           medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
---
Match Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage WHERE country.IndepYear < 'terminal' GROUP BY countrylanguage.Language
           medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
---
Match Fail hard pred: SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country)
           hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
---
Match Fail hard pred: SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country)
           hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
---
Match Fail extra pred: SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Region = 'terminal')
           extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
---
Match Fail extra pred: SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Region = 'terminal')
           extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
---
Match Fail extra pred: SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Region = 'terminal') AND country.Region = 'terminal'
           extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
---
Match Fail extra pred: SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Region = 'terminal') AND country.Continent = 'terminal'
           extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
---
Match Fail hard pred: SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
           hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Match Fail hard pred: SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
           hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Match Fail easy pred: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language < 'terminal'
           easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
---
Match Fail easy pred: SELECT countrylanguage.CountryCode FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
           easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
---
Match Fail hard pred: SELECT country.Code FROM country WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT country.Code FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal'
           hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Match Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Match Fail extra pred: SELECT city.Name FROM city WHERE city.CountryCode IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
---
Match Fail extra pred: SELECT city.Name FROM city WHERE countrylanguage.Language = 'terminal' EXCEPT SELECT city.Name FROM country JOIN city WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
---
Match Fail hard pred: SELECT DISTINCT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' AND countrylanguage.IsOfficial = 'terminal'
           hard gold: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
---
Match Fail hard pred: SELECT DISTINCT city.Name FROM country JOIN city JOIN countrylanguage WHERE country.Region = 'terminal' AND countrylanguage.IsOfficial = 'terminal'
           hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
---
Match OK   medium pred: SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
---
Match Fail medium pred: SELECT country.Name, country.IndepYear, country.Region FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
---
Match OK   medium pred: SELECT country.Population, country.Name, country.HeadOfState FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
---
Match OK   medium pred: SELECT country.Name, country.Population, country.HeadOfState FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
---
Match Fail medium pred: SELECT country.Name, Count(*) FROM country JOIN countrylanguage GROUP BY countrylanguage.CountryCode HAVING Count(*) >= 'terminal'
           medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
---
Match Fail medium pred: SELECT country.Name, Count(*) FROM country JOIN countrylanguage GROUP BY countrylanguage.Language HAVING Count(*) > 'terminal'
           medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
---
Match Fail extra pred: SELECT Count(*), city.District FROM city WHERE city.Population > (SELECT Avg(city.Population) FROM city)
           extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
---
Match Fail extra pred: SELECT Count(*), city.District FROM city WHERE city.Population > (SELECT Avg(city.Population) FROM city)
           extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
---
Match OK   medium pred: SELECT country.GovernmentForm, Sum(country.Population) FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) > 'terminal'
           medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
---
Match Fail medium pred: SELECT Sum(country.Population), country.GovernmentForm FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) >= 'terminal'
           medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
---
Match Fail medium pred: SELECT Avg(country.LifeExpectancy), Sum(country.Population) FROM country WHERE country.LifeExpectancy < 'terminal'
           medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
---
Match Fail medium pred: SELECT country.Continent, country.Population, country.Name FROM country WHERE country.LifeExpectancy < 'terminal'
           medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
---
Match OK   medium pred: SELECT country.Name, country.SurfaceArea FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
---
Match Fail medium pred: SELECT country.Name, country.SurfaceArea FROM country ORDER BY country.Continent Desc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
---
Match OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
---
Match OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
---
Match OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
---
Match OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
---
Match OK   easy pred: SELECT Count(*) FROM country WHERE country.Continent = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"
---
Match Fail easy pred: SELECT Count(*) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"
---
Match Fail medium pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population > 'terminal'
           medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
---
Match Fail medium pred: SELECT country.Name FROM country WHERE country.Region = 'terminal' AND country.Population > 'terminal'
           medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
---
Match Fail hard pred: SELECT Sum(country.Population), Avg(country.SurfaceArea) FROM country WHERE country.SurfaceArea > (SELECT Avg(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal')
           hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
---
Match Fail hard pred: SELECT Sum(country.Population), Avg(country.SurfaceArea) FROM country WHERE country.SurfaceArea > (SELECT Avg(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal')
           hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
---
Match OK   easy pred: SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
---
Match OK   easy pred: SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'
           easy gold: select name from city where population between 160000 and 900000
---
Match OK   hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
---
Match Fail medium pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Avg(countrylanguage.Percentage) Desc LIMIT 1
           medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
---
Match Fail medium pred: SELECT country.Code, countrylanguage.Language FROM country JOIN countrylanguage GROUP BY countrylanguage.CountryCode ORDER BY Avg(countrylanguage.Percentage) Desc LIMIT 1
           medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
---
Match Fail extra pred: SELECT Count(*) FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY countrylanguage.Percentage Desc LIMIT 1
           extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Match Fail extra pred: SELECT Count(*) FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Match Fail medium pred: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY countrylanguage.Percentage Desc LIMIT 1
           medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Match Fail medium pred: SELECT countrylanguage.CountryCode FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1
           medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Match OK   easy pred: SELECT Count(*) FROM conductor
           easy gold: SELECT count(*) FROM conductor
---
Match OK   easy pred: SELECT Count(*) FROM conductor
           easy gold: SELECT count(*) FROM conductor
---
Match OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc
           easy gold: SELECT Name FROM conductor ORDER BY Age ASC
---
Match OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc
           easy gold: SELECT Name FROM conductor ORDER BY Age ASC
---
Match OK   easy pred: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'
           easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'
---
Match OK   easy pred: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'
           easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'
---
Match OK   easy pred: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Desc
           easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
---
Match Fail easy pred: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Asc
           easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
---
Match OK   easy pred: SELECT Avg(show.Attendance) FROM show
           easy gold: SELECT avg(Attendance) FROM SHOW
---
Match OK   easy pred: SELECT Avg(show.Attendance) FROM show
           easy gold: SELECT avg(Attendance) FROM SHOW
---
Match OK   medium pred: SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'terminal'
           medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
---
Match OK   medium pred: SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'terminal'
           medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
---
Match OK   easy pred: SELECT Count(DISTINCT conductor.Nationality) FROM conductor
           easy gold: SELECT count(DISTINCT Nationality) FROM conductor
---
Match OK   easy pred: SELECT Count(DISTINCT conductor.Nationality) FROM conductor
           easy gold: SELECT count(DISTINCT Nationality) FROM conductor
---
Match OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc
           easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
---
Match OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc
           easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
---
Match OK   medium pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1
           medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
---
Match OK   medium pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1
           medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
---
Match OK   medium pred: SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra
           medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
---
Match Fail medium pred: SELECT conductor.Name, conductor.Name FROM orchestra JOIN conductor
           medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
---
Match Fail medium pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY conductor.Name HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
---
Match Fail medium pred: SELECT conductor.Name FROM orchestra JOIN conductor GROUP BY conductor.Name HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
---
Match OK   extra pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY conductor.Conductor_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   medium pred: SELECT conductor.Name FROM conductor JOIN orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
---
Match OK   medium pred: SELECT conductor.Name FROM conductor JOIN orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
---
Match OK   medium pred: SELECT orchestra.Record_Company, Count(*) FROM orchestra GROUP BY orchestra.Record_Company
           medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
---
Match OK   medium pred: SELECT orchestra.Record_Company, Count(*) FROM orchestra GROUP BY orchestra.Record_Company
           medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
---
Match OK   medium pred: SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY Count(*) Asc
           medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
---
Match OK   medium pred: SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY Count(*) Asc
           medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
---
Match OK   hard pred: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)
           hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
---
Match Fail hard pred: SELECT orchestra.Orchestra FROM orchestra EXCEPT SELECT orchestra.Orchestra FROM orchestra JOIN performance
           hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
---
Match OK   hard pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
---
Match OK   hard pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
---
Match OK   medium pred: SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'
           medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
---
Match OK   medium pred: SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'
           medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
---
Match Fail medium pred: SELECT orchestra.Year_of_Founded FROM performance JOIN orchestra GROUP BY orchestra.Year_of_Founded HAVING Count(*) > 'terminal'
           medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
---
Match OK   medium pred: SELECT orchestra.Year_of_Founded FROM performance JOIN orchestra GROUP BY performance.Orchestra_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
---
Match OK   easy pred: SELECT Count(*) FROM Highschooler
           easy gold: SELECT count(*) FROM Highschooler
---
Match OK   easy pred: SELECT Count(*) FROM Highschooler
           easy gold: SELECT count(*) FROM Highschooler
---
Match OK   medium pred: SELECT Highschooler.name, Highschooler.grade FROM Highschooler
           medium gold: SELECT name ,  grade FROM Highschooler
---
Match OK   medium pred: SELECT Highschooler.name, Highschooler.grade FROM Highschooler
           medium gold: SELECT name ,  grade FROM Highschooler
---
Match OK   easy pred: SELECT Highschooler.grade FROM Highschooler
           easy gold: SELECT grade FROM Highschooler
---
Match Fail easy pred: SELECT Avg(Highschooler.grade) FROM Highschooler
           easy gold: SELECT grade FROM Highschooler
---
Match OK   easy pred: SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
---
Match Fail easy pred: SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
---
Match OK   easy pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'
           easy gold: SELECT name FROM Highschooler WHERE grade  =  10
---
Match OK   easy pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'
           easy gold: SELECT name FROM Highschooler WHERE grade  =  10
---
Match OK   easy pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
---
Match OK   easy pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
---
Match OK   medium pred: SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'
           medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
---
Match OK   medium pred: SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'
           medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
---
Match OK   medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade
           medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
---
Match OK   medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade
           medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
---
Match Fail hard pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Avg(Highschooler.name) Desc LIMIT 1
           hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
---
Match Fail hard pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Avg(Highschooler.grade) Desc LIMIT 1
           hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
---
Match OK   easy pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
           easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
---
Match OK   easy pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
           easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
---
Match OK   medium pred: SELECT Friend.student_id, Count(*) FROM Friend GROUP BY Friend.student_id
           medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
---
Match Fail medium pred: SELECT Count(*) FROM Friend
           medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
---
Match OK   medium pred: SELECT Highschooler.name, Count(*) FROM Highschooler JOIN Friend GROUP BY Friend.student_id
           medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Match Fail medium pred: SELECT Count(*), Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade = 'terminal' GROUP BY Highschooler.name
           medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Match Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Highschooler.name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Friend ORDER BY Highschooler.grade Desc LIMIT 1
           extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   medium pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Highschooler.ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
---
Match OK   medium pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Highschooler.ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
---
Match Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal'
           hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
---
Match Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal'
           hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
---
Match OK   medium pred: SELECT Count(*) FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Match OK   medium pred: SELECT Count(*) FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Match OK   hard pred: SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend
           hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
---
Match Fail hard pred: SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend WHERE Highschooler.grade = 'terminal'
           hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
---
Match Fail hard pred: SELECT Highschooler.name FROM Highschooler EXCEPT SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade = 'terminal'
           hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
---
Match Fail hard pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
---
Match Fail hard pred: SELECT Highschooler.ID FROM Highschooler INTERSECT SELECT Likes.student_id FROM Likes
           hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
---
Match Fail hard pred: SELECT Friend.student_id FROM Friend INTERSECT SELECT Likes.student_id FROM Likes
           hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
---
Match OK   hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
---
Match Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade = 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade = 'terminal'
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
---
Match OK   medium pred: SELECT Likes.student_id, Count(*) FROM Likes GROUP BY Likes.student_id
           medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
---
Match OK   medium pred: SELECT Likes.student_id, Count(*) FROM Likes GROUP BY Likes.student_id
           medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
---
Match OK   medium pred: SELECT Count(*), Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id
           medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Match Fail medium pred: SELECT Count(*), Highschooler.name FROM Highschooler JOIN Likes GROUP BY Highschooler.name
           medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Match OK   extra pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   medium pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
---
Match OK   medium pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
---
Match Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > 'terminal'
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
---
Match OK   hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > 'terminal' GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
---
Match OK   medium pred: SELECT Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Match OK   medium pred: SELECT Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Match Fail hard pred: SELECT Avg(Highschooler.grade) FROM Highschooler JOIN Friend
           hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Match Fail hard pred: SELECT Avg(Highschooler.grade) FROM Highschooler JOIN Friend
           hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Match Fail extra pred: SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Match Fail extra pred: SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Match OK   hard pred: SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals
           hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
---
Match OK   hard pred: SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals
           hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
---
Match OK   hard pred: SELECT Avg(Dogs.age) FROM Dogs WHERE Dogs.dog_id IN (SELECT Treatments.dog_id FROM Treatments)
           hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
---
Match Fail hard pred: SELECT Avg(Dogs.age) FROM Dogs WHERE Dogs.name IN (SELECT Treatments.dog_id FROM Treatments)
           hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
---
Match Fail extra pred: SELECT Professionals.first_name, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal' UNION SELECT Professionals.first_name, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal'
           extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
---
Match Fail extra pred: SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals JOIN Treatments WHERE Professionals.state = 'terminal' GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'terminal'
           extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
---
Match Fail hard pred: SELECT Dogs.name FROM Dogs EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments WHERE Treatments.cost_of_treatment > 'terminal'
           hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
---
Match Fail hard pred: SELECT Dogs.name FROM Dogs JOIN Treatments GROUP BY Dogs.dog_id HAVING Sum(Treatments.cost_of_treatment) > 'terminal'
           hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
---
Match Fail hard pred: SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Professionals.first_name FROM Professionals JOIN Treatments
           hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
---
Match Fail hard pred: SELECT Professionals.first_name FROM Professionals JOIN Treatments EXCEPT SELECT Professionals.first_name FROM Professionals JOIN Treatments
           hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
---
Match OK   extra pred: SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals JOIN Treatments
           extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
---
Match OK   extra pred: SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals JOIN Treatments
           extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
---
Match OK   extra pred: SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Match Fail medium pred: SELECT Professionals.professional_id, Professionals.first_name, Professionals.first_name FROM Treatments JOIN Professionals GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Match Fail medium pred: SELECT Professionals.professional_id, Professionals.role_code, Professionals.last_name FROM Treatments JOIN Professionals GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Match Fail extra pred: SELECT Breeds.breed_name FROM Dogs JOIN Breeds GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Breeds.breed_name FROM Dogs JOIN Breeds GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Owners.owner_id, Owners.last_name FROM Dogs JOIN Owners GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Match Fail extra pred: SELECT Dogs.owner_id, Owners.last_name FROM Dogs JOIN Owners JOIN Treatments GROUP BY Dogs.owner_id ORDER BY Sum(Treatments.cost_of_treatment) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Match OK   extra pred: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments GROUP BY Treatments.treatment_type_code ORDER BY Sum(Treatments.cost_of_treatment) Asc LIMIT 1
           extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
---
Match OK   extra pred: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments GROUP BY Treatments.treatment_type_code ORDER BY Sum(Treatments.cost_of_treatment) Asc LIMIT 1
           extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
---
Match Fail extra pred: SELECT Owners.owner_id, Sum(Charges.charge_amount) FROM Dogs JOIN Owners JOIN Charges GROUP BY Owners.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
---
Match Fail extra pred: SELECT Owners.owner_id, Sum(Charges.charge_amount) FROM Charges JOIN Owners GROUP BY Owners.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
---
Match OK   medium pred: SELECT Professionals.professional_id, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Professionals.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Match OK   medium pred: SELECT Treatments.professional_id, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Match OK   extra pred: SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments WHERE Treatments.cost_of_treatment < (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments)
           extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
---
Match OK   extra pred: SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments WHERE Treatments.cost_of_treatment < (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments)
           extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
---
Match OK   medium pred: SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals
           medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
---
Match OK   medium pred: SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals
           medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
---
Match OK   medium pred: SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types
           medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
---
Match OK   medium pred: SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types
           medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
---
Match OK   medium pred: SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Owners JOIN Dogs
           medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Match OK   medium pred: SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Owners JOIN Dogs
           medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Match OK   medium pred: SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Match OK   medium pred: SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Match Fail extra pred: SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments GROUP BY Treatments.dog_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
---
Match Fail extra pred: SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments GROUP BY Dogs.dog_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
---
Match OK   medium pred: SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs WHERE Owners.state = 'terminal'
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
---
Match OK   medium pred: SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs WHERE Owners.state = 'terminal'
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
---
Match OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments
           medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
---
Match OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments
           medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
---
Match Fail extra pred: SELECT Owners.last_name FROM Owners JOIN Dogs ORDER BY Dogs.age Desc LIMIT 1
           extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
---
Match Fail extra pred: SELECT Owners.last_name FROM Owners JOIN Dogs ORDER BY Dogs.age Asc LIMIT 1
           extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
---
Match OK   medium pred: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'
           medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
---
Match OK   medium pred: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'
           medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
---
Match OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs
           medium gold: SELECT date_arrived ,  date_departed FROM Dogs
---
Match OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs
           medium gold: SELECT date_arrived ,  date_departed FROM Dogs
---
Match OK   easy pred: SELECT Count(DISTINCT Treatments.dog_id) FROM Treatments
           easy gold: SELECT count(DISTINCT dog_id) FROM Treatments
---
Match OK   easy pred: SELECT Count(DISTINCT Treatments.dog_id) FROM Treatments
           easy gold: SELECT count(DISTINCT dog_id) FROM Treatments
---
Match OK   easy pred: SELECT Count(DISTINCT Treatments.professional_id) FROM Treatments
           easy gold: SELECT count(DISTINCT professional_id) FROM Treatments
---
Match OK   easy pred: SELECT Count(DISTINCT Treatments.professional_id) FROM Treatments
           easy gold: SELECT count(DISTINCT professional_id) FROM Treatments
---
Match Fail medium pred: SELECT Professionals.role_code, Professionals.street, Professionals.state FROM Professionals WHERE Professionals.role_code LIKE 'terminal'
           medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
---
Match Fail medium pred: SELECT Professionals.role_code, Professionals.street, Professionals.city, Professionals.state FROM Professionals WHERE Professionals.role_code LIKE 'terminal'
           medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
---
Match OK   medium pred: SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'
           medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
---
Match OK   medium pred: SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'
           medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
---
Match OK   hard pred: SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)
           hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
---
Match OK   hard pred: SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)
           hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
---
Match OK   medium pred: SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment Desc LIMIT 1
           medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
---
Match OK   medium pred: SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment Desc LIMIT 1
           medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
---
Match OK   extra pred: SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)
           extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
---
Match OK   extra pred: SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)
           extra gold: select count(*) from dogs where dog_id not in ( select dog_id from treatments )
---
Match OK   extra pred: SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)
           extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
---
Match OK   extra pred: SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)
           extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
---
Match OK   extra pred: SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)
           extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
---
Match OK   extra pred: SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)
           extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
---
Match OK   medium pred: SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'terminal'
           medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
---
Match OK   medium pred: SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'terminal'
           medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
---
Match OK   easy pred: SELECT Avg(Dogs.age) FROM Dogs
           easy gold: SELECT avg(age) FROM Dogs
---
Match OK   easy pred: SELECT Avg(Dogs.age) FROM Dogs
           easy gold: SELECT avg(age) FROM Dogs
---
Match OK   easy pred: SELECT Max(Dogs.age) FROM Dogs
           easy gold: SELECT max(age) FROM Dogs
---
Match Fail easy pred: SELECT Dogs.age FROM Dogs ORDER BY Dogs.age Desc LIMIT 1
           easy gold: SELECT max(age) FROM Dogs
---
Match OK   medium pred: SELECT Charges.charge_type, Charges.charge_amount FROM Charges
           medium gold: SELECT charge_type ,  charge_amount FROM Charges
---
Match OK   medium pred: SELECT Charges.charge_type, Charges.charge_amount FROM Charges
           medium gold: SELECT charge_type ,  charge_amount FROM Charges
---
Match Fail easy pred: SELECT Charges.charge_type FROM Charges GROUP BY Charges.charge_type ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           easy gold: SELECT max(charge_amount) FROM Charges
---
Match Fail easy pred: SELECT Charges.charge_amount FROM Charges ORDER BY Charges.charge_amount Desc LIMIT 1
           easy gold: SELECT max(charge_amount) FROM Charges
---
Match OK   medium pred: SELECT Professionals.email_address, Professionals.home_phone, Professionals.cell_number FROM Professionals
           medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals
---
Match OK   medium pred: SELECT Professionals.email_address, Professionals.home_phone, Professionals.cell_number FROM Professionals
           medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals
---
Match Fail medium pred: SELECT Breeds.breed_name FROM Breeds UNION SELECT Sizes.size_code FROM Sizes
           medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs
---
Match Fail medium pred: SELECT DISTINCT Breeds.breed_name, Sizes.size_code FROM Breeds JOIN Dogs JOIN Sizes
           medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs
---
Match OK   medium pred: SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments JOIN Treatment_Types
           medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
---
Match OK   medium pred: SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments JOIN Treatment_Types
           medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
---
Match OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Match OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Match OK   easy pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Asc
           easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
---
Match OK   easy pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Asc
           easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
---
Match OK   medium pred: SELECT singer.Birth_Year, singer.Citizenship FROM singer
           medium gold: SELECT Birth_Year ,  Citizenship FROM singer
---
Match OK   medium pred: SELECT singer.Birth_Year, singer.Citizenship FROM singer
           medium gold: SELECT Birth_Year ,  Citizenship FROM singer
---
Match OK   easy pred: SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
           easy gold: SELECT Name FROM singer WHERE Citizenship != "France"
---
Match OK   easy pred: SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
           easy gold: SELECT Name FROM singer WHERE Citizenship != "France"
---
Match OK   medium pred: SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'
           medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
---
Match OK   medium pred: SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'
           medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
---
Match OK   medium pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Desc LIMIT 1
           medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
---
Match OK   medium pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Desc LIMIT 1
           medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
---
Match OK   medium pred: SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
---
Match OK   medium pred: SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
---
Match OK   hard pred: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
---
Match OK   hard pred: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1
           hard gold: select citizenship from singer group by citizenship order by count(*) desc limit 1
---
Match OK   medium pred: SELECT singer.Citizenship, Max(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
---
Match Fail medium pred: SELECT Max(singer.Net_Worth_Millions), singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Sum(singer.Net_Worth_Millions) Desc LIMIT 1
           medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
---
Match OK   medium pred: SELECT song.Title, singer.Name FROM singer JOIN song
           medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
---
Match OK   medium pred: SELECT song.Title, singer.Name FROM singer JOIN song
           medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
---
Match OK   medium pred: SELECT DISTINCT singer.Name FROM song JOIN singer WHERE song.Sales > 'terminal'
           medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
---
Match OK   medium pred: SELECT DISTINCT singer.Name FROM song JOIN singer WHERE song.Sales > 'terminal'
           medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
---
Match OK   medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY singer.Name HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
---
Match Fail medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY song.Singer_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
---
Match OK   medium pred: SELECT singer.Name, Sum(song.Sales) FROM singer JOIN song GROUP BY singer.Name
           medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
---
Match OK   medium pred: SELECT Sum(song.Sales), singer.Name FROM singer JOIN song GROUP BY singer.Name
           medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
---
Match OK   hard pred: SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN (SELECT song.Singer_ID FROM song)
           hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
---
Match Fail hard pred: SELECT * FROM song WHERE song.Title != 'terminal'
           hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
---
Match OK   hard pred: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 'terminal'
           hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
---
Match OK   hard pred: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 'terminal'
           hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
---
Match OK   easy pred: SELECT Count(*) FROM Other_Available_Features
           easy gold: SELECT count(*) FROM Other_Available_Features
---
Match OK   medium pred: SELECT Ref_Feature_Types.feature_type_name FROM Other_Available_Features JOIN Ref_Feature_Types WHERE Other_Available_Features.feature_name = 'terminal'
           medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
---
Match Fail medium pred: SELECT Ref_Property_Types.property_type_description FROM Properties JOIN Ref_Property_Types WHERE Properties.property_type_code = 'terminal'
           medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
---
Match Fail hard pred: SELECT Properties.property_name FROM Properties WHERE Properties.room_count > 'terminal' OR Properties.room_count = 'terminal'
           hard gold: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
---
                     easy                 medium               hard                 extra                all                 
count                248                  446                  174                  166                  1034                

====================== EXACT MATCHING ACCURACY =====================
exact match          0.855                0.713                0.540                0.398                0.667               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.923                0.881                0.954                0.849                0.898               
select(no AGG)       0.944                0.897                0.954                0.861                0.912               
where                0.925                0.785                0.644                0.678                0.770               
where(no OP)         0.943                0.806                0.701                0.747                0.807               
group(no Having)     0.783                0.785                0.810                0.714                0.768               
group                0.739                0.754                0.810                0.701                0.746               
order                0.769                0.787                0.907                0.788                0.812               
and/or               1.000                0.977                0.965                0.915                0.971               
IUEN                 0.000                0.000                0.444                0.441                0.422               
keywords             0.929                0.923                0.860                0.789                0.886               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.923                0.881                0.954                0.849                0.898               
select(no AGG)       0.944                0.897                0.954                0.861                0.912               
where                0.907                0.802                0.596                0.628                0.751               
where(no OP)         0.926                0.824                0.649                0.691                0.787               
group(no Having)     0.900                0.767                0.872                0.696                0.771               
group                0.850                0.737                0.872                0.684                0.749               
order                0.909                0.840                0.891                0.848                0.861               
and/or               0.996                0.995                0.994                0.962                0.990               
IUEN                 0.000                0.000                0.476                0.441                0.461               
keywords             0.960                0.926                0.851                0.789                0.891               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.923                0.881                0.954                0.849                0.898               
select(no AGG)       0.944                0.897                0.954                0.861                0.912               
where                0.916                0.793                0.619                0.652                0.761               
where(no OP)         0.935                0.815                0.674                0.718                0.797               
group(no Having)     0.837                0.776                0.840                0.705                0.770               
group                0.791                0.745                0.840                0.692                0.748               
order                0.833                0.813                0.899                0.817                0.836               
and/or               0.998                0.986                0.979                0.938                0.980               
IUEN                 1.000                1.000                0.460                0.441                0.440               
keywords             0.944                0.925                0.855                0.789                0.889               
