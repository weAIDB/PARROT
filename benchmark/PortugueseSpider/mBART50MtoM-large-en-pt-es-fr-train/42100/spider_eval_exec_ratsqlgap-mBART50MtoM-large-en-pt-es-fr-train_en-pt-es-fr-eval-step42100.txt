Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Desc
           medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Desc
           medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
---
Exec  OK   medium pred: SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Country = 'terminal'
           medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
---
Exec  OK   medium pred: SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Country = 'terminal'
           medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
---
Exec  Fail medium pred: SELECT singer.Name, singer.Song_release_year FROM singer ORDER BY singer.Age Asc LIMIT 1
           medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
---
Exec  OK   medium pred: SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age Asc LIMIT 1
           medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
---
Exec  OK   easy pred: SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
           easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20
---
Exec  OK   easy pred: SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
           easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20
---
Exec  OK   medium pred: SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
           medium gold: SELECT country ,  count(*) FROM singer GROUP BY country
---
Exec  OK   medium pred: SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
           medium gold: SELECT country ,  count(*) FROM singer GROUP BY country
---
Exec  OK   hard pred: SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
           hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
---
Exec  OK   hard pred: SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
           hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
---
Exec  OK   medium pred: SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'
           medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
---
Exec  OK   medium pred: SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'
           medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
---
Exec  Fail medium pred: SELECT Max(stadium.Capacity), Avg(stadium.Capacity) FROM stadium
           medium gold: select max(capacity), average from stadium
---
Exec  OK   medium pred: SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium
           medium gold: select avg(capacity) ,  max(capacity) from stadium
---
Exec  OK   medium pred: SELECT stadium.Name, stadium.Capacity FROM stadium GROUP BY stadium.Highest ORDER BY Avg(stadium.Average) Desc LIMIT 1
           medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
---
Exec  OK   medium pred: SELECT stadium.Name, stadium.Capacity FROM stadium GROUP BY stadium.Highest ORDER BY Avg(stadium.Average) Desc LIMIT 1
           medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
---
Exec  OK   medium pred: SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
---
Exec  Fail medium pred: SELECT stadium.Name, Count(*) FROM concert JOIN stadium GROUP BY concert.Stadium_ID
           medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
---
Exec  Fail medium pred: SELECT stadium.Stadium_ID, Count(*) FROM concert JOIN stadium GROUP BY concert.Stadium_ID
           medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Capacity FROM concert JOIN stadium WHERE concert.Year >= 'terminal' GROUP BY concert.Stadium_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Capacity FROM concert JOIN stadium WHERE concert.Year > 'terminal' GROUP BY concert.Stadium_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1
---
Exec  OK   hard pred: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)
           hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
---
Exec  OK   hard pred: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)
           hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
---
Exec  OK   hard pred: SELECT singer.Country FROM singer WHERE singer.Age > 'terminal' INTERSECT SELECT singer.Country FROM singer WHERE singer.Age < 'terminal'
           hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
---
Exec  Fail hard pred: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
---
Exec  Fail hard pred: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
---
Exec  Fail medium pred: SELECT concert.concert_Name, concert.Theme, Count(*) FROM concert JOIN singer_in_concert GROUP BY concert.concert_Name
           medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
---
Exec  Fail medium pred: SELECT concert.concert_Name, concert.Theme, Count(*) FROM concert JOIN singer_in_concert JOIN singer GROUP BY singer_in_concert.concert_ID
           medium gold: select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id
---
Exec  Fail medium pred: SELECT singer.Name, Count(*) FROM singer_in_concert JOIN singer GROUP BY singer_in_concert.Singer_ID
           medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
---
Exec  Fail medium pred: SELECT singer.Name, Count(*) FROM singer_in_concert JOIN singer GROUP BY singer_in_concert.Singer_ID
           medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
---
Exec  Fail hard pred: SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
---
Exec  Fail hard pred: SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE 'terminal'
           medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE 'terminal'
           medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal' INTERSECT SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal'
           extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal' INTERSECT SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal'
           extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
---
Exec  Fail hard pred: SELECT Count(*) FROM concert JOIN stadium WHERE stadium.Capacity = (SELECT Max(stadium.Capacity) FROM stadium)
           hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
---
Exec  Fail hard pred: SELECT Count(*) FROM concert JOIN stadium ORDER BY stadium.Capacity Desc LIMIT 1
           hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
---
Exec  OK   easy pred: SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
           easy gold: SELECT count(*) FROM pets WHERE weight  >  10
---
Exec  OK   easy pred: SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
           easy gold: SELECT count(*) FROM pets WHERE weight  >  10
---
Exec  Fail medium pred: SELECT Pets.weight FROM Pets WHERE Pets.PetType = 'terminal' ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  Fail medium pred: SELECT Pets.weight FROM Pets WHERE Pets.PetType = 'terminal' ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Max(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType
---
Exec  OK   medium pred: SELECT Max(Pets.weight), Max(DISTINCT Pets.PetType) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType
---
Exec  OK   medium pred: SELECT Count(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Age > 'terminal'
           medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
---
Exec  OK   medium pred: SELECT Count(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Age > 'terminal'
           medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
---
Exec  Fail hard pred: SELECT Count(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Sex = 'terminal'
           hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
---
Exec  Fail hard pred: SELECT Count(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Sex = 'terminal'
           hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
---
Exec  OK   easy pred: SELECT Count(DISTINCT Pets.PetType) FROM Pets
           easy gold: SELECT count(DISTINCT pettype) FROM pets
---
Exec  OK   easy pred: SELECT Count(DISTINCT Pets.PetType) FROM Pets
           easy gold: SELECT count(DISTINCT pettype) FROM pets
---
Exec  Fail extra pred: SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'
           extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'
           extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT Student.Fname FROM Has_Pet JOIN Student JOIN Pets WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal')
           extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail extra pred: SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal')
           extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail hard pred: SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
---
Exec  Fail hard pred: SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
---
Exec  Fail extra pred: SELECT Student.Fname, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.PetType = 'terminal' EXCEPT SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.PetType = 'terminal')
           extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail extra pred: SELECT Student.Fname FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal')
           extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  OK   medium pred: SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 'terminal'
           medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
---
Exec  OK   medium pred: SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 'terminal'
           medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
---
Exec  OK   medium pred: SELECT Pets.PetType, Avg(DISTINCT Pets.pet_age), Max(Pets.pet_age) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
---
Exec  OK   medium pred: SELECT Pets.PetType, Avg(Pets.pet_age), Max(Pets.pet_age) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
---
Exec  OK   medium pred: SELECT Avg(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
---
Exec  OK   medium pred: SELECT Pets.PetType, Avg(Pets.weight) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
---
Exec  Fail medium pred: SELECT DISTINCT Student.Fname, Student.Age FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Has_Pet)
           medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
---
Exec  Fail medium pred: SELECT DISTINCT Student.Fname, Student.Age FROM Student JOIN Has_Pet
           medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
---
Exec  Fail medium pred: SELECT Has_Pet.PetID FROM Has_Pet JOIN Student WHERE Student.LName = 'terminal'
           medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
---
Exec  Fail medium pred: SELECT Has_Pet.PetID FROM Has_Pet JOIN Student WHERE Student.LName = 'terminal'
           medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
---
Exec  OK   medium pred: SELECT Count(*), Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID
           medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
---
Exec  Fail medium pred: SELECT Student.Fname, Count(*) FROM Student JOIN Has_Pet GROUP BY Student.StuID
           medium gold: select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid
---
Exec  Fail medium pred: SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet GROUP BY Has_Pet.StuID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
---
Exec  Fail medium pred: SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet GROUP BY Has_Pet.StuID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
---
Exec  Fail hard pred: SELECT Student.LName FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
---
Exec  Fail hard pred: SELECT Student.LName FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
---
Exec  OK   extra pred: SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)
           extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)
---
Exec  OK   extra pred: SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)
           extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)
---
Exec  OK   easy pred: SELECT Count(*) FROM continents
           easy gold: SELECT count(*) FROM CONTINENTS;
---
Exec  OK   easy pred: SELECT Count(*) FROM continents
           easy gold: SELECT count(*) FROM CONTINENTS;
---
Exec  Fail medium pred: SELECT countries.Continent, continents.Continent, Count(*) FROM continents JOIN countries GROUP BY countries.Continent
           medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
---
Exec  Fail medium pred: SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.ContId
           medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
---
Exec  OK   easy pred: SELECT Count(*) FROM countries
           easy gold: SELECT count(*) FROM COUNTRIES;
---
Exec  OK   easy pred: SELECT Count(*) FROM countries
           easy gold: SELECT count(*) FROM COUNTRIES;
---
Exec  Fail medium pred: SELECT car_makers.Maker, car_makers.Id, Count(*) FROM car_makers JOIN model_list GROUP BY car_makers.Maker
           medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
---
Exec  Fail medium pred: SELECT car_makers.FullName, car_makers.FullName, Count(*) FROM car_makers JOIN model_list GROUP BY car_makers.Id
           medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
---
Exec  OK   hard pred: SELECT model_list.Model FROM car_names JOIN cars_data JOIN model_list ORDER BY cars_data.Horsepower Asc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
---
Exec  Fail hard pred: SELECT car_names.Model FROM car_names JOIN cars_data ORDER BY cars_data.Horsepower Asc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
---
Exec  Fail extra pred: SELECT car_names.Model FROM cars_data JOIN model_list WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
           extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
---
Exec  Fail extra pred: SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
           extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
---
Exec  Fail extra pred: SELECT car_makers.Maker FROM car_makers JOIN model_list JOIN cars_data WHERE cars_data.Year = 'terminal'
           extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
---
Exec  Fail extra pred: SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list JOIN cars_data WHERE cars_data.Year = 'terminal'
           extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
---
Exec  Fail extra pred: SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ORDER BY cars_data.Year Asc LIMIT 1
           extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
---
Exec  Fail extra pred: SELECT car_makers.Maker, cars_data.Year FROM cars_data JOIN car_makers ORDER BY cars_data.Year Asc LIMIT 1
           extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
---
Exec  Fail hard pred: SELECT DISTINCT model_list.Model FROM model_list JOIN cars_data WHERE cars_data.Year > 'terminal'
           hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
---
Exec  Fail hard pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_names JOIN cars_data WHERE cars_data.Year > 'terminal'
           hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
---
Exec  Fail hard pred: SELECT continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.Continent
           hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
---
Exec  Fail hard pred: SELECT continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.Continent
           hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY car_makers.Country ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY car_makers.Country ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
---
Exec  Fail medium pred: SELECT Count(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list GROUP BY car_makers.Maker
           medium gold: select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
---
Exec  Fail medium pred: SELECT Count(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list GROUP BY car_makers.Id
           medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
---
Exec  Fail medium pred: SELECT cars_data.Accelerate FROM car_names JOIN cars_data WHERE car_names.Make = 'terminal'
           medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
---
Exec  Fail medium pred: SELECT cars_data.Accelerate FROM car_names JOIN cars_data WHERE car_names.Make = 'terminal'
           medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
---
Exec  Fail medium pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
---
Exec  Fail medium pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
---
Exec  Fail hard pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
---
Exec  Fail hard pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
---
Exec  OK   easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
---
Exec  OK   easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
---
Exec  OK   medium pred: SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal' AND cars_data.Year = 'terminal'
           medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
---
Exec  OK   medium pred: SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal' AND cars_data.Year = 'terminal'
           medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
---
Exec  Fail medium pred: SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list
           medium gold: SELECT Maker ,  Model FROM MODEL_LIST;
---
Exec  Fail medium pred: SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list
           medium gold: SELECT Maker ,  Model FROM MODEL_LIST;
---
Exec  Fail medium pred: SELECT countries.CountryName, car_makers.Id FROM countries JOIN car_makers GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
---
Exec  Fail medium pred: SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers
           medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
---
Exec  OK   medium pred: SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
           medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
---
Exec  Fail medium pred: SELECT Avg(cars_data.Weight), Avg(cars_data.Year), cars_data.Year FROM cars_data GROUP BY cars_data.Year
           medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
---
Exec  Fail extra pred: SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING Count(*) >= 'terminal'
           extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName HAVING Count(*) >= 'terminal'
           extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
---
Exec  Fail extra pred: SELECT Max(cars_data.Horsepower), car_names.Make FROM car_names JOIN cars_data WHERE cars_data.Cylinders = 'terminal'
           extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT Max(cars_data.Horsepower), cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT model_list.Model FROM car_names JOIN cars_data JOIN model_list GROUP BY car_names.Model ORDER BY Sum(cars_data.MPG) Desc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT car_names.Model FROM car_names JOIN cars_data ORDER BY cars_data.MPG Desc LIMIT 1
           hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
---
Exec  OK   easy pred: SELECT Avg(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 'terminal'
           easy gold: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
---
Exec  OK   easy pred: SELECT Avg(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 'terminal'
           easy gold: select avg(horsepower) from cars_data where year  <  1980;
---
Exec  Fail medium pred: SELECT Avg(cars_data.Edispl) FROM car_names JOIN cars_data JOIN model_list WHERE car_names.Model = 'terminal'
           medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
---
Exec  Fail medium pred: SELECT Avg(cars_data.Edispl) FROM cars_data
           medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
---
Exec  OK   medium pred: SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
           medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
---
Exec  OK   medium pred: SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
           medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
---
Exec  OK   hard pred: SELECT car_names.Model FROM car_names GROUP BY car_names.Model ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Year = 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
---
Exec  Fail easy pred: SELECT Count(*) FROM car_names JOIN cars_data WHERE cars_data.Year = 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
---
Exec  Fail medium pred: SELECT Count(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
---
Exec  Fail medium pred: SELECT Count(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
---
Exec  Fail medium pred: SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail medium pred: SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list GROUP BY model_list.Maker HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers JOIN car_names WHERE car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
           extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_names JOIN car_makers WHERE car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
           extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
---
Exec  Fail easy pred: SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
           easy gold: select distinct year from cars_data where weight between 3000 and 4000;
---
Exec  Fail easy pred: SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
           easy gold: select distinct year from cars_data where weight between 3000 and 4000;
---
Exec  OK   medium pred: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1
           medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
---
Exec  OK   medium pred: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1
           medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT cars_data.Cylinders, cars_data.Cylinders FROM car_names JOIN cars_data WHERE car_names.Model = 'terminal' ORDER BY cars_data.Accelerate Asc LIMIT 1
           extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
---
Exec  Fail extra pred: SELECT cars_data.Cylinders, cars_data.Cylinders FROM car_names JOIN cars_data JOIN model_list WHERE model_list.Model = 'terminal' ORDER BY cars_data.Accelerate Asc LIMIT 1
           extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
---
Exec  Fail hard pred: SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data)
           hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
---
Exec  Fail hard pred: SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data)
           hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
---
Exec  OK   medium pred: SELECT Count(*) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 'terminal'
           medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
---
Exec  OK   medium pred: SELECT Count(*) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 'terminal'
           medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
---
Exec  Fail extra pred: SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Cylinders = 'terminal' ORDER BY cars_data.Horsepower Desc LIMIT 1
           extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Cylinders = 'terminal' ORDER BY cars_data.Horsepower Desc LIMIT 1
           extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT car_names.Model, car_names.Make FROM car_names JOIN cars_data WHERE cars_data.Cylinders > 'terminal'
           extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
---
Exec  Fail extra pred: SELECT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data WHERE cars_data.Cylinders != 'terminal'
           extra gold: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
---
Exec  OK   medium pred: SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Year < 'terminal'
           medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
---
Exec  OK   medium pred: SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Year < 'terminal'
           medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
---
Exec  Fail extra pred: SELECT model_list.Model FROM model_list JOIN car_names WHERE cars_data.Weight < 'terminal' EXCEPT SELECT model_list.Model FROM model_list JOIN car_names WHERE car_makers.Maker = 'terminal'
           extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers WHERE cars_data.Weight < 'terminal' EXCEPT SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.Maker = 'terminal'
           extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
---
Exec  OK   hard pred: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
           hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
---
Exec  OK   hard pred: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
           hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
---
Exec  Fail extra pred: SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           extra gold: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
---
Exec  Fail extra pred: SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail extra pred: SELECT car_makers.Country, countries.CountryName FROM countries JOIN car_makers GROUP BY car_makers.Country HAVING Count(*) > 'terminal' UNION SELECT car_makers.Country, countries.CountryName FROM countries JOIN car_makers JOIN car_names WHERE car_names.Model = 'terminal' GROUP BY car_makers.Country HAVING Count(*) > 'terminal'
           extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
---
Exec  Fail extra pred: SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryId HAVING Count(*) > 'terminal' UNION SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers WHERE model_list.Model = 'terminal'
           extra gold: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
---
Exec  OK   easy pred: SELECT airlines.Country FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Country FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   medium pred: SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'terminal'
           medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'terminal'
           medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'terminal'
           medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
---
Exec  OK   medium pred: SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'terminal'
           medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines
           easy gold: SELECT count(*) FROM AIRLINES
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines
           easy gold: SELECT count(*) FROM AIRLINES
---
Exec  OK   easy pred: SELECT Count(*) FROM airports
           easy gold: SELECT count(*) FROM AIRPORTS
---
Exec  OK   easy pred: SELECT Count(*) FROM airports
           easy gold: SELECT count(*) FROM AIRPORTS
---
Exec  OK   easy pred: SELECT Count(*) FROM flights
           easy gold: SELECT count(*) FROM FLIGHTS
---
Exec  OK   easy pred: SELECT Count(*) FROM flights
           easy gold: SELECT count(*) FROM FLIGHTS
---
Exec  OK   easy pred: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = 'terminal'
           easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
---
Exec  OK   easy pred: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = 'terminal'
           easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'
           easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'
           easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'
           medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
---
Exec  OK   medium pred: SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'
           medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.DestAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.DestAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' AND airports.City = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' AND airports.AirportName = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
---
Exec  Fail medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
---
Exec  Fail medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
---
Exec  OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.AirportCode = 'terminal' AND airports.AirportCode = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airports WHERE flights.SourceAirport = 'terminal' AND airports.AirportName = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
---
Exec  OK   medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal' AND flights.SourceAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airlines WHERE flights.SourceAirport = 'terminal' AND airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
---
Exec  OK   hard pred: SELECT Count(*) FROM airlines JOIN flights JOIN airports WHERE airports.City = 'terminal' AND airlines.Airline = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
---
Exec  OK   hard pred: SELECT Count(*) FROM airlines JOIN flights JOIN airports WHERE airports.City = 'terminal' AND airlines.Airline = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
---
Exec  Fail extra pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights GROUP BY flights.Airline ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
---
Exec  OK   extra pred: SELECT airlines.Abbreviation, airlines.Country FROM airlines GROUP BY airlines.Abbreviation ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
---
Exec  OK   medium pred: SELECT flights.Airline FROM airlines JOIN flights WHERE flights.DestAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT flights.Airline FROM airlines JOIN flights WHERE flights.DestAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.DestAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights JOIN airports WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights JOIN airports WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' EXCEPT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' EXCEPT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.FlightNo < 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.FlightNo < 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
---
Exec  Fail medium pred: SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
---
Exec  Fail medium pred: SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.DestAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' OR airports.City = 'terminal'
           hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' OR airports.City = 'terminal'
           hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
---
Exec  Fail hard pred: SELECT airports.AirportName FROM airports EXCEPT SELECT airports.AirportName FROM airports JOIN flights WHERE flights.FlightNo = 'terminal'
           hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
---
Exec  OK   hard pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode NOT IN (SELECT flights.DestAirport FROM flights)
           hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
---
Exec  OK   easy pred: SELECT Count(*) FROM employee
           easy gold: SELECT count(*) FROM employee
---
Exec  OK   easy pred: SELECT Count(*) FROM employee
           easy gold: SELECT count(*) FROM employee
---
Exec  OK   easy pred: SELECT employee.Name FROM employee ORDER BY employee.Age Asc
           easy gold: SELECT name FROM employee ORDER BY age
---
Exec  OK   easy pred: SELECT employee.Name FROM employee ORDER BY employee.Age Asc
           easy gold: SELECT name FROM employee ORDER BY age
---
Exec  OK   medium pred: SELECT employee.City, Count(*) FROM employee GROUP BY employee.City
           medium gold: SELECT count(*) ,  city FROM employee GROUP BY city
---
Exec  OK   medium pred: SELECT employee.City, Count(*) FROM employee GROUP BY employee.City
           medium gold: SELECT count(*) ,  city FROM employee GROUP BY city
---
Exec  OK   medium pred: SELECT employee.City FROM employee WHERE employee.Age < 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
           medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
---
Exec  OK   medium pred: SELECT employee.City FROM employee WHERE employee.Age < 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
           medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
---
Exec  OK   medium pred: SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location
           medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
---
Exec  OK   medium pred: SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location
           medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
---
Exec  OK   medium pred: SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1
           medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
---
Exec  OK   medium pred: SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1
           medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Min(shop.Number_products), Max(shop.Number_products) FROM shop
           medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop
---
Exec  OK   medium pred: SELECT Min(shop.Number_products), Max(shop.Number_products) FROM shop
           medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop
---
Exec  OK   medium pred: SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products Desc
           medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
---
Exec  OK   medium pred: SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products Desc
           medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT Avg(shop.Number_products) FROM shop)
           hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT Avg(shop.Number_products) FROM shop)
           hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
---
Exec  OK   extra pred: SELECT employee.Name FROM employee JOIN evaluation GROUP BY evaluation.Employee_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT employee.Name FROM employee JOIN evaluation GROUP BY employee.Employee_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT employee.Name FROM employee JOIN evaluation ORDER BY evaluation.Bonus Desc LIMIT 1
           hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
---
Exec  Fail hard pred: SELECT employee.Name FROM evaluation JOIN employee ORDER BY evaluation.Bonus Desc LIMIT 1
           hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
---
Exec  OK   hard pred: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)
           hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
---
Exec  OK   hard pred: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)
           hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
---
Exec  OK   extra pred: SELECT shop.Name FROM hiring JOIN shop GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT shop.Name FROM shop JOIN hiring GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)
           hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)
           hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
---
Exec  Fail medium pred: SELECT shop.Name, Count(*) FROM hiring JOIN shop GROUP BY hiring.Shop_ID
           medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
---
Exec  Fail medium pred: SELECT shop.Name, Count(*) FROM shop JOIN hiring GROUP BY shop.Name
           medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
---
Exec  OK   easy pred: SELECT Sum(evaluation.Bonus) FROM evaluation
           easy gold: SELECT sum(bonus) FROM evaluation
---
Exec  OK   easy pred: SELECT Sum(evaluation.Bonus) FROM evaluation
           easy gold: SELECT sum(bonus) FROM evaluation
---
Exec  OK   easy pred: SELECT * FROM hiring
           easy gold: SELECT * FROM hiring
---
Exec  OK   easy pred: SELECT * FROM hiring
           easy gold: SELECT * FROM hiring
---
Exec  OK   hard pred: SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal' INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal'
           hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
---
Exec  OK   hard pred: SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal' INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal'
           hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
---
Exec  OK   easy pred: SELECT Count(DISTINCT shop.Location) FROM shop
           easy gold: SELECT count(DISTINCT LOCATION) FROM shop
---
Exec  OK   easy pred: SELECT Count(DISTINCT shop.Location) FROM shop
           easy gold: SELECT count(DISTINCT LOCATION) FROM shop
---
Exec  OK   easy pred: SELECT Count(*) FROM Documents
           easy gold: SELECT count(*) FROM Documents
---
Exec  OK   easy pred: SELECT Count(*) FROM Documents
           easy gold: SELECT count(*) FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents
           medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents
           medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'
           medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
---
Exec  OK   medium pred: SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'
           medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
---
Exec  Fail easy pred: SELECT Count(DISTINCT Templates.Template_Type_Code) FROM Templates
           easy gold: SELECT count(DISTINCT template_id) FROM Documents
---
Exec  Fail easy pred: SELECT Count(DISTINCT Templates.Template_Type_Code) FROM Templates
           easy gold: SELECT count(DISTINCT template_id) FROM Documents
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
---
Exec  OK   medium pred: SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID
           medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
---
Exec  OK   medium pred: SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID
           medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
---
Exec  Fail extra pred: SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Documents.Template_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Documents.Template_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'
           easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
---
Exec  OK   easy pred: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'
           easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
---
Exec  OK   hard pred: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
           hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
---
Exec  OK   hard pred: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
           hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(*) FROM Templates
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(*) FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates
---
Exec  OK   easy pred: SELECT DISTINCT Templates.Template_Type_Code FROM Templates
           easy gold: SELECT DISTINCT template_type_code FROM Templates
---
Exec  OK   easy pred: SELECT DISTINCT Templates.Template_Type_Code FROM Templates
           easy gold: SELECT DISTINCT template_type_code FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
---
Exec  OK   medium pred: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'
           easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'
           easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
---
Exec  OK   medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 'terminal'
           medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
---
Exec  OK   medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 'terminal'
           medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
---
Exec  OK   medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
---
Exec  OK   medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
---
Exec  OK   hard pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) < 'terminal'
           easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
---
Exec  OK   easy pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) < 'terminal'
           easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
---
Exec  Fail medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates
---
Exec  Fail medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
---
Exec  Fail medium pred: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
---
Exec  Fail medium pred: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
---
Exec  Fail extra pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates
           hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
---
Exec  Fail hard pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates
           hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
---
Exec  OK   medium pred: SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
           medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types
---
Exec  OK   medium pred: SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
           medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'
           easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'
           easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
---
Exec  Fail medium pred: SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates JOIN Documents
           medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
---
Exec  Fail medium pred: SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates JOIN Documents
           medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
---
Exec  Fail medium pred: SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
---
Exec  Fail medium pred: SELECT Templates.Template_ID FROM Ref_Template_Types JOIN Templates WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
---
Exec  OK   easy pred: SELECT Count(*) FROM Paragraphs
           easy gold: SELECT count(*) FROM Paragraphs
---
Exec  OK   easy pred: SELECT Count(*) FROM Paragraphs
           easy gold: SELECT count(*) FROM Paragraphs
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
---
Exec  Fail medium pred: SELECT * FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal'
           medium gold: select other_details from paragraphs where paragraph_text like 'korea'
---
Exec  OK   medium pred: SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE 'terminal'
           medium gold: select other_details from paragraphs where paragraph_text like 'korea'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
---
Exec  Fail medium pred: SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc
           medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
---
Exec  Fail medium pred: SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc
           medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
---
Exec  Fail medium pred: SELECT Paragraphs.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs GROUP BY Paragraphs.Document_ID
           medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
---
Exec  Fail medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID
           medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
---
Exec  OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
---
Exec  OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail easy pred: SELECT Documents.Document_ID FROM Documents JOIN Paragraphs WHERE Paragraphs.Document_ID BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
---
Exec  Fail easy pred: SELECT Documents.Document_ID FROM Documents JOIN Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal'
           hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal'
           hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
---
Exec  OK   easy pred: SELECT Count(*) FROM teacher
           easy gold: SELECT count(*) FROM teacher
---
Exec  OK   easy pred: SELECT Count(*) FROM teacher
           easy gold: SELECT count(*) FROM teacher
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher ORDER BY teacher.Age Asc
           easy gold: SELECT Name FROM teacher ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher ORDER BY teacher.Age Asc
           easy gold: SELECT Name FROM teacher ORDER BY Age ASC
---
Exec  OK   medium pred: SELECT teacher.Age, teacher.Hometown FROM teacher
           medium gold: SELECT Age ,  Hometown FROM teacher
---
Exec  OK   medium pred: SELECT DISTINCT teacher.Age, teacher.Hometown FROM teacher
           medium gold: SELECT Age ,  Hometown FROM teacher
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'
           easy gold: select name from teacher where hometown != "little lever urban district"
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'
           easy gold: select name from teacher where hometown != "little lever urban district"
---
Exec  OK   medium pred: SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'
           medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
---
Exec  OK   medium pred: SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'
           medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
---
Exec  OK   medium pred: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age Asc LIMIT 1
           medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
---
Exec  OK   medium pred: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age Asc LIMIT 1
           medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
---
Exec  OK   medium pred: SELECT teacher.Hometown, Count(*) FROM teacher GROUP BY teacher.Hometown
           medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
---
Exec  OK   medium pred: SELECT Count(*), teacher.Hometown FROM teacher GROUP BY teacher.Hometown
           medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
---
Exec  OK   hard pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING Count(*) >= 'terminal'
           easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
---
Exec  OK   easy pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING Count(*) >= 'terminal'
           easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
---
Exec  Fail medium pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN course JOIN teacher
           medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
---
Exec  Fail medium pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN teacher JOIN course
           medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
---
Exec  Fail hard pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN teacher JOIN course ORDER BY teacher.Name Asc
           hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
---
Exec  Fail hard pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN course JOIN teacher ORDER BY teacher.Name Asc
           hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
---
Exec  Fail hard pred: SELECT teacher.Name FROM course JOIN course_arrange JOIN teacher WHERE course.Course = 'terminal'
           hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
---
Exec  Fail hard pred: SELECT teacher.Name FROM course JOIN course_arrange JOIN teacher WHERE course.Course = 'terminal'
           hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
---
Exec  Fail medium pred: SELECT teacher.Name, Count(*) FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID
           medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
---
Exec  Fail medium pred: SELECT teacher.Name, Count(*) FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID
           medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
---
Exec  Fail medium pred: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
---
Exec  Fail medium pred: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
---
Exec  OK   hard pred: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)
           hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
---
Exec  OK   hard pred: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)
           hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
---
Exec  Fail easy pred: SELECT Count(*) FROM visit JOIN visitor WHERE visitor.Age < 'terminal'
           easy gold: SELECT count(*) FROM visitor WHERE age  <  30
---
Exec  OK   medium pred: SELECT visitor.Name FROM visitor WHERE visitor.Level_of_membership > 'terminal' ORDER BY visitor.Level_of_membership Desc
           medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
---
Exec  OK   easy pred: SELECT Avg(visitor.Age) FROM visitor WHERE visitor.Level_of_membership <= 'terminal'
           easy gold: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
---
Exec  Fail medium pred: SELECT visitor.Name, visitor.Level_of_membership FROM visitor WHERE visitor.Age > 'terminal' ORDER BY visitor.Age Asc
           medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
---
Exec  OK   medium pred: SELECT museum.Museum_ID, museum.Name FROM museum ORDER BY museum.Num_of_Staff Desc LIMIT 1
           medium gold: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Avg(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year < 'terminal'
           easy gold: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
---
Exec  OK   medium pred: SELECT museum.Open_Year, museum.Num_of_Staff FROM museum WHERE museum.Name = 'terminal'
           medium gold: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
---
Exec  Fail hard pred: SELECT museum.Name FROM museum WHERE museum.Num_of_Staff > 'terminal'
           hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
---
Exec  Fail medium pred: SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID HAVING Count(*) > 'terminal'
           medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1
---
Exec  Fail extra pred: SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visit JOIN visitor GROUP BY visitor.ID ORDER BY Sum(visit.Total_spent) Desc LIMIT 1
           extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit GROUP BY visit.Museum_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT museum.Name FROM museum WHERE museum.Museum_ID NOT IN (SELECT visit.Museum_ID FROM visit)
           hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
---
Exec  Fail hard pred: SELECT visitor.Name, visitor.Age FROM visit JOIN visitor GROUP BY visitor.ID ORDER BY Sum(visit.Num_of_Ticket) Desc LIMIT 1
           hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Avg(visit.Num_of_Ticket), Max(visit.Num_of_Ticket) FROM visit
           medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
---
Exec  Fail medium pred: SELECT Sum(visit.Total_spent) FROM visitor JOIN visit WHERE visitor.Level_of_membership = 'terminal'
           medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
---
Exec  Fail extra pred: SELECT visitor.Name FROM visit JOIN visitor JOIN museum WHERE museum.Open_Year < 'terminal' INTERSECT SELECT visitor.Name FROM visit JOIN museum WHERE museum.Open_Year > 'terminal'
           extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
---
Exec  Fail extra pred: SELECT Count(*) FROM visitor WHERE visitor.ID NOT IN (SELECT visit.visitor_ID FROM museum WHERE museum.Open_Year > 'terminal')
           extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
---
Exec  OK   medium pred: SELECT Count(*) FROM museum WHERE museum.Open_Year > 'terminal' OR museum.Open_Year < 'terminal'
           medium gold: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
---
Exec  OK   easy pred: SELECT Count(*) FROM players
           easy gold: SELECT count(*) FROM players
---
Exec  OK   easy pred: SELECT Count(*) FROM players
           easy gold: SELECT count(*) FROM players
---
Exec  OK   easy pred: SELECT Count(*) FROM matches
           easy gold: SELECT count(*) FROM matches
---
Exec  OK   easy pred: SELECT Count(*) FROM matches
           easy gold: SELECT count(*) FROM matches
---
Exec  OK   medium pred: SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal'
           medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
---
Exec  OK   medium pred: SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal'
           medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
---
Exec  Fail medium pred: SELECT Avg(matches.loser_age), Avg(matches.winner_ioc) FROM matches
           medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
---
Exec  OK   medium pred: SELECT Avg(matches.loser_age), Avg(matches.winner_age) FROM matches
           medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
---
Exec  OK   easy pred: SELECT Avg(matches.winner_rank) FROM matches
           easy gold: SELECT avg(winner_rank) FROM matches
---
Exec  OK   easy pred: SELECT Avg(matches.winner_rank) FROM matches
           easy gold: SELECT avg(winner_rank) FROM matches
---
Exec  Fail easy pred: SELECT matches.loser_rank FROM matches ORDER BY matches.loser_rank Desc LIMIT 1
           easy gold: SELECT min(loser_rank) FROM matches
---
Exec  Fail easy pred: SELECT rankings.ranking FROM rankings JOIN matches ORDER BY rankings.ranking Desc LIMIT 1
           easy gold: SELECT min(loser_rank) FROM matches
---
Exec  OK   easy pred: SELECT Count(DISTINCT players.country_code) FROM players
           easy gold: SELECT count(DISTINCT country_code) FROM players
---
Exec  OK   easy pred: SELECT Count(DISTINCT players.country_code) FROM players
           easy gold: SELECT count(DISTINCT country_code) FROM players
---
Exec  Fail easy pred: SELECT Count(DISTINCT players.first_name) FROM players
           easy gold: SELECT count(DISTINCT loser_name) FROM matches
---
Exec  Fail easy pred: SELECT Count(DISTINCT players.last_name) FROM players
           easy gold: SELECT count(DISTINCT loser_name) FROM matches
---
Exec  OK   easy pred: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING Count(*) > 'terminal'
           easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
---
Exec  OK   easy pred: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING Count(*) > 'terminal'
           easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
---
Exec  OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.year = 'terminal' INTERSECT SELECT matches.winner_name FROM matches WHERE matches.year = 'terminal'
           hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
---
Exec  Fail hard pred: SELECT players.first_name FROM players JOIN matches WHERE matches.winner_rank = 'terminal' INTERSECT SELECT players.first_name FROM matches JOIN players WHERE matches.year = 'terminal'
           hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
---
Exec  OK   medium pred: SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
           medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
---
Exec  OK   medium pred: SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
           medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
---
Exec  Fail extra pred: SELECT players.country_code, players.first_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal' INTERSECT SELECT players.country_code, players.first_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal'
           extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
---
Exec  Fail extra pred: SELECT players.first_name, players.country_code FROM players JOIN matches WHERE matches.tourney_name = 'terminal' INTERSECT SELECT players.first_name, players.country_code FROM players JOIN matches WHERE matches.tourney_name = 'terminal'
           extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
---
Exec  OK   medium pred: SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Asc LIMIT 1
           medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
---
Exec  Fail medium pred: SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Desc LIMIT 1
           medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players WHERE players.hand = 'terminal' ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players WHERE players.hand = 'terminal' ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625334369.6641776358849073']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625334430.27560237722083751']' timed out after 60 seconds
Exec  Fail hard pred: SELECT players.first_name, players.country_code FROM rankings JOIN players GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625334490.9073792545502221']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625334551.28455783970816796']' timed out after 60 seconds
Exec  Fail hard pred: SELECT players.first_name, players.country_code FROM rankings JOIN players GROUP BY players.first_name ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT matches.winner_name, matches.winner_rank_points FROM matches GROUP BY matches.winner_rank ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT matches.winner_name, matches.winner_rank_points FROM matches ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = 'terminal' ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = 'terminal' ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
---
Exec  Fail medium pred: SELECT matches.winner_name, matches.winner_ht FROM matches WHERE matches.minutes = (SELECT Max(matches.minutes) FROM matches)
           medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
---
Exec  Fail medium pred: SELECT matches.winner_name, matches.loser_ht FROM matches JOIN players ORDER BY matches.minutes Desc LIMIT 1
           medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625334613.55565141530516784']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625334674.17725065736674034']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Avg(rankings.ranking) FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625334734.80571086297094642']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625334795.420546291017816']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Avg(rankings.ranking) FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625334856.0444611693777883']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625334916.60467584575179427']' timed out after 60 seconds
Exec  Fail medium pred: SELECT Sum(rankings.ranking_points), players.first_name FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625334977.2264494440126357']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625335037.83297875598605419']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Sum(rankings.ranking_points) FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Exec  OK   medium pred: SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code
---
Exec  OK   medium pred: SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code
---
Exec  OK   hard pred: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT players.country_code FROM players GROUP BY players.country_code HAVING Count(*) > 'terminal'
           easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
---
Exec  Fail easy pred: SELECT players.country_code FROM players WHERE players.country_code > 'terminal'
           easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
---
Exec  Fail medium pred: SELECT rankings.ranking_date, Count(*) FROM rankings GROUP BY rankings.ranking
           medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
---
Exec  Fail medium pred: SELECT rankings.ranking_date, Count(*) FROM rankings GROUP BY rankings.ranking
           medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
---
Exec  OK   medium pred: SELECT matches.year, Count(*) FROM matches GROUP BY matches.year
           medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
---
Exec  OK   medium pred: SELECT matches.year, Count(*) FROM matches GROUP BY matches.year
           medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
---
Exec  Fail medium pred: SELECT matches.winner_name, matches.winner_rank FROM matches JOIN players ORDER BY players.birth_date Asc LIMIT 1
           medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
---
Exec  OK   medium pred: SELECT matches.winner_name, matches.winner_rank FROM matches ORDER BY matches.winner_age Asc LIMIT 1
           medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
---
Exec  Fail medium pred: SELECT Count(DISTINCT matches.winner_ht) FROM matches WHERE matches.tourney_name = 'terminal'
           medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
---
Exec  Fail medium pred: SELECT Count(*) FROM matches WHERE matches.winner_rank = 'terminal'
           medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
---
Exec  Fail hard pred: SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN matches ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
---
Exec  Fail hard pred: SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN matches ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
---
Exec  OK   medium pred: SELECT players.hand, Count(*) FROM players GROUP BY players.hand
           medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand
---
Exec  OK   medium pred: SELECT players.hand, Count(*) FROM players GROUP BY players.hand
           medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand
---
Exec  Fail easy pred: SELECT Count(*) FROM battle JOIN ship WHERE battle.result = 'terminal'
           easy gold: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
---
Exec  OK   medium pred: SELECT ship.name, ship.tonnage FROM ship ORDER BY ship.name Desc
           medium gold: SELECT name ,  tonnage FROM ship ORDER BY name DESC
---
Exec  Fail medium pred: SELECT battle.name, battle.date, battle.result FROM battle
           medium gold: SELECT name ,  date FROM battle
---
Exec  Fail medium pred: SELECT Max(death.killed), Min(death.killed), Min(death.killed) FROM death GROUP BY death.id
           medium gold: SELECT max(killed) ,  min(killed) FROM death
---
Exec  Fail easy pred: SELECT Avg(death.injured), death.injured FROM death GROUP BY death.injured
           easy gold: SELECT avg(injured) FROM death
---
Exec  Fail medium pred: SELECT death.injured, death.injured FROM death JOIN ship WHERE ship.tonnage = 'terminal'
           medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
---
Exec  OK   medium pred: SELECT battle.name, battle.result FROM battle WHERE battle.bulgarian_commander != 'terminal'
           medium gold: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
---
Exec  Fail medium pred: SELECT DISTINCT ship.id, battle.name FROM battle JOIN ship WHERE ship.ship_type = 'terminal'
           medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
---
Exec  Fail hard pred: SELECT battle.id, battle.name FROM battle JOIN ship JOIN death GROUP BY battle.id HAVING Sum(death.killed) > 'terminal'
           hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
---
Exec  Fail extra pred: SELECT ship.id, ship.name FROM ship JOIN death GROUP BY death.caused_by_ship_id ORDER BY Sum(death.injured) Desc LIMIT 1
           extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT DISTINCT battle.name FROM battle WHERE battle.bulgarian_commander = 'terminal' AND battle.latin_commander = 'terminal'
           medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
---
Exec  OK   easy pred: SELECT Count(DISTINCT battle.result) FROM battle
           easy gold: SELECT count(DISTINCT RESULT) FROM battle
---
Exec  OK   extra pred: SELECT Count(*) FROM battle WHERE battle.id NOT IN (SELECT ship.lost_in_battle FROM ship WHERE ship.tonnage = 'terminal')
           extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );
---
Exec  Fail extra pred: SELECT battle.name, battle.date FROM ship JOIN battle WHERE ship.name = 'terminal' AND ship.name = 'terminal'
           extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
---
Exec  Fail extra pred: SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle WHERE battle.id NOT IN (SELECT ship.id FROM ship WHERE ship.location = 'terminal')
           extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
---
Exec  OK   medium pred: SELECT death.note FROM death WHERE death.note LIKE 'terminal'
           medium gold: SELECT note FROM death WHERE note LIKE '%East%'
---
Exec  Fail medium pred: SELECT Addresses.line_1 FROM Addresses INTERSECT SELECT Addresses.line_1 FROM Addresses
           medium gold: SELECT line_1 ,  line_2 FROM addresses
---
Exec  Fail medium pred: SELECT Addresses.line_1, Addresses.line_3 FROM Addresses
           medium gold: SELECT line_1 ,  line_2 FROM addresses
---
Exec  OK   easy pred: SELECT Count(*) FROM Courses
           easy gold: SELECT count(*) FROM Courses
---
Exec  OK   easy pred: SELECT Count(*) FROM Courses
           easy gold: SELECT count(*) FROM Courses
---
Exec  OK   easy pred: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'
           easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'
---
Exec  OK   easy pred: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'
           easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'
---
Exec  OK   easy pred: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'
           easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
---
Exec  OK   easy pred: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'
           easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
---
Exec  Fail extra pred: SELECT Departments.department_name, Degree_Programs.department_id FROM Degree_Programs JOIN Departments GROUP BY Degree_Programs.department_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Departments.department_name, Degree_Programs.department_id FROM Degree_Programs JOIN Departments GROUP BY Degree_Programs.department_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.department_id) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.department_id) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
---
Exec  OK   medium pred: SELECT Count(*) FROM Degree_Programs JOIN Departments WHERE Departments.department_name = 'terminal'
           medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
---
Exec  OK   medium pred: SELECT Count(*) FROM Degree_Programs JOIN Departments WHERE Departments.department_name = 'terminal'
           medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
---
Exec  OK   medium pred: SELECT Sections.section_name, Sections.section_description FROM Sections
           medium gold: SELECT section_name ,  section_description FROM Sections
---
Exec  OK   medium pred: SELECT Sections.section_name, Sections.section_description FROM Sections
           medium gold: SELECT section_name ,  section_description FROM Sections
---
Exec  Fail medium pred: SELECT Courses.course_name, Sections.course_id FROM Courses JOIN Sections GROUP BY Sections.course_id HAVING Count(*) <= 'terminal'
           medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
---
Exec  Fail medium pred: SELECT Courses.course_name, Sections.course_id FROM Courses JOIN Sections GROUP BY Sections.course_id HAVING Count(*) < 'terminal'
           medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
---
Exec  OK   easy pred: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Desc
           easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC
---
Exec  OK   easy pred: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Desc
           easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC
---
Exec  Fail extra pred: SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Semesters.semester_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Semesters.semester_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'
           medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
---
Exec  OK   medium pred: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'
           medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.student_id FROM Students JOIN Student_Enrolment GROUP BY Student_Enrolment.student_id HAVING Count(*) = 'terminal'
           medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Student_Enrolment.student_enrolment_id FROM Students JOIN Student_Enrolment GROUP BY Student_Enrolment.student_id HAVING Count(*) = 'terminal'
           medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
---
Exec  Fail hard pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = 'terminal'
           hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
---
Exec  Fail hard pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = 'terminal'
           hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment GROUP BY Courses.course_name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Student_Enrolment_Courses.course_id, Student_Enrolment_Courses.student_enrolment_id FROM Student_Enrolment_Courses JOIN Student_Enrolment GROUP BY Student_Enrolment_Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Student_Enrolment.degree_program_id, Degree_Programs.degree_summary_name FROM Student_Enrolment JOIN Degree_Programs GROUP BY Student_Enrolment.degree_program_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.student_id, Students.first_name, Students.middle_name, Count(*) FROM Students JOIN Student_Enrolment GROUP BY Students.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.first_name, Students.middle_name, Count(*) FROM Students JOIN Student_Enrolment GROUP BY Students.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN (SELECT Student_Enrolment.semester_id FROM Student_Enrolment)
           hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
---
Exec  OK   hard pred: SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN (SELECT Student_Enrolment.semester_id FROM Student_Enrolment)
           hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
---
Exec  Fail easy pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses
           easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
---
Exec  Fail easy pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses
           easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Student_Enrolment_Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.last_name FROM Students WHERE Addresses.state_province_county = 'terminal' EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment
           extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
---
Exec  Fail extra pred: SELECT Students.last_name FROM Students WHERE Addresses.state_province_county = 'terminal' EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment
           extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
---
Exec  Fail medium pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts GROUP BY Transcripts.transcript_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcript_Contents JOIN Transcripts GROUP BY Transcript_Contents.transcript_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
---
Exec  OK   medium pred: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'
           medium gold: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
---
Exec  OK   medium pred: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'
           medium gold: select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.first_name Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.first_name Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
---
Exec  Fail easy pred: SELECT DISTINCT Students.first_name FROM Students
           easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
---
Exec  Fail easy pred: SELECT DISTINCT Students.first_name FROM Students
           easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
---
Exec  Fail extra pred: SELECT Addresses.address_id, Students.current_address_id FROM Addresses JOIN Students GROUP BY Addresses.address_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Addresses.address_id, Addresses.line_1, Addresses.line_2 FROM Addresses JOIN Students GROUP BY Addresses.address_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Avg(Transcripts.transcript_date) FROM Transcripts
           easy gold: SELECT avg(transcript_date) FROM Transcripts
---
Exec  OK   easy pred: SELECT Avg(Transcripts.transcript_date) FROM Transcripts
           easy gold: SELECT avg(transcript_date) FROM Transcripts
---
Exec  OK   medium pred: SELECT Transcripts.transcript_date, Transcripts.other_details FROM Transcripts ORDER BY Transcripts.transcript_date Asc LIMIT 1
           medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Transcripts.transcript_date, Transcripts.other_details FROM Transcripts
           medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
---
Exec  OK   easy pred: SELECT Count(*) FROM Transcripts
           easy gold: SELECT count(*) FROM Transcripts
---
Exec  OK   easy pred: SELECT Count(*) FROM Transcripts
           easy gold: SELECT count(*) FROM Transcripts
---
Exec  OK   medium pred: SELECT Max(Transcripts.transcript_date) FROM Transcripts
           medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date Desc LIMIT 1
           medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Count(*), Student_Enrolment.student_enrolment_id FROM Student_Enrolment JOIN Transcripts GROUP BY Student_Enrolment.student_enrolment_id ORDER BY Count(*) Desc
           hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Count(*), Transcript_Contents.transcript_id FROM Student_Enrolment_Courses JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal' INTERSECT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal'
           extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
---
Exec  Fail extra pred: SELECT Semesters.semester_id FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal' INTERSECT SELECT Semesters.semester_id FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal'
           extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
---
Exec  OK   easy pred: SELECT Count(DISTINCT Students.email_address) FROM Students
           easy gold: SELECT count(DISTINCT current_address_id) FROM Students
---
Exec  Fail easy pred: SELECT DISTINCT Addresses.zip_postcode FROM Addresses JOIN Students
           easy gold: SELECT count(DISTINCT current_address_id) FROM Students
---
Exec  Fail easy pred: SELECT * FROM Students ORDER BY Students.other_student_details Desc
           easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
---
Exec  Fail easy pred: SELECT Student_Enrolment.other_details FROM Student_Enrolment ORDER BY Student_Enrolment.other_details Desc
           easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
---
Exec  OK   easy pred: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'terminal'
           easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'
---
Exec  OK   easy pred: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'terminal'
           easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'
---
Exec  Fail hard pred: SELECT Students.first_name FROM Students JOIN Addresses WHERE Addresses.country = 'terminal' OR Students.cell_mobile_number = 'terminal'
           hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
---
Exec  Fail hard pred: SELECT Students.first_name FROM Students WHERE Addresses.country = 'terminal' UNION SELECT Students.first_name FROM Addresses JOIN Students WHERE Addresses.country = 'terminal'
           hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc
           easy gold: SELECT Title FROM Cartoon ORDER BY title
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc
           easy gold: SELECT Title FROM Cartoon ORDER BY title
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
---
Exec  OK   easy pred: SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'
           easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
---
Exec  OK   easy pred: SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'
           easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
---
Exec  OK   medium pred: SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date Asc
           medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
---
Exec  OK   medium pred: SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date Asc
           medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
---
Exec  OK   medium pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'
           medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
---
Exec  OK   medium pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'
           medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
---
Exec  OK   hard pred: SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
---
Exec  OK   hard pred: SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
---
Exec  Fail medium pred: SELECT Count(TV_Channel.series_name), TV_Channel.Content FROM TV_Channel
           medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
---
Exec  Fail medium pred: SELECT Count(TV_Channel.series_name), TV_Channel.Content FROM TV_Channel
           medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
---
Exec  OK   easy pred: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'
           easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
---
Exec  OK   easy pred: SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'
           easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
---
Exec  OK   hard pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
---
Exec  OK   hard pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
---
Exec  OK   medium pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language
           medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
---
Exec  OK   medium pred: SELECT Count(*), TV_Channel.Language FROM TV_Channel GROUP BY TV_Channel.Language
           medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
---
Exec  Fail medium pred: SELECT TV_series.Channel FROM TV_Channel JOIN Cartoon JOIN TV_series WHERE Cartoon.Title = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel WHERE Cartoon.Title = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
---
Exec  Fail medium pred: SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  Fail medium pred: SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Asc
           easy gold: SELECT Episode FROM TV_series ORDER BY rating
---
Exec  OK   easy pred: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Asc
           easy gold: SELECT Episode FROM TV_series ORDER BY rating
---
Exec  OK   medium pred: SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating Desc LIMIT 1
           medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
---
Exec  OK   medium pred: SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating Desc LIMIT 1
           medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
---
Exec  OK   medium pred: SELECT Min(TV_series.Share), Max(TV_series.Share) FROM TV_series
           medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;
---
Exec  OK   medium pred: SELECT Max(TV_series.Share), Min(TV_series.Share) FROM TV_series
           medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;
---
Exec  OK   easy pred: SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  OK   easy pred: SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  OK   easy pred: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  OK   easy pred: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series WHERE TV_series.Episode = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel WHERE TV_series.Episode = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  Fail medium pred: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  OK   medium pred: SELECT Count(*), Cartoon.Directed_by FROM Cartoon GROUP BY Cartoon.Directed_by
           medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
---
Exec  OK   medium pred: SELECT Cartoon.Directed_by, Count(*) FROM Cartoon GROUP BY Cartoon.Directed_by
           medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
---
Exec  OK   medium pred: SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date Desc LIMIT 1
           medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1
---
Exec  OK   medium pred: SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date Desc LIMIT 1
           medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1
---
Exec  OK   medium pred: SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'terminal'
           medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
---
Exec  Fail medium pred: SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM Cartoon JOIN TV_Channel WHERE TV_Channel.Hight_definition_TV = 'terminal'
           medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
---
Exec  Fail medium pred: SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Written_by = 'terminal'
           medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail medium pred: SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Written_by = 'terminal'
           medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail hard pred: SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Written_by = 'terminal'
           hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail hard pred: SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail extra pred: SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal'
           extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
---
Exec  Fail extra pred: SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal' AND Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal'
           extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
---
Exec  OK   medium pred: SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != 'terminal'
           medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
---
Exec  OK   medium pred: SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != 'terminal'
           medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
---
Exec  OK   easy pred: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.Country HAVING Count(*) > 'terminal'
           easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
---
Exec  Fail easy pred: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING Count(*) > 'terminal'
           easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
---
Exec  OK   hard pred: SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
---
Exec  OK   hard pred: SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
---
Exec  Fail hard pred: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
---
Exec  Fail hard pred: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
---
Exec  OK   easy pred: SELECT Count(*) FROM poker_player
           easy gold: SELECT count(*) FROM poker_player
---
Exec  OK   easy pred: SELECT Count(*) FROM poker_player
           easy gold: SELECT count(*) FROM poker_player
---
Exec  OK   easy pred: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings Desc
           easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
---
Exec  OK   easy pred: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings Desc
           easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
---
Exec  OK   medium pred: SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player
           medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
---
Exec  OK   medium pred: SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player
           medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
---
Exec  OK   easy pred: SELECT Avg(poker_player.Earnings) FROM poker_player
           easy gold: SELECT avg(Earnings) FROM poker_player
---
Exec  OK   easy pred: SELECT Avg(poker_player.Earnings) FROM poker_player
           easy gold: SELECT avg(Earnings) FROM poker_player
---
Exec  OK   medium pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1
           medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
---
Exec  OK   medium pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1
           medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'
           easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
---
Exec  OK   easy pred: SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'
           easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
---
Exec  Fail easy pred: SELECT people.Name FROM poker_player JOIN people
           easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
---
Exec  Fail easy pred: SELECT people.Name FROM poker_player JOIN people
           easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made Asc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made Asc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
---
Exec  Fail hard pred: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings Asc LIMIT 1
           hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
---
Exec  Fail hard pred: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings Asc LIMIT 1
           hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
---
Exec  OK   hard pred: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height Desc LIMIT 1
           hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
---
Exec  OK   hard pred: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height Desc LIMIT 1
           hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Avg(poker_player.Earnings) FROM poker_player JOIN people WHERE people.Height > 'terminal'
           medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
---
Exec  Fail medium pred: SELECT Avg(poker_player.Earnings) FROM poker_player JOIN people WHERE people.Height > 'terminal'
           medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings Desc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings Desc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
---
Exec  OK   medium pred: SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality
           medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
---
Exec  OK   medium pred: SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality
           medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
---
Exec  OK   hard pred: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
           easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
---
Exec  OK   easy pred: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
           easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
---
Exec  OK   medium pred: SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc
           medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
---
Exec  OK   medium pred: SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc
           medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
---
Exec  OK   easy pred: SELECT people.Name FROM people WHERE people.Nationality != 'terminal'
           easy gold: SELECT Name FROM people WHERE Nationality != "Russia"
---
Exec  OK   easy pred: SELECT people.Name FROM people WHERE people.Nationality != 'terminal'
           easy gold: SELECT Name FROM people WHERE Nationality != "Russia"
---
Exec  OK   hard pred: SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)
           hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
---
Exec  OK   hard pred: SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)
           hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
---
Exec  OK   easy pred: SELECT Count(DISTINCT people.Nationality) FROM people
           easy gold: SELECT count(DISTINCT Nationality) FROM people
---
Exec  OK   easy pred: SELECT Count(DISTINCT people.Nationality) FROM people
           easy gold: SELECT count(DISTINCT Nationality) FROM people
---
Exec  OK   easy pred: SELECT Count(DISTINCT AREA_CODE_STATE.state) FROM AREA_CODE_STATE
           easy gold: SELECT count(*) FROM area_code_state
---
Exec  OK   medium pred: SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS ORDER BY CONTESTANTS.contestant_name Desc
           medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
---
Exec  OK   medium pred: SELECT VOTES.vote_id, VOTES.phone_number, VOTES.state FROM VOTES
           medium gold: SELECT vote_id ,  phone_number ,  state FROM votes
---
Exec  OK   medium pred: SELECT Max(AREA_CODE_STATE.area_code), Min(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE
           medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state
---
Exec  OK   easy pred: SELECT VOTES.created FROM VOTES WHERE VOTES.state = 'terminal'
           easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'
---
Exec  Fail easy pred: SELECT CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name != 'terminal'
           easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
---
Exec  OK   medium pred: SELECT DISTINCT VOTES.state, VOTES.created FROM VOTES
           medium gold: SELECT DISTINCT state ,  created FROM votes
---
Exec  Fail medium pred: SELECT VOTES.contestant_number, CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS ORDER BY CONTESTANTS.contestant_name Asc LIMIT 1
           extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
---
Exec  OK   medium pred: SELECT Count(*) FROM VOTES WHERE VOTES.state = 'terminal' OR VOTES.state = 'terminal'
           medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
---
Exec  OK   extra pred: SELECT Count(*) FROM CONTESTANTS WHERE CONTESTANTS.contestant_number NOT IN (SELECT VOTES.contestant_number FROM VOTES)
           extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
---
Exec  Fail extra pred: SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES GROUP BY AREA_CODE_STATE.area_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal'
           medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'
---
Exec  Fail extra pred: SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal' INTERSECT SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal'
           extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
---
Exec  OK   medium pred: SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name LIKE 'terminal'
           medium gold: select contestant_name from contestants where contestant_name like "%al%"
---
Exec  OK   easy pred: SELECT country.Name FROM country WHERE country.IndepYear > 'terminal'
           easy gold: SELECT Name FROM country WHERE IndepYear  >  1950
---
Exec  Fail easy pred: SELECT country.Name FROM country WHERE country.Population > 'terminal'
           easy gold: SELECT Name FROM country WHERE IndepYear  >  1950
---
Exec  OK   easy pred: SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
---
Exec  OK   easy pred: SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
---
Exec  OK   easy pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
---
Exec  Fail easy pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal'
           easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
---
Exec  OK   easy pred: SELECT country.Continent FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"
---
Exec  OK   easy pred: SELECT country.Continent FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"
---
Exec  Fail medium pred: SELECT country.Region FROM city JOIN country WHERE city.Name = 'terminal'
           medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
---
Exec  Fail medium pred: SELECT country.Region FROM city JOIN country WHERE city.Name = 'terminal'
           medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
---
Exec  OK   medium pred: SELECT country.Population, country.LifeExpectancy FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
---
Exec  OK   medium pred: SELECT country.Population, country.LifeExpectancy FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
---
Exec  OK   medium pred: SELECT country.Region, country.Population FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
---
Exec  OK   medium pred: SELECT country.Region, country.Population FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
---
Exec  OK   easy pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
---
Exec  OK   easy pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.Region = 'terminal' ORDER BY country.LifeExpectancy Asc LIMIT 1
           hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
---
Exec  OK   hard pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' ORDER BY country.LifeExpectancy Asc LIMIT 1
           hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
---
Exec  OK   medium pred: SELECT Sum(country.Population), Max(country.GNP) FROM country WHERE country.Continent = 'terminal'
           medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
---
Exec  Fail medium pred: SELECT country.Population, Max(country.GNP) FROM country WHERE country.Continent = 'terminal' ORDER BY country.GNP Desc LIMIT 1
           medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
---
Exec  OK   medium pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal' OR country.Continent = 'terminal'
           medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
---
Exec  Fail medium pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' OR country.Continent = 'terminal'
           medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
---
Exec  Fail easy pred: SELECT city.Population FROM city WHERE city.District = 'terminal'
           easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
---
Exec  OK   easy pred: SELECT Sum(city.Population) FROM city WHERE city.District = 'terminal'
           easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
---
Exec  Fail medium pred: SELECT Avg(country.GNP), Avg(country.Population) FROM country WHERE country.GovernmentForm = 'terminal'
           medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
---
Exec  Fail medium pred: SELECT Avg(country.GNP), Avg(country.Population) FROM country WHERE country.Code2 = 'terminal'
           medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
---
Exec  OK   easy pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage
           easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
---
Exec  OK   easy pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage
           easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
---
Exec  Fail easy pred: SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
---
Exec  Fail easy pred: SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT country.Continent FROM countrylanguage JOIN country GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT country.Continent FROM countrylanguage JOIN country GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail easy pred: SELECT Count(*) FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
---
Exec  Fail easy pred: SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT country.Continent) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
---
Exec  Fail medium pred: SELECT Count(DISTINCT country.Continent) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
---
Exec  Fail hard pred: SELECT country.Region FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
---
Exec  Fail hard pred: SELECT country.Region FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
---
Exec  OK   extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           extra gold: select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Continent = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
---
Exec  Fail hard pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.GovernmentForm = 'terminal'
           hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' GROUP BY city.ID ORDER BY Count(city.Population) Desc LIMIT 1
           extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' GROUP BY city.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
---
Exec  OK   hard pred: SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'terminal' AND country.SurfaceArea = (SELECT Max(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal')
           hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  OK   hard pred: SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'terminal' ORDER BY country.SurfaceArea Desc LIMIT 1
           hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
---
Exec  Fail extra pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
---
Exec  Fail extra pred: SELECT Sum(city.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
---
Exec  Fail extra pred: SELECT country.Population FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
---
Exec  Fail medium pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.HeadOfState = 'terminal'
           medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.HeadOfState = 'terminal'
           medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.GNPOld < 'terminal'
           medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.GNPOld < 'terminal'
           medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country)
           hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country)
           hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population < (SELECT Max(country.Population) FROM country WHERE country.Region = 'terminal')
           extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Continent = 'terminal')
           extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
---
Exec  OK   extra pred: SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = 'terminal') AND country.Continent = 'terminal'
           extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = 'terminal') AND country.Continent = 'terminal'
           extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail easy pred: SELECT country.Code FROM country JOIN countrylanguage WHERE countrylanguage.Language != 'terminal'
           easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
---
Exec  Fail easy pred: SELECT country.Code FROM country JOIN countrylanguage WHERE countrylanguage.Language != 'terminal'
           easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE country.GovernmentForm = 'terminal')
           hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail extra pred: SELECT city.Name FROM countrylanguage JOIN country WHERE country.Name = 'terminal' AND countrylanguage.Language != 'terminal'
           extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN sqlite_sequence WHERE country.Region = 'terminal' AND countrylanguage.Language != 'terminal'
           extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
---
Exec  OK   hard pred: SELECT DISTINCT city.Name FROM country JOIN countrylanguage JOIN city WHERE country.Region = 'terminal' AND countrylanguage.Language = 'terminal'
           hard gold: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
---
Exec  Fail hard pred: SELECT DISTINCT city.Name FROM city JOIN country JOIN countrylanguage WHERE country.Continent = 'terminal' AND countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
---
Exec  OK   medium pred: SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
---
Exec  OK   medium pred: SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
---
Exec  OK   medium pred: SELECT country.Population, country.Name, country.HeadOfState FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  OK   medium pred: SELECT country.Name, country.Population, country.HeadOfState FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  Fail medium pred: SELECT country.Name, Count(*) FROM country JOIN countrylanguage GROUP BY country.Name HAVING Count(*) >= 'terminal'
           medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
---
Exec  Fail medium pred: SELECT country.Name, Count(*) FROM country JOIN countrylanguage GROUP BY country.Name HAVING Count(*) > 'terminal'
           medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
---
Exec  OK   extra pred: SELECT Count(*), city.District FROM city WHERE city.Population > (SELECT Avg(city.Population) FROM city) GROUP BY city.District
           extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
---
Exec  OK   extra pred: SELECT Count(*), city.District FROM city WHERE city.Population > (SELECT Avg(city.Population) FROM city) GROUP BY city.District
           extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
---
Exec  OK   medium pred: SELECT country.GovernmentForm, Sum(country.Population) FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) > 'terminal'
           medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
---
Exec  OK   medium pred: SELECT country.GovernmentForm, Sum(country.Population) FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) >= 'terminal'
           medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy), Sum(country.Population), country.Continent FROM country WHERE country.LifeExpectancy < 'terminal' GROUP BY country.Continent
           medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
---
Exec  OK   medium pred: SELECT country.Continent, Sum(country.Population), Avg(country.LifeExpectancy) FROM country GROUP BY country.Continent HAVING Avg(country.LifeExpectancy) < 'terminal'
           medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
---
Exec  Fail medium pred: SELECT country.Name, country.Region FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
---
Exec  Fail medium pred: SELECT country.Name, country.SurfaceArea FROM country ORDER BY country.Continent Desc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
---
Exec  Fail easy pred: SELECT Count(*) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"
---
Exec  Fail easy pred: SELECT Count(*) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"
---
Exec  OK   medium pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population = 'terminal'
           medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
---
Exec  OK   medium pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population = 'terminal'
           medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
---
Exec  OK   hard pred: SELECT Sum(country.Population), Avg(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal' AND country.SurfaceArea > 'terminal'
           hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
---
Exec  OK   hard pred: SELECT Sum(country.SurfaceArea), Avg(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' AND country.SurfaceArea > 'terminal'
           hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
---
Exec  OK   easy pred: SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
---
Exec  OK   easy pred: SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'
           easy gold: select name from city where population between 160000 and 900000
---
Exec  OK   hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT countrylanguage.Language, countrylanguage.Percentage FROM countrylanguage JOIN country GROUP BY country.Name
           medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode, Max(countrylanguage.Percentage) FROM countrylanguage GROUP BY countrylanguage.CountryCode
           medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
---
Exec  Fail extra pred: SELECT Count(*) FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY countrylanguage.Percentage Desc LIMIT 1
           extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail extra pred: SELECT Count(*) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY countrylanguage.Percentage Desc LIMIT 1
           medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  OK   easy pred: SELECT Count(*) FROM conductor
           easy gold: SELECT count(*) FROM conductor
---
Exec  OK   easy pred: SELECT Count(*) FROM conductor
           easy gold: SELECT count(*) FROM conductor
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc
           easy gold: SELECT Name FROM conductor ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc
           easy gold: SELECT Name FROM conductor ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'
           easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'
           easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'
---
Exec  OK   easy pred: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Desc
           easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
---
Exec  OK   easy pred: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Desc
           easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
---
Exec  OK   easy pred: SELECT Avg(show.Attendance) FROM show
           easy gold: SELECT avg(Attendance) FROM SHOW
---
Exec  OK   easy pred: SELECT Avg(show.Attendance) FROM show
           easy gold: SELECT avg(Attendance) FROM SHOW
---
Exec  OK   medium pred: SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'terminal'
           medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
---
Exec  OK   medium pred: SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'terminal'
           medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
---
Exec  OK   easy pred: SELECT Count(DISTINCT conductor.Nationality) FROM conductor
           easy gold: SELECT count(DISTINCT Nationality) FROM conductor
---
Exec  OK   easy pred: SELECT Count(DISTINCT conductor.Nationality) FROM conductor
           easy gold: SELECT count(DISTINCT Nationality) FROM conductor
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc
           easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc
           easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1
           medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1
           medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
---
Exec  Fail medium pred: SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra
           medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
---
Exec  Fail medium pred: SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra
           medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
---
Exec  Fail extra pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT conductor.Name FROM conductor JOIN orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
---
Exec  Fail medium pred: SELECT conductor.Name FROM conductor JOIN orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
---
Exec  OK   medium pred: SELECT orchestra.Record_Company, Count(*) FROM orchestra GROUP BY orchestra.Record_Company
           medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
---
Exec  OK   medium pred: SELECT orchestra.Record_Company, Count(*) FROM orchestra GROUP BY orchestra.Record_Company
           medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
---
Exec  OK   medium pred: SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY Count(*) Asc
           medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
---
Exec  OK   medium pred: SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY Count(*) Asc
           medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)
           hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
---
Exec  OK   hard pred: SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)
           hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
---
Exec  OK   medium pred: SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'
           medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
---
Exec  OK   medium pred: SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'
           medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
---
Exec  OK   medium pred: SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance GROUP BY orchestra.Year_of_Founded HAVING Count(*) > 'terminal'
           medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
---
Exec  OK   medium pred: SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance GROUP BY performance.Orchestra_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
---
Exec  OK   easy pred: SELECT Count(*) FROM Highschooler
           easy gold: SELECT count(*) FROM Highschooler
---
Exec  OK   easy pred: SELECT Count(*) FROM Highschooler
           easy gold: SELECT count(*) FROM Highschooler
---
Exec  OK   medium pred: SELECT Highschooler.name, Highschooler.grade FROM Highschooler
           medium gold: SELECT name ,  grade FROM Highschooler
---
Exec  OK   medium pred: SELECT Highschooler.name, Highschooler.grade FROM Highschooler
           medium gold: SELECT name ,  grade FROM Highschooler
---
Exec  OK   easy pred: SELECT DISTINCT Highschooler.grade FROM Highschooler
           easy gold: SELECT grade FROM Highschooler
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler
           easy gold: SELECT grade FROM Highschooler
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'
           easy gold: SELECT name FROM Highschooler WHERE grade  =  10
---
Exec  OK   easy pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'
           easy gold: SELECT name FROM Highschooler WHERE grade  =  10
---
Exec  OK   easy pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   medium pred: SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'
           medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
---
Exec  OK   medium pred: SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'
           medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
---
Exec  OK   medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade
           medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
---
Exec  OK   medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade
           medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
---
Exec  OK   hard pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
           easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
           easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
---
Exec  Fail medium pred: SELECT Count(*), Friend.friend_id FROM Friend GROUP BY Friend.student_id
           medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
---
Exec  Fail medium pred: SELECT Count(*) FROM Friend GROUP BY Friend.friend_id
           medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
---
Exec  Fail medium pred: SELECT Highschooler.name, Count(*) FROM Highschooler JOIN Friend GROUP BY Highschooler.name
           medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail medium pred: SELECT Count(*), Highschooler.name FROM Highschooler JOIN Friend GROUP BY Highschooler.name
           medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
---
Exec  Fail medium pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal'
           hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
---
Exec  Fail hard pred: SELECT Friend.friend_id FROM Friend JOIN Highschooler WHERE Highschooler.name = 'terminal'
           hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(*) FROM Friend JOIN Highschooler WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(*) FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  OK   hard pred: SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend
           hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
---
Exec  OK   hard pred: SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend
           hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
---
Exec  OK   hard pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
---
Exec  OK   hard pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
---
Exec  Fail hard pred: SELECT Friend.student_id FROM Highschooler INTERSECT SELECT Friend.student_id FROM Friend
           hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
---
Exec  Fail hard pred: SELECT Friend.student_id FROM Likes INTERSECT SELECT Friend.student_id FROM Friend
           hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend INTERSECT SELECT Likes.student_id FROM Highschooler JOIN Friend
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Likes INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
---
Exec  OK   medium pred: SELECT Count(*), Likes.student_id FROM Likes GROUP BY Likes.student_id
           medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
---
Exec  OK   medium pred: SELECT Count(*), Likes.student_id FROM Likes GROUP BY Likes.student_id
           medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
---
Exec  Fail medium pred: SELECT Highschooler.name, Count(*) FROM Highschooler JOIN Likes GROUP BY Highschooler.ID
           medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail medium pred: SELECT Highschooler.name, Count(*) FROM Highschooler JOIN Likes GROUP BY Highschooler.ID
           medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  OK   medium pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Highschooler.ID HAVING Count(*) >= 'terminal'
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(*) FROM Likes JOIN Highschooler WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  OK   hard pred: SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   hard pred: SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   extra pred: SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   extra pred: SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   hard pred: SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals
           hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
---
Exec  OK   hard pred: SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals
           hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
---
Exec  OK   hard pred: SELECT Avg(Dogs.age) FROM Dogs WHERE Dogs.dog_id IN (SELECT Treatments.dog_id FROM Treatments)
           hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
---
Exec  OK   hard pred: SELECT Avg(Dogs.age) FROM Dogs WHERE Dogs.dog_id IN (SELECT Treatments.dog_id FROM Treatments)
           hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals WHERE Professionals.state = 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Professionals.professional_id HAVING Count(*) > 'terminal'
           extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals WHERE Professionals.state = 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) > 'terminal'
           extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
---
Exec  Fail hard pred: SELECT Dogs.name FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments WHERE Charges.charge_amount > 'terminal')
           hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
---
Exec  Fail hard pred: SELECT Dogs.name FROM Dogs WHERE Dogs.owner_id NOT IN (SELECT Treatments.dog_id FROM Treatments WHERE Charges.charge_amount > 'terminal')
           hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
---
Exec  Fail hard pred: SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Professionals.first_name FROM Owners JOIN Dogs
           hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
---
Exec  Fail hard pred: SELECT Professionals.first_name FROM Professionals WHERE Owners.state = 'terminal' EXCEPT SELECT Professionals.first_name FROM Professionals JOIN Dogs
           hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals JOIN Treatments
           extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Treatments JOIN Professionals
           extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs GROUP BY Dogs.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs GROUP BY Dogs.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT Breeds.breed_name FROM Dogs JOIN Breeds GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Breeds.breed_name FROM Dogs JOIN Breeds GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.last_name FROM Owners JOIN Dogs GROUP BY Dogs.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments JOIN Charges GROUP BY Treatments.treatment_type_code ORDER BY Sum(Charges.charge_amount) Asc LIMIT 1
           extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments GROUP BY Treatments.treatment_type_code ORDER BY Sum(Treatments.cost_of_treatment) Asc LIMIT 1
           extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Owners.owner_id, Owners.zip_code FROM Dogs JOIN Owners JOIN Charges GROUP BY Dogs.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.zip_code FROM Owners JOIN Dogs JOIN Charges GROUP BY Dogs.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  OK   extra pred: SELECT Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals WHERE Treatments.cost_of_treatment < (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments)
           extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
---
Exec  Fail extra pred: SELECT Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals JOIN Charges WHERE Treatments.cost_of_treatment < (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments)
           extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
---
Exec  Fail medium pred: SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals
           medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail medium pred: SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals
           medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail medium pred: SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types
           medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
---
Exec  Fail medium pred: SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types
           medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Owners JOIN Dogs
           medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Owners JOIN Dogs
           medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail extra pred: SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments GROUP BY Treatments.dog_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
---
Exec  Fail extra pred: SELECT Dogs.name, Dogs.date_of_birth FROM Dogs JOIN Breeds GROUP BY Dogs.breed_code ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name FROM Dogs JOIN Owners WHERE Owners.state = 'terminal'
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
---
Exec  Fail medium pred: SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners WHERE Owners.state = 'terminal'
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
---
Exec  Fail medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments
           medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
---
Exec  Fail medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments
           medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
---
Exec  Fail extra pred: SELECT Owners.last_name FROM Dogs JOIN Owners ORDER BY Dogs.age Asc LIMIT 1
           extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
---
Exec  Fail extra pred: SELECT Owners.last_name FROM Dogs JOIN Owners ORDER BY Dogs.age Asc LIMIT 1
           extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
---
Exec  OK   medium pred: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'
           medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
---
Exec  OK   medium pred: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'
           medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
---
Exec  OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs
           medium gold: SELECT date_arrived ,  date_departed FROM Dogs
---
Exec  OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs
           medium gold: SELECT date_arrived ,  date_departed FROM Dogs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Treatments.dog_id) FROM Treatments
           easy gold: SELECT count(DISTINCT dog_id) FROM Treatments
---
Exec  OK   easy pred: SELECT Count(DISTINCT Treatments.dog_id) FROM Treatments
           easy gold: SELECT count(DISTINCT dog_id) FROM Treatments
---
Exec  OK   easy pred: SELECT Count(DISTINCT Treatments.professional_id) FROM Treatments
           easy gold: SELECT count(DISTINCT professional_id) FROM Treatments
---
Exec  OK   easy pred: SELECT Count(DISTINCT Treatments.professional_id) FROM Treatments
           easy gold: SELECT count(DISTINCT professional_id) FROM Treatments
---
Exec  Fail medium pred: SELECT Professionals.role_code, Professionals.city, Professionals.city, Professionals.state FROM Professionals WHERE Professionals.city LIKE 'terminal'
           medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
---
Exec  OK   medium pred: SELECT Professionals.role_code, Professionals.street, Professionals.city, Professionals.state FROM Professionals WHERE Professionals.city LIKE 'terminal'
           medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
---
Exec  OK   medium pred: SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'
           medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
---
Exec  OK   medium pred: SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'
           medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
---
Exec  OK   hard pred: SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)
           hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
---
Exec  OK   hard pred: SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)
           hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
---
Exec  Fail medium pred: SELECT Charges.charge_amount FROM Treatments JOIN Charges ORDER BY Treatments.date_of_treatment Desc LIMIT 1
           medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment Desc LIMIT 1
           medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
---
Exec  OK   extra pred: SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)
           extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)
           extra gold: select count(*) from dogs where dog_id not in ( select dog_id from treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)
           extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
---
Exec  OK   extra pred: SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)
           extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
---
Exec  OK   extra pred: SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)
           extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)
           extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
---
Exec  OK   medium pred: SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'terminal'
           medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
---
Exec  Fail medium pred: SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs
           medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
---
Exec  OK   easy pred: SELECT Avg(Dogs.age) FROM Dogs
           easy gold: SELECT avg(age) FROM Dogs
---
Exec  OK   easy pred: SELECT Avg(Dogs.age) FROM Dogs
           easy gold: SELECT avg(age) FROM Dogs
---
Exec  OK   easy pred: SELECT Max(Dogs.age) FROM Dogs
           easy gold: SELECT max(age) FROM Dogs
---
Exec  OK   easy pred: SELECT Max(Dogs.age) FROM Dogs
           easy gold: SELECT max(age) FROM Dogs
---
Exec  OK   medium pred: SELECT Charges.charge_type, Charges.charge_amount FROM Charges
           medium gold: SELECT charge_type ,  charge_amount FROM Charges
---
Exec  Fail medium pred: SELECT Charges.charge_type, Count(*) FROM Charges GROUP BY Charges.charge_type
           medium gold: SELECT charge_type ,  charge_amount FROM Charges
---
Exec  OK   easy pred: SELECT Charges.charge_amount FROM Charges ORDER BY Charges.charge_amount Desc LIMIT 1
           easy gold: SELECT max(charge_amount) FROM Charges
---
Exec  OK   easy pred: SELECT Charges.charge_amount FROM Charges GROUP BY Charges.charge_type ORDER BY Count(*) Desc LIMIT 1
           easy gold: SELECT max(charge_amount) FROM Charges
---
Exec  OK   medium pred: SELECT Professionals.email_address, Professionals.cell_number, Professionals.home_phone FROM Professionals
           medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals
---
Exec  OK   medium pred: SELECT Professionals.email_address, Professionals.cell_number, Professionals.home_phone FROM Professionals
           medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals
---
Exec  Fail medium pred: SELECT Breeds.breed_name, Count(*) FROM Breeds
           medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs
---
Exec  Fail medium pred: SELECT DISTINCT Dogs.breed_code, Count(*) FROM Dogs GROUP BY Dogs.breed_code
           medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs
---
Exec  Fail medium pred: SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Treatments JOIN Professionals JOIN Treatment_Types
           medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
---
Exec  Fail medium pred: SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Treatments JOIN Professionals JOIN Treatment_Types
           medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  OK   easy pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Asc
           easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
---
Exec  OK   easy pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Asc
           easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
---
Exec  OK   medium pred: SELECT singer.Birth_Year, singer.Citizenship FROM singer
           medium gold: SELECT Birth_Year ,  Citizenship FROM singer
---
Exec  OK   medium pred: SELECT singer.Birth_Year, singer.Citizenship FROM singer
           medium gold: SELECT Birth_Year ,  Citizenship FROM singer
---
Exec  OK   easy pred: SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
           easy gold: SELECT Name FROM singer WHERE Citizenship != "France"
---
Exec  OK   easy pred: SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
           easy gold: SELECT Name FROM singer WHERE Citizenship != "France"
---
Exec  OK   medium pred: SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'
           medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
---
Exec  OK   medium pred: SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'
           medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
---
Exec  OK   medium pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Desc LIMIT 1
           medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
---
Exec  OK   medium pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Desc LIMIT 1
           medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
---
Exec  OK   medium pred: SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
---
Exec  OK   medium pred: SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1
           hard gold: select citizenship from singer group by citizenship order by count(*) desc limit 1
---
Exec  OK   medium pred: SELECT singer.Citizenship, Max(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
---
Exec  OK   medium pred: SELECT singer.Citizenship, Max(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
---
Exec  Fail medium pred: SELECT song.Title, singer.Name FROM song JOIN singer
           medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
---
Exec  Fail medium pred: SELECT song.Title, singer.Name FROM song JOIN singer
           medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
---
Exec  Fail medium pred: SELECT DISTINCT singer.Name FROM song JOIN singer WHERE song.Sales > 'terminal'
           medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
---
Exec  Fail medium pred: SELECT DISTINCT singer.Name FROM song JOIN singer WHERE song.Sales > 'terminal'
           medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
---
Exec  Fail medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY song.Singer_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
---
Exec  Fail medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY song.Singer_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
---
Exec  Fail medium pred: SELECT singer.Name, Sum(song.Sales) FROM song JOIN singer GROUP BY song.Singer_ID
           medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
---
Exec  Fail medium pred: SELECT singer.Name, Sum(song.Sales) FROM song JOIN singer GROUP BY singer.Name
           medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
---
Exec  OK   hard pred: SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN (SELECT song.Singer_ID FROM song)
           hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
---
Exec  Fail hard pred: SELECT song.Title FROM song WHERE song.Song_ID NOT IN (SELECT song.Singer_ID FROM song)
           hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 'terminal'
           hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 'terminal'
           hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
---
Exec  OK   easy pred: SELECT Count(*) FROM Other_Available_Features
           easy gold: SELECT count(*) FROM Other_Available_Features
---
Exec  Fail medium pred: SELECT Ref_Feature_Types.feature_type_name FROM Other_Available_Features JOIN Ref_Feature_Types WHERE Other_Available_Features.feature_name = 'terminal'
           medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
---
Exec  OK   medium pred: SELECT Ref_Property_Types.property_type_description FROM Ref_Property_Types
           medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
---
Exec  Fail hard pred: SELECT Properties.property_name FROM Properties WHERE Properties.property_type_code = 'terminal' OR Properties.room_count > 'terminal'
           hard gold: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  Fail medium pred: SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Asc
           medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Desc
           medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
---
Exec  OK   medium pred: SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Country = 'terminal'
           medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
---
Exec  OK   medium pred: SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Country = 'terminal'
           medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
---
Exec  OK   medium pred: SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age Asc LIMIT 1
           medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
---
Exec  OK   medium pred: SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age Asc LIMIT 1
           medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
---
Exec  OK   easy pred: SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
           easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20
---
Exec  OK   easy pred: SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
           easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20
---
Exec  OK   medium pred: SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
           medium gold: SELECT country ,  count(*) FROM singer GROUP BY country
---
Exec  OK   medium pred: SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
           medium gold: SELECT country ,  count(*) FROM singer GROUP BY country
---
Exec  OK   hard pred: SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
           hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
---
Exec  OK   hard pred: SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
           hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
---
Exec  OK   medium pred: SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'
           medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
---
Exec  OK   medium pred: SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'
           medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
---
Exec  Fail medium pred: SELECT Max(stadium.Capacity), Avg(stadium.Capacity) FROM stadium
           medium gold: select max(capacity), average from stadium
---
Exec  OK   medium pred: SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium
           medium gold: select avg(capacity) ,  max(capacity) from stadium
---
Exec  OK   medium pred: SELECT stadium.Name, stadium.Capacity FROM stadium GROUP BY stadium.Average ORDER BY Avg(stadium.Average) Desc LIMIT 1
           medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
---
Exec  OK   medium pred: SELECT stadium.Name, stadium.Capacity FROM stadium GROUP BY stadium.Average ORDER BY Avg(stadium.Average) Desc LIMIT 1
           medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
---
Exec  OK   medium pred: SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
---
Exec  Fail medium pred: SELECT stadium.Name, Count(*) FROM stadium JOIN concert GROUP BY concert.Stadium_ID
           medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
---
Exec  Fail medium pred: SELECT stadium.Stadium_ID, Count(*) FROM concert JOIN stadium GROUP BY stadium.Stadium_ID
           medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert WHERE concert.Year >= 'terminal' GROUP BY concert.Stadium_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Capacity FROM concert JOIN stadium WHERE concert.Year > 'terminal' GROUP BY concert.Stadium_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1
---
Exec  OK   hard pred: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)
           hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
---
Exec  OK   hard pred: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)
           hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
---
Exec  OK   hard pred: SELECT singer.Country FROM singer WHERE singer.Age > 'terminal' INTERSECT SELECT singer.Country FROM singer WHERE singer.Age < 'terminal'
           hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
---
Exec  Fail hard pred: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
---
Exec  Fail hard pred: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM concert JOIN stadium WHERE concert.Year = 'terminal'
           hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
---
Exec  Fail medium pred: SELECT concert.concert_Name, concert.Theme, Count(*) FROM concert JOIN singer_in_concert GROUP BY concert.concert_Name
           medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
---
Exec  Fail medium pred: SELECT concert.Theme, concert.Theme, Count(*) FROM singer_in_concert JOIN concert JOIN singer GROUP BY singer_in_concert.Singer_ID
           medium gold: select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id
---
Exec  Fail medium pred: SELECT singer.Name, Count(*) FROM singer_in_concert JOIN singer GROUP BY singer_in_concert.Singer_ID
           medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
---
Exec  Fail medium pred: SELECT singer.Name, Count(*) FROM singer_in_concert JOIN singer GROUP BY singer_in_concert.Singer_ID
           medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
---
Exec  Fail hard pred: SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
---
Exec  Fail hard pred: SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
---
Exec  Fail medium pred: SELECT singer.Name, singer.Is_male FROM singer WHERE singer.Song_Name LIKE 'terminal'
           medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE 'terminal'
           medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal' INTERSECT SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal'
           extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
---
Exec  Fail hard pred: SELECT Count(*) FROM concert JOIN stadium ORDER BY stadium.Capacity Desc LIMIT 1
           hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
---
Exec  Fail hard pred: SELECT Count(*) FROM concert JOIN stadium WHERE stadium.Capacity = (SELECT Max(stadium.Capacity) FROM stadium)
           hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
---
Exec  OK   easy pred: SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
           easy gold: SELECT count(*) FROM pets WHERE weight  >  10
---
Exec  OK   easy pred: SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
           easy gold: SELECT count(*) FROM pets WHERE weight  >  10
---
Exec  OK   medium pred: SELECT Pets.weight FROM Pets WHERE Pets.pet_age = 'terminal' ORDER BY Pets.weight Asc LIMIT 1
           medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Pets.weight FROM Pets WHERE Pets.pet_age = 'terminal' ORDER BY Pets.weight Asc LIMIT 1
           medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Pets.PetType, Max(Pets.weight) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType
---
Exec  OK   medium pred: SELECT Max(Pets.weight), Max(Pets.PetType) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType
---
Exec  OK   medium pred: SELECT Count(*) FROM Has_Pet JOIN Student JOIN Pets WHERE Student.Age > 'terminal'
           medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
---
Exec  OK   medium pred: SELECT Count(*) FROM Has_Pet JOIN Student JOIN Pets WHERE Student.Age > 'terminal'
           medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
---
Exec  Fail hard pred: SELECT Count(*) FROM Has_Pet JOIN Student WHERE Student.Sex = 'terminal'
           hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
---
Exec  Fail hard pred: SELECT Count(*) FROM Has_Pet JOIN Student WHERE Student.Sex = 'terminal'
           hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
---
Exec  OK   easy pred: SELECT Count(DISTINCT Pets.PetType) FROM Pets
           easy gold: SELECT count(DISTINCT pettype) FROM pets
---
Exec  OK   easy pred: SELECT Count(DISTINCT Pets.PetType) FROM Pets
           easy gold: SELECT count(DISTINCT pettype) FROM pets
---
Exec  Fail extra pred: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'
           extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'
           extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT Student.Fname FROM Has_Pet JOIN Student JOIN Pets WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT Student.Fname FROM Has_Pet JOIN Student JOIN Pets WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet WHERE Pets.PetType = 'terminal')
           extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail extra pred: SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal')
           extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail hard pred: SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet WHERE Has_Pet.PetID = 'terminal'
           hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
---
Exec  Fail hard pred: SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
---
Exec  Fail extra pred: SELECT Student.Fname, Student.Age FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.PetType = 'terminal' EXCEPT SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.PetType = 'terminal')
           extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail extra pred: SELECT Student.Fname FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.PetType = 'terminal' EXCEPT SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.PetType = 'terminal')
           extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  OK   medium pred: SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 'terminal'
           medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
---
Exec  Fail medium pred: SELECT Pets.PetID, Pets.weight FROM Pets JOIN Has_Pet GROUP BY Has_Pet.PetID HAVING Count(*) > 'terminal'
           medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
---
Exec  Fail medium pred: SELECT Pets.PetType, Avg(Student.Age), Max(Student.Age) FROM Pets JOIN Has_Pet JOIN Student GROUP BY Pets.PetType
           medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
---
Exec  OK   medium pred: SELECT Pets.PetType, Avg(Pets.pet_age), Max(Pets.pet_age) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
---
Exec  OK   medium pred: SELECT Avg(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
---
Exec  OK   medium pred: SELECT Avg(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
---
Exec  Fail medium pred: SELECT DISTINCT Student.Fname, Student.Age FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal')
           medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
---
Exec  Fail medium pred: SELECT DISTINCT Student.Fname, Student.Age FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
---
Exec  Fail medium pred: SELECT Has_Pet.PetID FROM Has_Pet JOIN Pets JOIN Student WHERE Student.LName = 'terminal'
           medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
---
Exec  Fail medium pred: SELECT Has_Pet.PetID FROM Has_Pet JOIN Student JOIN Pets WHERE Student.LName = 'terminal'
           medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
---
Exec  OK   medium pred: SELECT Count(*), Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID
           medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
---
Exec  Fail medium pred: SELECT Student.Fname, Count(*) FROM Student JOIN Has_Pet GROUP BY Student.StuID ORDER BY Count(*) Asc
           medium gold: select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid
---
Exec  Fail medium pred: SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet GROUP BY Has_Pet.StuID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
---
Exec  Fail medium pred: SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet GROUP BY Has_Pet.StuID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
---
Exec  Fail hard pred: SELECT Student.LName FROM Has_Pet JOIN Student WHERE Student.Age = 'terminal'
           hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
---
Exec  Fail hard pred: SELECT Student.LName FROM Has_Pet JOIN Student WHERE Student.Age = 'terminal'
           hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
---
Exec  OK   extra pred: SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)
           extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)
---
Exec  OK   extra pred: SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)
           extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)
---
Exec  OK   easy pred: SELECT Count(*) FROM continents
           easy gold: SELECT count(*) FROM CONTINENTS;
---
Exec  OK   easy pred: SELECT Count(*) FROM continents
           easy gold: SELECT count(*) FROM CONTINENTS;
---
Exec  Fail medium pred: SELECT continents.Continent, continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.Continent
           medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
---
Exec  Fail medium pred: SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.ContId
           medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
---
Exec  OK   easy pred: SELECT Count(*) FROM countries
           easy gold: SELECT count(*) FROM COUNTRIES;
---
Exec  OK   easy pred: SELECT Count(*) FROM countries
           easy gold: SELECT count(*) FROM COUNTRIES;
---
Exec  Fail medium pred: SELECT car_makers.FullName, car_makers.Id, Count(*) FROM car_makers JOIN model_list GROUP BY car_makers.Maker
           medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
---
Exec  Fail medium pred: SELECT car_makers.FullName, car_makers.FullName, Count(*) FROM car_makers JOIN model_list GROUP BY car_makers.Id
           medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
---
Exec  OK   hard pred: SELECT model_list.Model FROM car_names JOIN cars_data JOIN model_list ORDER BY cars_data.Horsepower Asc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
---
Exec  OK   hard pred: SELECT model_list.Model FROM car_names JOIN cars_data JOIN model_list ORDER BY cars_data.Horsepower Asc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
---
Exec  Fail extra pred: SELECT car_names.Model FROM cars_data WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
           extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
---
Exec  Fail extra pred: SELECT model_list.Model FROM cars_data WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
           extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
---
Exec  Fail extra pred: SELECT car_makers.Maker FROM car_makers JOIN cars_data WHERE cars_data.Year = 'terminal'
           extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
---
Exec  Fail extra pred: SELECT DISTINCT car_makers.Maker FROM car_makers JOIN cars_data JOIN model_list WHERE cars_data.Year = 'terminal'
           extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
---
Exec  Fail extra pred: SELECT cars_data.Weight, cars_data.Year FROM cars_data ORDER BY cars_data.Year Asc
           extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
---
Exec  Fail extra pred: SELECT car_makers.Maker, cars_data.Year FROM cars_data JOIN car_makers JOIN car_names ORDER BY cars_data.Year Asc
           extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
---
Exec  Fail hard pred: SELECT DISTINCT model_list.Model FROM model_list JOIN cars_data WHERE cars_data.Year > 'terminal'
           hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
---
Exec  Fail hard pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_names JOIN cars_data WHERE cars_data.Year > 'terminal'
           hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
---
Exec  Fail hard pred: SELECT continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.Continent
           hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
---
Exec  Fail hard pred: SELECT continents.Continent, Count(*) FROM continents GROUP BY continents.Continent
           hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
---
Exec  Fail medium pred: SELECT Count(*), car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Maker
           medium gold: select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
---
Exec  Fail medium pred: SELECT Count(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list GROUP BY car_makers.Id
           medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
---
Exec  Fail medium pred: SELECT cars_data.Accelerate FROM car_names JOIN cars_data WHERE car_names.Make = 'terminal'
           medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
---
Exec  Fail medium pred: SELECT cars_data.Accelerate FROM car_names JOIN cars_data WHERE car_names.Model = 'terminal'
           medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
---
Exec  Fail medium pred: SELECT Count(*) FROM countries JOIN continents WHERE countries.CountryName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
---
Exec  Fail medium pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
---
Exec  Fail hard pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
---
Exec  Fail hard pred: SELECT Count(*) FROM car_makers WHERE car_makers.Country = 'terminal'
           hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
---
Exec  OK   easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
---
Exec  OK   easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
---
Exec  OK   medium pred: SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal' AND cars_data.Year = 'terminal'
           medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
---
Exec  OK   medium pred: SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal' AND cars_data.Year = 'terminal'
           medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
---
Exec  Fail medium pred: SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list
           medium gold: SELECT Maker ,  Model FROM MODEL_LIST;
---
Exec  Fail medium pred: SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list
           medium gold: SELECT Maker ,  Model FROM MODEL_LIST;
---
Exec  Fail medium pred: SELECT countries.CountryName, car_makers.Id FROM car_makers JOIN countries
           medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
---
Exec  Fail medium pred: SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers
           medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
---
Exec  OK   medium pred: SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
           medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
---
Exec  Fail medium pred: SELECT Avg(cars_data.Weight), Avg(cars_data.Year), cars_data.Year FROM cars_data GROUP BY cars_data.Year
           medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
---
Exec  Fail extra pred: SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING Count(*) >= 'terminal'
           extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY car_makers.Country HAVING Count(*) >= 'terminal'
           extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
---
Exec  Fail extra pred: SELECT Max(cars_data.Horsepower), Max(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT Max(cars_data.Horsepower), cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT model_list.Model FROM cars_data JOIN car_names JOIN model_list GROUP BY model_list.Model ORDER BY Sum(cars_data.MPG) Desc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT car_names.Model FROM car_names JOIN cars_data ORDER BY cars_data.MPG Desc LIMIT 1
           hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
---
Exec  OK   easy pred: SELECT Avg(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 'terminal'
           easy gold: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
---
Exec  OK   easy pred: SELECT Avg(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 'terminal'
           easy gold: select avg(horsepower) from cars_data where year  <  1980;
---
Exec  Fail medium pred: SELECT Avg(cars_data.Edispl) FROM car_names JOIN cars_data WHERE car_names.Model = 'terminal'
           medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
---
Exec  Fail medium pred: SELECT Avg(cars_data.Edispl) FROM cars_data
           medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
---
Exec  OK   medium pred: SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
           medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
---
Exec  Fail medium pred: SELECT Max(cars_data.Accelerate) FROM cars_data
           medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
---
Exec  Fail hard pred: SELECT model_list.Model FROM car_names JOIN model_list GROUP BY car_names.Model ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Year = 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
---
Exec  Fail easy pred: SELECT Count(*) FROM cars_data JOIN car_makers WHERE cars_data.Year = 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
---
Exec  Fail medium pred: SELECT Count(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
---
Exec  Fail medium pred: SELECT Count(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
---
Exec  Fail medium pred: SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail medium pred: SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list GROUP BY model_list.Maker HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM car_names WHERE car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
           extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers JOIN cars_data WHERE car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
           extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
---
Exec  OK   easy pred: SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight BETWEEN 'terminal' AND 'terminal'
           easy gold: select distinct year from cars_data where weight between 3000 and 4000;
---
Exec  Fail easy pred: SELECT DISTINCT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
           easy gold: select distinct year from cars_data where weight between 3000 and 4000;
---
Exec  OK   medium pred: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1
           medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
---
Exec  OK   medium pred: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1
           medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT cars_data.Cylinders, cars_data.Cylinders FROM car_names JOIN cars_data WHERE car_names.Model = 'terminal' ORDER BY cars_data.Accelerate Asc LIMIT 1
           extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
---
Exec  Fail extra pred: SELECT cars_data.Cylinders, cars_data.Cylinders FROM car_names JOIN cars_data JOIN model_list WHERE model_list.Model = 'terminal' ORDER BY cars_data.Accelerate Asc LIMIT 1
           extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
---
Exec  Fail hard pred: SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data)
           hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
---
Exec  Fail hard pred: SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data WHERE cars_data.Horsepower = (SELECT Max(cars_data.Accelerate) FROM cars_data))
           hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
---
Exec  Fail medium pred: SELECT Count(*) FROM car_makers
           medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
---
Exec  OK   medium pred: SELECT Count(*) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 'terminal'
           medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
---
Exec  Fail extra pred: SELECT model_list.Model FROM car_names JOIN cars_data JOIN model_list WHERE cars_data.Cylinders = 'terminal' ORDER BY cars_data.Horsepower Desc LIMIT 1
           extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT model_list.Model FROM car_names WHERE cars_data.Cylinders = 'terminal' ORDER BY cars_data.Cylinders Desc LIMIT 1
           extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT car_names.Model, car_names.Make FROM car_names JOIN cars_data WHERE cars_data.Cylinders > 'terminal'
           extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
---
Exec  Fail extra pred: SELECT cars_data.Id, car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Cylinders != 'terminal'
           extra gold: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
---
Exec  OK   medium pred: SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Year < 'terminal'
           medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
---
Exec  OK   medium pred: SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Year < 'terminal'
           medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
---
Exec  Fail extra pred: SELECT model_list.Model FROM model_list JOIN car_makers WHERE cars_data.Weight < 'terminal' EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.Maker = 'terminal'
           extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_names WHERE cars_data.Weight < 'terminal' EXCEPT SELECT DISTINCT model_list.Model FROM model_list JOIN car_names WHERE car_makers.Maker = 'terminal'
           extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
---
Exec  OK   hard pred: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
           hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
---
Exec  OK   hard pred: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
           hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
---
Exec  Fail extra pred: SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           extra gold: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
---
Exec  Fail extra pred: SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail extra pred: SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryId HAVING Count(*) > 'terminal' UNION SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers WHERE model_list.Model = 'terminal' GROUP BY countries.CountryId HAVING Count(*) > 'terminal'
           extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
---
Exec  Fail extra pred: SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryId HAVING Count(*) > 'terminal' UNION SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers WHERE car_makers.Maker = 'terminal' GROUP BY countries.CountryId HAVING Count(*) > 'terminal'
           extra gold: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
---
Exec  OK   easy pred: SELECT airlines.Country FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Country FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   medium pred: SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'terminal'
           medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'terminal'
           medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'terminal'
           medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
---
Exec  OK   medium pred: SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'terminal'
           medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines
           easy gold: SELECT count(*) FROM AIRLINES
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines
           easy gold: SELECT count(*) FROM AIRLINES
---
Exec  OK   easy pred: SELECT Count(*) FROM airports
           easy gold: SELECT count(*) FROM AIRPORTS
---
Exec  OK   easy pred: SELECT Count(*) FROM airports
           easy gold: SELECT count(*) FROM AIRPORTS
---
Exec  OK   easy pred: SELECT Count(*) FROM flights
           easy gold: SELECT count(*) FROM FLIGHTS
---
Exec  OK   easy pred: SELECT Count(*) FROM flights
           easy gold: SELECT count(*) FROM FLIGHTS
---
Exec  OK   easy pred: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation LIKE 'terminal'
           easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
---
Exec  OK   easy pred: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = 'terminal'
           easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'
           easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'
           easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'
           medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
---
Exec  OK   medium pred: SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'
           medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.DestAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
---
Exec  OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' AND airports.City = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' AND airports.AirportName = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
---
Exec  Fail medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
---
Exec  Fail medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
---
Exec  OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE flights.SourceAirport = 'terminal' AND flights.SourceAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
---
Exec  OK   medium pred: SELECT Count(*) FROM airlines JOIN airports WHERE airports.AirportCode = 'terminal' AND airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
---
Exec  OK   medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal' AND flights.SourceAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT Count(*) FROM airlines JOIN airports JOIN flights WHERE airports.AirportName = 'terminal' AND flights.SourceAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
---
Exec  OK   hard pred: SELECT Count(*) FROM airlines JOIN airports JOIN flights WHERE airports.City = 'terminal' AND airlines.Airline = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
---
Exec  OK   hard pred: SELECT Count(*) FROM airlines JOIN flights JOIN airports WHERE airports.City = 'terminal' AND airlines.Airline = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
---
Exec  Fail extra pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY airports.AirportName ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights GROUP BY flights.Airline ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
---
Exec  Fail extra pred: SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights GROUP BY airlines.Country ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.DestAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.DestAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights JOIN airports WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights JOIN airports WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights JOIN airports WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights JOIN airports WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' EXCEPT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' EXCEPT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.FlightNo >= 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.FlightNo < 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.FlightNo < 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
---
Exec  Fail medium pred: SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
---
Exec  Fail medium pred: SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM airports JOIN flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.AirportCode = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' OR airports.City = 'terminal'
           hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' OR airports.City = 'terminal'
           hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
---
Exec  Fail hard pred: SELECT airports.AirportName FROM airports EXCEPT SELECT airports.AirportName FROM airports JOIN flights WHERE flights.FlightNo = 'terminal'
           hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
---
Exec  OK   hard pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode NOT IN (SELECT flights.DestAirport FROM flights)
           hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
---
Exec  OK   easy pred: SELECT Count(*) FROM employee
           easy gold: SELECT count(*) FROM employee
---
Exec  OK   easy pred: SELECT Count(*) FROM employee
           easy gold: SELECT count(*) FROM employee
---
Exec  OK   easy pred: SELECT employee.Name FROM employee ORDER BY employee.Age Asc
           easy gold: SELECT name FROM employee ORDER BY age
---
Exec  OK   easy pred: SELECT employee.Name FROM employee ORDER BY employee.Age Asc
           easy gold: SELECT name FROM employee ORDER BY age
---
Exec  OK   medium pred: SELECT employee.City, Count(*) FROM employee GROUP BY employee.City
           medium gold: SELECT count(*) ,  city FROM employee GROUP BY city
---
Exec  OK   medium pred: SELECT employee.City, Count(*) FROM employee GROUP BY employee.City
           medium gold: SELECT count(*) ,  city FROM employee GROUP BY city
---
Exec  Fail medium pred: SELECT employee.City FROM employee WHERE employee.Age < 'terminal'
           medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
---
Exec  OK   medium pred: SELECT employee.City FROM employee WHERE employee.Age < 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
           medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
---
Exec  OK   medium pred: SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location
           medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
---
Exec  OK   medium pred: SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location
           medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
---
Exec  OK   medium pred: SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1
           medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
---
Exec  OK   medium pred: SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1
           medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Min(shop.Number_products), Max(shop.Number_products) FROM shop
           medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop
---
Exec  OK   medium pred: SELECT Min(shop.Number_products), Max(shop.Number_products) FROM shop
           medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop
---
Exec  OK   medium pred: SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products Desc
           medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
---
Exec  OK   medium pred: SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products Desc
           medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT Avg(shop.Number_products) FROM shop)
           hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT Avg(shop.Number_products) FROM shop)
           hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
---
Exec  OK   extra pred: SELECT employee.Name FROM employee JOIN evaluation GROUP BY evaluation.Employee_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT employee.Name FROM employee JOIN evaluation GROUP BY employee.Employee_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT employee.Name FROM employee JOIN evaluation ORDER BY evaluation.Bonus Desc LIMIT 1
           hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
---
Exec  Fail hard pred: SELECT employee.Name FROM employee JOIN evaluation ORDER BY evaluation.Bonus Desc LIMIT 1
           hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
---
Exec  OK   hard pred: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)
           hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
---
Exec  OK   hard pred: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)
           hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
---
Exec  OK   extra pred: SELECT shop.Name FROM hiring JOIN shop GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT shop.Name FROM shop JOIN hiring GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)
           hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)
           hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
---
Exec  Fail medium pred: SELECT hiring.Start_from, Count(*) FROM hiring JOIN employee GROUP BY hiring.Start_from
           medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
---
Exec  Fail medium pred: SELECT shop.Name, Count(*) FROM hiring JOIN shop GROUP BY shop.Name
           medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
---
Exec  OK   easy pred: SELECT Sum(evaluation.Bonus) FROM evaluation
           easy gold: SELECT sum(bonus) FROM evaluation
---
Exec  OK   easy pred: SELECT Sum(evaluation.Bonus) FROM evaluation
           easy gold: SELECT sum(bonus) FROM evaluation
---
Exec  OK   easy pred: SELECT * FROM hiring
           easy gold: SELECT * FROM hiring
---
Exec  OK   easy pred: SELECT * FROM hiring
           easy gold: SELECT * FROM hiring
---
Exec  OK   hard pred: SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal' INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal'
           hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
---
Exec  OK   hard pred: SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal' INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal'
           hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
---
Exec  OK   easy pred: SELECT Count(DISTINCT shop.Location) FROM shop
           easy gold: SELECT count(DISTINCT LOCATION) FROM shop
---
Exec  OK   easy pred: SELECT Count(DISTINCT shop.Location) FROM shop
           easy gold: SELECT count(DISTINCT LOCATION) FROM shop
---
Exec  OK   easy pred: SELECT Count(*) FROM Documents
           easy gold: SELECT count(*) FROM Documents
---
Exec  OK   easy pred: SELECT Count(*) FROM Documents
           easy gold: SELECT count(*) FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents
           medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents
           medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'
           medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
---
Exec  OK   medium pred: SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'
           medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
---
Exec  Fail easy pred: SELECT Count(DISTINCT Templates.Template_Type_Code) FROM Templates
           easy gold: SELECT count(DISTINCT template_id) FROM Documents
---
Exec  Fail easy pred: SELECT Count(DISTINCT Templates.Template_Type_Code) FROM Templates
           easy gold: SELECT count(DISTINCT template_id) FROM Documents
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
---
Exec  OK   medium pred: SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID
           medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
---
Exec  OK   medium pred: SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID
           medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
---
Exec  Fail extra pred: SELECT Templates.Template_Type_Code, Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Templates.Template_Type_Code, Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Documents.Template_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'
           easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
---
Exec  OK   easy pred: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'
           easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
---
Exec  OK   hard pred: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
           hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
---
Exec  OK   hard pred: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
           hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(*) FROM Templates
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(*) FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates
---
Exec  OK   easy pred: SELECT DISTINCT Templates.Template_Type_Code FROM Templates
           easy gold: SELECT DISTINCT template_type_code FROM Templates
---
Exec  OK   easy pred: SELECT DISTINCT Templates.Template_Type_Code FROM Templates
           easy gold: SELECT DISTINCT template_type_code FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
---
Exec  OK   medium pred: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'
           easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'
           easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
---
Exec  OK   medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 'terminal'
           medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
---
Exec  OK   medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 'terminal'
           medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
---
Exec  OK   medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
---
Exec  OK   medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
---
Exec  OK   hard pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) < 'terminal'
           easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
---
Exec  OK   easy pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) < 'terminal'
           easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
---
Exec  Fail medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Asc LIMIT 1
           medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates
---
Exec  Fail medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Asc LIMIT 1
           medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
---
Exec  Fail medium pred: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
---
Exec  Fail medium pred: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
---
Exec  Fail extra pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates
           hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
---
Exec  Fail hard pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates
           hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
---
Exec  OK   medium pred: SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
           medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types
---
Exec  OK   medium pred: SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
           medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'
           easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'
           easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
---
Exec  Fail medium pred: SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates JOIN Documents
           medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
---
Exec  Fail medium pred: SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates JOIN Documents
           medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
---
Exec  Fail medium pred: SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
---
Exec  Fail medium pred: SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
---
Exec  OK   easy pred: SELECT Count(*) FROM Paragraphs
           easy gold: SELECT count(*) FROM Paragraphs
---
Exec  OK   easy pred: SELECT Count(*) FROM Paragraphs
           easy gold: SELECT count(*) FROM Paragraphs
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_Text FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE 'terminal'
           medium gold: select other_details from paragraphs where paragraph_text like 'korea'
---
Exec  OK   medium pred: SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE 'terminal'
           medium gold: select other_details from paragraphs where paragraph_text like 'korea'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_Text FROM Paragraphs WHERE Paragraphs.Document_ID = 'terminal'
           medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
---
Exec  OK   medium pred: SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID
           medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
---
Exec  Fail medium pred: SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc
           medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
---
Exec  Fail medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID
           medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
---
Exec  Fail medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID
           medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
---
Exec  OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
---
Exec  OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Document_ID BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
---
Exec  OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs JOIN Documents WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Paragraphs.Document_ID FROM Paragraphs JOIN Documents WHERE Paragraphs.Paragraph_Text = 'terminal'
           hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Documents JOIN Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Paragraphs.Document_ID FROM Paragraphs JOIN Documents WHERE Paragraphs.Paragraph_Text = 'terminal'
           hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
---
Exec  OK   easy pred: SELECT Count(*) FROM teacher
           easy gold: SELECT count(*) FROM teacher
---
Exec  OK   easy pred: SELECT Count(*) FROM teacher
           easy gold: SELECT count(*) FROM teacher
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher ORDER BY teacher.Age Asc
           easy gold: SELECT Name FROM teacher ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher ORDER BY teacher.Age Asc
           easy gold: SELECT Name FROM teacher ORDER BY Age ASC
---
Exec  OK   medium pred: SELECT DISTINCT teacher.Age, teacher.Hometown FROM teacher
           medium gold: SELECT Age ,  Hometown FROM teacher
---
Exec  OK   medium pred: SELECT DISTINCT teacher.Age, teacher.Hometown FROM teacher
           medium gold: SELECT Age ,  Hometown FROM teacher
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'
           easy gold: select name from teacher where hometown != "little lever urban district"
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'
           easy gold: select name from teacher where hometown != "little lever urban district"
---
Exec  OK   medium pred: SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'
           medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
---
Exec  OK   medium pred: SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'
           medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
---
Exec  OK   medium pred: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age Asc LIMIT 1
           medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
---
Exec  OK   medium pred: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age Asc LIMIT 1
           medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
---
Exec  OK   medium pred: SELECT teacher.Hometown, Count(*) FROM teacher GROUP BY teacher.Hometown
           medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
---
Exec  OK   medium pred: SELECT Count(*), teacher.Hometown FROM teacher GROUP BY teacher.Hometown
           medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
---
Exec  OK   hard pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING Count(*) >= 'terminal'
           easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
---
Exec  OK   easy pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING Count(*) >= 'terminal'
           easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
---
Exec  Fail medium pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN teacher JOIN course
           medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
---
Exec  Fail medium pred: SELECT teacher.Name, course.Course FROM course JOIN course_arrange JOIN teacher
           medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
---
Exec  Fail hard pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN course JOIN teacher ORDER BY teacher.Name Asc
           hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
---
Exec  Fail hard pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN teacher JOIN course ORDER BY teacher.Name Asc
           hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
---
Exec  Fail hard pred: SELECT teacher.Name FROM course JOIN course_arrange JOIN teacher WHERE course.Course = 'terminal'
           hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
---
Exec  Fail hard pred: SELECT DISTINCT teacher.Name FROM course JOIN course_arrange JOIN teacher WHERE course.Course = 'terminal'
           hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
---
Exec  Fail medium pred: SELECT teacher.Name, Count(*) FROM course_arrange JOIN teacher GROUP BY teacher.Name
           medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
---
Exec  Fail medium pred: SELECT teacher.Name, Count(*) FROM course_arrange JOIN teacher GROUP BY teacher.Name
           medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
---
Exec  Fail medium pred: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
---
Exec  Fail medium pred: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
---
Exec  OK   hard pred: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)
           hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
---
Exec  OK   hard pred: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)
           hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
---
Exec  OK   easy pred: SELECT Count(*) FROM visitor WHERE visitor.Age < 'terminal'
           easy gold: SELECT count(*) FROM visitor WHERE age  <  30
---
Exec  OK   medium pred: SELECT visitor.Name FROM visitor WHERE visitor.Level_of_membership > 'terminal' ORDER BY visitor.Level_of_membership Desc
           medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
---
Exec  OK   easy pred: SELECT Avg(visitor.Age) FROM visitor WHERE visitor.Level_of_membership <= 'terminal'
           easy gold: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
---
Exec  Fail medium pred: SELECT visitor.Name, visitor.Level_of_membership FROM visitor WHERE visitor.Age > 'terminal' ORDER BY visitor.Age Asc
           medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
---
Exec  OK   medium pred: SELECT museum.Museum_ID, museum.Name FROM museum ORDER BY museum.Num_of_Staff Desc LIMIT 1
           medium gold: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Avg(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year < 'terminal'
           easy gold: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
---
Exec  OK   medium pred: SELECT museum.Open_Year, museum.Num_of_Staff FROM museum WHERE museum.Name = 'terminal'
           medium gold: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
---
Exec  Fail hard pred: SELECT museum.Name FROM museum WHERE museum.Num_of_Staff > 'terminal'
           hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
---
Exec  Fail medium pred: SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID HAVING Count(*) > 'terminal'
           medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1
---
Exec  Fail extra pred: SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit GROUP BY visit.visitor_ID ORDER BY Sum(visit.Total_spent) Desc LIMIT 1
           extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit GROUP BY visit.Museum_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT museum.Name FROM museum WHERE museum.Museum_ID NOT IN (SELECT visit.Museum_ID FROM visit)
           hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
---
Exec  Fail hard pred: SELECT visitor.Name, visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Avg(visit.Num_of_Ticket), Max(visit.Num_of_Ticket) FROM visit
           medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
---
Exec  Fail medium pred: SELECT Sum(visit.Total_spent) FROM visitor JOIN visit WHERE visitor.Level_of_membership = 'terminal'
           medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
---
Exec  Fail extra pred: SELECT visitor.Name FROM visitor JOIN visit JOIN museum WHERE museum.Open_Year < 'terminal' INTERSECT SELECT visitor.Name FROM visitor JOIN visit JOIN museum WHERE museum.Open_Year > 'terminal'
           extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
---
Exec  Fail extra pred: SELECT Count(*) FROM visitor WHERE visit.Museum_ID NOT IN (SELECT visit.Museum_ID FROM museum WHERE museum.Open_Year > 'terminal')
           extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
---
Exec  OK   medium pred: SELECT Count(*) FROM museum WHERE museum.Open_Year > 'terminal' OR museum.Open_Year < 'terminal'
           medium gold: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
---
Exec  OK   easy pred: SELECT Count(*) FROM players
           easy gold: SELECT count(*) FROM players
---
Exec  OK   easy pred: SELECT Count(*) FROM players
           easy gold: SELECT count(*) FROM players
---
Exec  OK   easy pred: SELECT Count(*) FROM matches
           easy gold: SELECT count(*) FROM matches
---
Exec  OK   easy pred: SELECT Count(*) FROM matches
           easy gold: SELECT count(*) FROM matches
---
Exec  OK   medium pred: SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal' OR players.country_code = 'terminal'
           medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
---
Exec  OK   medium pred: SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal'
           medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
---
Exec  Fail medium pred: SELECT Avg(matches.winner_age) FROM matches
           medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
---
Exec  Fail medium pred: SELECT Avg(matches.loser_age) FROM matches
           medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
---
Exec  Fail easy pred: SELECT Avg(rankings.ranking_points) FROM rankings
           easy gold: SELECT avg(winner_rank) FROM matches
---
Exec  Fail easy pred: SELECT Avg(rankings.ranking) FROM rankings
           easy gold: SELECT avg(winner_rank) FROM matches
---
Exec  Fail easy pred: SELECT Max(rankings.ranking) FROM rankings
           easy gold: SELECT min(loser_rank) FROM matches
---
Exec  Fail easy pred: SELECT Max(rankings.ranking) FROM rankings
           easy gold: SELECT min(loser_rank) FROM matches
---
Exec  OK   easy pred: SELECT Count(DISTINCT players.country_code) FROM players
           easy gold: SELECT count(DISTINCT country_code) FROM players
---
Exec  OK   easy pred: SELECT Count(DISTINCT players.country_code) FROM players
           easy gold: SELECT count(DISTINCT country_code) FROM players
---
Exec  OK   easy pred: SELECT Count(DISTINCT matches.winner_name) FROM matches
           easy gold: SELECT count(DISTINCT loser_name) FROM matches
---
Exec  OK   easy pred: SELECT Count(DISTINCT matches.winner_name) FROM matches
           easy gold: SELECT count(DISTINCT loser_name) FROM matches
---
Exec  OK   easy pred: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING Count(*) > 'terminal'
           easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
---
Exec  OK   easy pred: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING Count(*) > 'terminal'
           easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
---
Exec  OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.year = 'terminal' INTERSECT SELECT matches.winner_name FROM matches WHERE matches.year = 'terminal'
           hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
---
Exec  Fail hard pred: SELECT players.first_name FROM players JOIN matches WHERE matches.year = 'terminal' INTERSECT SELECT players.first_name FROM players JOIN matches WHERE matches.year = 'terminal'
           hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
---
Exec  Fail medium pred: SELECT Count(*), * FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
           medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
---
Exec  OK   medium pred: SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
           medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
---
Exec  Fail extra pred: SELECT players.country_code, players.first_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal' OR matches.tourney_name = 'terminal' INTERSECT SELECT players.country_code, players.first_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal'
           extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
---
Exec  Fail extra pred: SELECT players.first_name, players.country_code FROM matches JOIN players WHERE matches.tourney_name = 'terminal' OR matches.tourney_name = 'terminal' INTERSECT SELECT matches.winner_name, players.country_code FROM matches JOIN players WHERE matches.tourney_name = 'terminal'
           extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
---
Exec  OK   medium pred: SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Asc LIMIT 1
           medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
---
Exec  OK   medium pred: SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Asc LIMIT 1
           medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players WHERE players.hand = 'terminal' ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players WHERE players.hand = 'terminal' ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625335276.04825973722001510']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625335336.66068849828293542']' timed out after 60 seconds
Exec  Fail hard pred: SELECT players.first_name, players.country_code FROM rankings JOIN players GROUP BY rankings.player_id HAVING Count(*) > 'terminal'
           hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625335397.29841268888974419']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625335457.70207791056831873']' timed out after 60 seconds
Exec  Fail hard pred: SELECT players.first_name, players.country_code FROM players JOIN rankings GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.winner_name, matches.winner_rank_points FROM matches GROUP BY matches.winner_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625335518.23256098832292787']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625335578.30417189798098346']' timed out after 60 seconds
Exec  Fail hard pred: SELECT matches.winner_name, matches.winner_rank_points FROM rankings JOIN matches GROUP BY matches.winner_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT matches.winner_name, matches.winner_name FROM matches WHERE matches.tourney_name = 'terminal' ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = 'terminal' ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
---
Exec  Fail medium pred: SELECT matches.winner_name, matches.winner_ht FROM matches WHERE matches.minutes = (SELECT Max(matches.minutes) FROM matches)
           medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
---
Exec  Fail medium pred: SELECT matches.winner_name, players.last_name FROM players JOIN matches ORDER BY matches.minutes Desc LIMIT 1
           medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625335640.65817076194204702']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625335701.27100046070615769']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Avg(rankings.ranking_points) FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625335761.89292982226038628']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625335822.50556616742637800']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Avg(rankings.ranking_points) FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625335883.12550239650046301']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625335943.7432046960725256']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Sum(rankings.ranking_points) FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625336004.3676496686527812']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625336065.24682769590372001']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Sum(rankings.ranking_points) FROM rankings JOIN players GROUP BY rankings.player_id
           medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Exec  OK   medium pred: SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code
---
Exec  OK   medium pred: SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code
---
Exec  OK   hard pred: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT players.country_code FROM players GROUP BY players.country_code HAVING Count(*) > 'terminal'
           easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
---
Exec  Fail easy pred: SELECT players.country_code FROM players WHERE players.country_code > 'terminal'
           easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
---
Exec  Fail medium pred: SELECT rankings.ranking_date, Count(*) FROM rankings GROUP BY rankings.ranking_date
           medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
---
Exec  Fail medium pred: SELECT rankings.ranking_date, Sum(rankings.tours) FROM rankings GROUP BY rankings.ranking
           medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
---
Exec  OK   medium pred: SELECT matches.year, Count(*) FROM matches GROUP BY matches.year
           medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
---
Exec  OK   medium pred: SELECT matches.year, Count(*) FROM matches GROUP BY matches.year
           medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
---
Exec  Fail medium pred: SELECT matches.winner_name, matches.winner_age FROM matches ORDER BY matches.winner_age Asc LIMIT 1
           medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
---
Exec  Fail medium pred: SELECT matches.winner_name, rankings.ranking FROM matches ORDER BY matches.winner_age Asc LIMIT 1
           medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
---
Exec  Fail medium pred: SELECT Count(DISTINCT matches.winner_rank) FROM matches WHERE matches.tourney_name = 'terminal' AND matches.winner_rank = 'terminal'
           medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
---
Exec  Fail medium pred: SELECT Count(*) FROM matches WHERE matches.tourney_name = 'terminal'
           medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
---
Exec  Fail hard pred: SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN matches ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625336129.55448872821395785']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625336189.93340924964374848']' timed out after 60 seconds
Exec  Fail hard pred: SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
---
Exec  OK   medium pred: SELECT players.hand, Count(*) FROM players GROUP BY players.hand
           medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand
---
Exec  OK   medium pred: SELECT players.hand, Count(*) FROM players GROUP BY players.hand
           medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand
---
Exec  Fail easy pred: SELECT Count(*) FROM battle JOIN ship WHERE battle.result = 'terminal'
           easy gold: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
---
Exec  OK   medium pred: SELECT ship.name, ship.tonnage FROM ship ORDER BY ship.name Desc
           medium gold: SELECT name ,  tonnage FROM ship ORDER BY name DESC
---
Exec  Fail medium pred: SELECT battle.name, battle.date, battle.result FROM battle
           medium gold: SELECT name ,  date FROM battle
---
Exec  Fail medium pred: SELECT Max(death.killed), Min(death.killed), Min(death.killed) FROM death GROUP BY death.caused_by_ship_id
           medium gold: SELECT max(killed) ,  min(killed) FROM death
---
Exec  Fail easy pred: SELECT Avg(death.injured), death.caused_by_ship_id FROM death GROUP BY death.caused_by_ship_id
           easy gold: SELECT avg(injured) FROM death
---
Exec  Fail medium pred: SELECT death.killed, death.injured FROM death JOIN ship WHERE ship.tonnage = 'terminal'
           medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
---
Exec  OK   medium pred: SELECT battle.name, battle.result FROM battle WHERE battle.bulgarian_commander != 'terminal'
           medium gold: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
---
Exec  Fail medium pred: SELECT DISTINCT ship.id, battle.name FROM battle JOIN ship WHERE ship.ship_type = 'terminal'
           medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
---
Exec  Fail hard pred: SELECT battle.id, battle.name FROM battle JOIN ship JOIN death GROUP BY battle.id HAVING Sum(death.killed) > 'terminal'
           hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
---
Exec  Fail extra pred: SELECT ship.id, ship.name FROM ship JOIN death GROUP BY death.caused_by_ship_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT DISTINCT battle.name FROM battle WHERE battle.bulgarian_commander = 'terminal' AND battle.latin_commander = 'terminal'
           medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
---
Exec  OK   easy pred: SELECT Count(DISTINCT battle.result) FROM battle
           easy gold: SELECT count(DISTINCT RESULT) FROM battle
---
Exec  OK   extra pred: SELECT Count(*) FROM battle WHERE battle.id NOT IN (SELECT ship.lost_in_battle FROM ship WHERE ship.tonnage = 'terminal')
           extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );
---
Exec  Fail extra pred: SELECT battle.name, battle.date FROM ship JOIN battle WHERE ship.name = 'terminal' INTERSECT SELECT battle.name, battle.date FROM ship JOIN battle WHERE ship.name = 'terminal'
           extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
---
Exec  Fail extra pred: SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle WHERE battle.id NOT IN (SELECT ship.name FROM ship WHERE ship.lost_in_battle = 'terminal')
           extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
---
Exec  OK   medium pred: SELECT death.note FROM death WHERE death.note LIKE 'terminal'
           medium gold: SELECT note FROM death WHERE note LIKE '%East%'
---
Exec  Fail medium pred: SELECT Addresses.line_1 FROM Addresses INTERSECT SELECT Addresses.line_1 FROM Addresses
           medium gold: SELECT line_1 ,  line_2 FROM addresses
---
Exec  Fail medium pred: SELECT Addresses.line_1, Addresses.line_3 FROM Addresses
           medium gold: SELECT line_1 ,  line_2 FROM addresses
---
Exec  OK   easy pred: SELECT Count(*) FROM Courses
           easy gold: SELECT count(*) FROM Courses
---
Exec  OK   easy pred: SELECT Count(*) FROM Courses
           easy gold: SELECT count(*) FROM Courses
---
Exec  OK   easy pred: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'
           easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'
---
Exec  OK   easy pred: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'
           easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'
---
Exec  OK   easy pred: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'
           easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
---
Exec  OK   easy pred: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'
           easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
---
Exec  Fail extra pred: SELECT Departments.department_name, Departments.department_id FROM Departments JOIN Courses GROUP BY Departments.department_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Departments.department_name, Degree_Programs.department_id FROM Degree_Programs JOIN Departments GROUP BY Degree_Programs.department_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.department_id) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Departments.department_name) FROM Departments
           easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
---
Exec  OK   medium pred: SELECT Count(*) FROM Courses JOIN Departments WHERE Departments.department_name = 'terminal'
           medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
---
Exec  OK   medium pred: SELECT Count(*) FROM Departments JOIN Degree_Programs WHERE Departments.department_name = 'terminal'
           medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
---
Exec  OK   medium pred: SELECT Sections.section_name, Sections.section_description FROM Sections
           medium gold: SELECT section_name ,  section_description FROM Sections
---
Exec  OK   medium pred: SELECT Sections.section_name, Sections.section_description FROM Sections
           medium gold: SELECT section_name ,  section_description FROM Sections
---
Exec  Fail medium pred: SELECT Courses.course_name, Sections.course_id FROM Courses JOIN Sections GROUP BY Sections.course_id HAVING Count(*) <= 'terminal'
           medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
---
Exec  Fail medium pred: SELECT Courses.course_name, Sections.course_id FROM Courses JOIN Sections GROUP BY Sections.course_id HAVING Count(*) < 'terminal'
           medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
---
Exec  OK   easy pred: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Desc
           easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC
---
Exec  OK   easy pred: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Desc
           easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC
---
Exec  Fail extra pred: SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Student_Enrolment.semester_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Semesters.semester_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'
           medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
---
Exec  OK   medium pred: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'
           medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Student_Enrolment.student_enrolment_id FROM Students JOIN Student_Enrolment
           medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.student_id FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.student_id HAVING Count(*) = 'terminal'
           medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
---
Exec  Fail hard pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = 'terminal'
           hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
---
Exec  Fail hard pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = 'terminal'
           hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment GROUP BY Courses.course_name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment JOIN Transcripts GROUP BY Degree_Programs.degree_program_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Student_Enrolment.student_enrolment_id, Student_Enrolment_Courses.course_id FROM Student_Enrolment JOIN Student_Enrolment_Courses GROUP BY Student_Enrolment.student_enrolment_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Courses.course_id, * FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.student_id, Students.first_name, Students.last_name, Count(*) FROM Students JOIN Student_Enrolment GROUP BY Students.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN (SELECT Student_Enrolment.semester_id FROM Student_Enrolment)
           hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
---
Exec  OK   hard pred: SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN (SELECT Student_Enrolment.semester_id FROM Student_Enrolment)
           hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
---
Exec  Fail easy pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses
           easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
---
Exec  Fail easy pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses
           easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.last_name FROM Students WHERE Addresses.state_province_county = 'terminal' EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment WHERE Addresses.state_province_county = 'terminal'
           extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
---
Exec  Fail extra pred: SELECT Students.last_name FROM Students WHERE Addresses.state_province_county = 'terminal' EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment
           extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
---
Exec  Fail medium pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcript_Contents JOIN Transcripts GROUP BY Transcript_Contents.transcript_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
---
Exec  OK   medium pred: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'
           medium gold: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
---
Exec  OK   medium pred: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'
           medium gold: select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
---
Exec  OK   medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment ORDER BY Students.date_first_registered Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
---
Exec  OK   medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_first_registered Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.first_name Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.first_name Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
---
Exec  Fail easy pred: SELECT DISTINCT Students.first_name FROM Addresses JOIN Students
           easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
---
Exec  Fail easy pred: SELECT DISTINCT Students.first_name FROM Students WHERE Students.current_address_id = 'terminal'
           easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
---
Exec  Fail extra pred: SELECT Students.current_address_id, Students.current_address_id FROM Students GROUP BY Students.current_address_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Addresses.address_id, Addresses.line_1, Addresses.address_id FROM Addresses JOIN Students GROUP BY Addresses.address_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Avg(Transcripts.transcript_date) FROM Transcripts
           easy gold: SELECT avg(transcript_date) FROM Transcripts
---
Exec  OK   easy pred: SELECT Avg(Transcripts.transcript_date) FROM Transcripts
           easy gold: SELECT avg(transcript_date) FROM Transcripts
---
Exec  OK   medium pred: SELECT Transcripts.transcript_date, Transcripts.other_details FROM Transcripts ORDER BY Transcripts.transcript_date Asc LIMIT 1
           medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Transcripts.transcript_date, Transcripts.other_details FROM Transcripts
           medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
---
Exec  OK   easy pred: SELECT Count(*) FROM Transcripts
           easy gold: SELECT count(*) FROM Transcripts
---
Exec  OK   easy pred: SELECT Count(*) FROM Transcripts
           easy gold: SELECT count(*) FROM Transcripts
---
Exec  OK   medium pred: SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date Desc LIMIT 1
           medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date Desc LIMIT 1
           medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Count(*), Student_Enrolment.student_enrolment_id FROM Student_Enrolment JOIN Transcripts GROUP BY Student_Enrolment.student_enrolment_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Count(*), Transcript_Contents.transcript_id FROM Courses JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal' INTERSECT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal'
           extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
---
Exec  Fail extra pred: SELECT Student_Enrolment.semester_id FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal' INTERSECT SELECT Student_Enrolment.semester_id FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal'
           extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
---
Exec  OK   easy pred: SELECT Count(DISTINCT Students.email_address) FROM Students
           easy gold: SELECT count(DISTINCT current_address_id) FROM Students
---
Exec  Fail easy pred: SELECT DISTINCT Addresses.zip_postcode FROM Addresses JOIN Students
           easy gold: SELECT count(DISTINCT current_address_id) FROM Students
---
Exec  OK   easy pred: SELECT Students.other_student_details FROM Students ORDER BY Students.other_student_details Desc
           easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
---
Exec  Fail easy pred: SELECT Student_Enrolment.other_details FROM Student_Enrolment ORDER BY Student_Enrolment.other_details Desc
           easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
---
Exec  OK   easy pred: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'terminal'
           easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'
---
Exec  OK   easy pred: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'terminal'
           easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'
---
Exec  Fail hard pred: SELECT Students.first_name FROM Addresses JOIN Students WHERE Addresses.country = 'terminal' OR Students.cell_mobile_number = 'terminal'
           hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
---
Exec  Fail hard pred: SELECT Students.first_name FROM Addresses JOIN Students WHERE Addresses.country = 'terminal' OR Students.cell_mobile_number = 'terminal'
           hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc
           easy gold: SELECT Title FROM Cartoon ORDER BY title
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc
           easy gold: SELECT Title FROM Cartoon ORDER BY title
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
---
Exec  OK   easy pred: SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'
           easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
---
Exec  OK   easy pred: SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'
           easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
---
Exec  OK   medium pred: SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date Asc
           medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
---
Exec  OK   medium pred: SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date Asc
           medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
---
Exec  OK   medium pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'
           medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
---
Exec  OK   medium pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'
           medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
---
Exec  OK   hard pred: SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
---
Exec  OK   hard pred: SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
---
Exec  Fail medium pred: SELECT TV_Channel.series_name, TV_Channel.Content FROM TV_Channel
           medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
---
Exec  OK   medium pred: SELECT Count(DISTINCT TV_Channel.Content), Count(DISTINCT TV_Channel.Content) FROM TV_Channel
           medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
---
Exec  OK   easy pred: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'
           easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
---
Exec  OK   easy pred: SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'
           easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
---
Exec  OK   hard pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
---
Exec  OK   hard pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
---
Exec  OK   medium pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language
           medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
---
Exec  OK   medium pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language
           medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel WHERE Cartoon.Title = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel WHERE Cartoon.Title = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
---
Exec  Fail medium pred: SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  Fail medium pred: SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Asc
           easy gold: SELECT Episode FROM TV_series ORDER BY rating
---
Exec  OK   easy pred: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Asc
           easy gold: SELECT Episode FROM TV_series ORDER BY rating
---
Exec  Fail medium pred: SELECT TV_series.Episode, TV_series.Rating FROM TV_series JOIN TV_Channel ORDER BY TV_series.Rating Desc LIMIT 1
           medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
---
Exec  OK   medium pred: SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating Desc LIMIT 1
           medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
---
Exec  OK   medium pred: SELECT Min(TV_series.Share), Max(TV_series.Share) FROM TV_series
           medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;
---
Exec  OK   medium pred: SELECT Max(TV_series.Share), Min(TV_series.Share) FROM TV_series
           medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;
---
Exec  OK   easy pred: SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  OK   easy pred: SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  OK   easy pred: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  OK   easy pred: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series WHERE TV_series.Episode = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel WHERE TV_series.Episode = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  Fail medium pred: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  OK   medium pred: SELECT Cartoon.Directed_by, Count(*) FROM Cartoon GROUP BY Cartoon.Directed_by
           medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
---
Exec  OK   medium pred: SELECT Cartoon.Directed_by, Count(*) FROM Cartoon GROUP BY Cartoon.Directed_by
           medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
---
Exec  OK   medium pred: SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date Desc LIMIT 1
           medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1
---
Exec  OK   medium pred: SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date Desc LIMIT 1
           medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1
---
Exec  OK   medium pred: SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'terminal'
           medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
---
Exec  OK   medium pred: SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'terminal'
           medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
---
Exec  Fail medium pred: SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Written_by = 'terminal'
           medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail medium pred: SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail hard pred: SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail hard pred: SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail extra pred: SELECT TV_Channel.series_name, TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal'
           extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
---
Exec  Fail extra pred: SELECT TV_Channel.series_name, TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal' AND Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal'
           extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
---
Exec  OK   medium pred: SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != 'terminal'
           medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
---
Exec  OK   medium pred: SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != 'terminal'
           medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
---
Exec  OK   easy pred: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.Country HAVING Count(*) > 'terminal'
           easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
---
Exec  Fail easy pred: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING Count(*) > 'terminal'
           easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
---
Exec  OK   hard pred: SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
---
Exec  OK   hard pred: SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
---
Exec  Fail hard pred: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
---
Exec  Fail hard pred: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
---
Exec  OK   easy pred: SELECT Count(*) FROM poker_player
           easy gold: SELECT count(*) FROM poker_player
---
Exec  OK   easy pred: SELECT Count(*) FROM poker_player
           easy gold: SELECT count(*) FROM poker_player
---
Exec  OK   easy pred: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings Desc
           easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
---
Exec  OK   easy pred: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings Desc
           easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
---
Exec  OK   medium pred: SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player
           medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
---
Exec  OK   medium pred: SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player
           medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
---
Exec  OK   easy pred: SELECT Avg(poker_player.Earnings) FROM poker_player
           easy gold: SELECT avg(Earnings) FROM poker_player
---
Exec  OK   easy pred: SELECT Avg(poker_player.Earnings) FROM poker_player
           easy gold: SELECT avg(Earnings) FROM poker_player
---
Exec  OK   medium pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1
           medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
---
Exec  OK   medium pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1
           medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'
           easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
---
Exec  OK   easy pred: SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'
           easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
---
Exec  Fail easy pred: SELECT people.Name FROM poker_player JOIN people
           easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
---
Exec  Fail easy pred: SELECT people.Name FROM poker_player JOIN people
           easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made Asc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made Asc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
---
Exec  Fail hard pred: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings Asc LIMIT 1
           hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
---
Exec  Fail hard pred: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings Asc LIMIT 1
           hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
---
Exec  OK   hard pred: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height Desc LIMIT 1
           hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
---
Exec  OK   hard pred: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height Desc LIMIT 1
           hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Avg(poker_player.Earnings) FROM poker_player JOIN people WHERE people.Height > 'terminal'
           medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
---
Exec  Fail medium pred: SELECT Avg(poker_player.Earnings) FROM poker_player JOIN people WHERE people.Height > 'terminal'
           medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings Desc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings Desc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
---
Exec  OK   medium pred: SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality
           medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
---
Exec  OK   medium pred: SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality
           medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
---
Exec  OK   hard pred: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
           easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
---
Exec  OK   easy pred: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
           easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
---
Exec  OK   medium pred: SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc
           medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
---
Exec  OK   medium pred: SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc
           medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
---
Exec  OK   easy pred: SELECT people.Name FROM people WHERE people.Nationality != 'terminal'
           easy gold: SELECT Name FROM people WHERE Nationality != "Russia"
---
Exec  OK   easy pred: SELECT people.Name FROM people WHERE people.Nationality != 'terminal'
           easy gold: SELECT Name FROM people WHERE Nationality != "Russia"
---
Exec  OK   hard pred: SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)
           hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
---
Exec  OK   hard pred: SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)
           hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
---
Exec  OK   easy pred: SELECT Count(DISTINCT people.Nationality) FROM people
           easy gold: SELECT count(DISTINCT Nationality) FROM people
---
Exec  OK   easy pred: SELECT Count(DISTINCT people.Nationality) FROM people
           easy gold: SELECT count(DISTINCT Nationality) FROM people
---
Exec  OK   easy pred: SELECT Count(DISTINCT AREA_CODE_STATE.state) FROM AREA_CODE_STATE
           easy gold: SELECT count(*) FROM area_code_state
---
Exec  OK   medium pred: SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS ORDER BY CONTESTANTS.contestant_name Desc
           medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
---
Exec  OK   medium pred: SELECT VOTES.vote_id, VOTES.phone_number, VOTES.state FROM VOTES
           medium gold: SELECT vote_id ,  phone_number ,  state FROM votes
---
Exec  OK   medium pred: SELECT Max(AREA_CODE_STATE.area_code), Min(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE
           medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state
---
Exec  OK   easy pred: SELECT VOTES.created FROM VOTES WHERE VOTES.state = 'terminal'
           easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'
---
Exec  Fail easy pred: SELECT CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name != 'terminal'
           easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
---
Exec  OK   medium pred: SELECT DISTINCT VOTES.state, VOTES.created FROM VOTES
           medium gold: SELECT DISTINCT state ,  created FROM votes
---
Exec  Fail medium pred: SELECT VOTES.contestant_number, CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT VOTES.contestant_number, CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS GROUP BY VOTES.contestant_number ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
---
Exec  OK   medium pred: SELECT VOTES.vote_id FROM VOTES WHERE VOTES.state = 'terminal' OR VOTES.state = 'terminal'
           medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
---
Exec  OK   extra pred: SELECT Count(*) FROM CONTESTANTS WHERE CONTESTANTS.contestant_number NOT IN (SELECT VOTES.contestant_number FROM VOTES)
           extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
---
Exec  Fail extra pred: SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES GROUP BY AREA_CODE_STATE.area_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal'
           medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'
---
Exec  Fail extra pred: SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal' INTERSECT SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal'
           extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
---
Exec  OK   medium pred: SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name LIKE 'terminal'
           medium gold: select contestant_name from contestants where contestant_name like "%al%"
---
Exec  OK   easy pred: SELECT country.Name FROM country WHERE country.IndepYear > 'terminal'
           easy gold: SELECT Name FROM country WHERE IndepYear  >  1950
---
Exec  OK   easy pred: SELECT country.Name FROM country WHERE country.IndepYear > 'terminal'
           easy gold: SELECT Name FROM country WHERE IndepYear  >  1950
---
Exec  OK   easy pred: SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
---
Exec  OK   easy pred: SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
---
Exec  OK   easy pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
---
Exec  Fail easy pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal'
           easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
---
Exec  OK   easy pred: SELECT country.Continent FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"
---
Exec  Fail easy pred: SELECT country.Name FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"
---
Exec  Fail medium pred: SELECT country.Region FROM city JOIN country WHERE city.Name = 'terminal'
           medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
---
Exec  Fail medium pred: SELECT country.Region FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
---
Exec  OK   medium pred: SELECT country.Population, country.LifeExpectancy FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
---
Exec  Fail medium pred: SELECT country.Population, country.LifeExpectancy FROM country WHERE country.LocalName = 'terminal'
           medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
---
Exec  OK   medium pred: SELECT country.Region, country.Population FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
---
Exec  OK   medium pred: SELECT country.Region, country.Population FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
---
Exec  OK   easy pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
---
Exec  OK   easy pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal'
           hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
---
Exec  OK   hard pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' ORDER BY country.LifeExpectancy Asc LIMIT 1
           hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
---
Exec  OK   medium pred: SELECT Sum(country.Population), Max(country.GNP) FROM country WHERE country.Continent = 'terminal'
           medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
---
Exec  Fail medium pred: SELECT country.Population, Max(country.GNP) FROM country WHERE country.Continent = 'terminal' ORDER BY country.Population Desc LIMIT 1
           medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.LocalName = 'terminal'
           medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
---
Exec  Fail medium pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent LIKE 'terminal'
           medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
---
Exec  OK   medium pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal' OR country.Continent = 'terminal'
           medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
---
Exec  Fail easy pred: SELECT city.Population FROM city WHERE city.District = 'terminal'
           easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
---
Exec  OK   easy pred: SELECT Sum(city.Population) FROM city WHERE city.District = 'terminal'
           easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
---
Exec  OK   medium pred: SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.GovernmentForm = 'terminal'
           medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
---
Exec  Fail medium pred: SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
---
Exec  OK   easy pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage
           easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
---
Exec  OK   easy pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage
           easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
---
Exec  Fail easy pred: SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
---
Exec  Fail easy pred: SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.IsOfficial) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.IsOfficial) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT country.Continent FROM country GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT country.Continent FROM countrylanguage JOIN country GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail easy pred: SELECT Count(*) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
---
Exec  Fail easy pred: SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
           easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT country.Continent) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
---
Exec  Fail medium pred: SELECT Count(DISTINCT country.Continent) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
---
Exec  Fail hard pred: SELECT country.Region FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
---
Exec  Fail hard pred: SELECT country.Region FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
---
Exec  OK   extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.IsOfficial = 'terminal'
           extra gold: select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.IsOfficial = 'terminal'
           extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Continent = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Continent = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language HAVING Count(*) = 'terminal'
           hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
---
Exec  Fail hard pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.GovernmentForm = 'terminal'
           hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY city.Population Desc LIMIT 1
           extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' GROUP BY city.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
---
Exec  Fail hard pred: None
           hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  Fail hard pred: SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Region = 'terminal' ORDER BY country.SurfaceArea Desc LIMIT 1
           hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
---
Exec  Fail extra pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
---
Exec  OK   extra pred: SELECT Sum(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
---
Exec  Fail extra pred: SELECT country.Population FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
---
Exec  Fail medium pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.HeadOfState = 'terminal'
           medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.HeadOfState = 'terminal'
           medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.GNPOld < 'terminal'
           medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language), Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.GNPOld < 'terminal'
           medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country)
           hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country)
           hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Name = 'terminal')
           extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Continent = 'terminal')
           extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
---
Exec  OK   extra pred: SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = 'terminal') AND country.Continent = 'terminal'
           extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = 'terminal') AND country.Continent = 'terminal'
           extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail easy pred: SELECT country.Code FROM country JOIN countrylanguage WHERE countrylanguage.Language != 'terminal'
           easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
---
Exec  Fail easy pred: SELECT country.Code FROM country JOIN countrylanguage WHERE countrylanguage.Language != 'terminal'
           easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE country.GovernmentForm = 'terminal')
           hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE country.Continent = 'terminal' AND countrylanguage.IsOfficial != 'terminal'
           extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' AND countrylanguage.Language != 'terminal'
           extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
---
Exec  OK   hard pred: SELECT DISTINCT country.Name FROM country JOIN countrylanguage WHERE country.Continent = 'terminal' AND countrylanguage.Language = 'terminal'
           hard gold: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
---
Exec  Fail hard pred: SELECT DISTINCT city.Name FROM city JOIN country JOIN countrylanguage WHERE country.Continent = 'terminal' AND countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
---
Exec  Fail medium pred: SELECT country.Name, country.IndepYear, country.Population FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
---
Exec  Fail medium pred: SELECT country.Name, country.IndepYear, country.Population FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
---
Exec  OK   medium pred: SELECT country.Population, country.Name, country.HeadOfState FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  OK   medium pred: SELECT country.Name, country.Population, country.HeadOfState FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  Fail medium pred: SELECT country.Name, Count(*) FROM country JOIN countrylanguage GROUP BY country.Name HAVING Count(*) >= 'terminal'
           medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
---
Exec  Fail medium pred: SELECT country.Name, Count(*) FROM country JOIN countrylanguage GROUP BY country.Name HAVING Count(*) > 'terminal'
           medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
---
Exec  OK   extra pred: SELECT Count(*), city.District FROM city WHERE city.Population > (SELECT Avg(city.Population) FROM city) GROUP BY city.District
           extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
---
Exec  OK   extra pred: SELECT Count(*), city.District FROM city WHERE city.Population > (SELECT Avg(city.Population) FROM city) GROUP BY city.District
           extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
---
Exec  OK   medium pred: SELECT country.GovernmentForm, Sum(country.Population) FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) > 'terminal'
           medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
---
Exec  OK   medium pred: SELECT country.GovernmentForm, Sum(country.Population) FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) >= 'terminal'
           medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy), Sum(country.Population) FROM country WHERE country.LifeExpectancy < 'terminal' GROUP BY country.Continent
           medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
---
Exec  OK   medium pred: SELECT country.Continent, Sum(country.Population), Avg(country.LifeExpectancy) FROM country GROUP BY country.Continent HAVING Avg(country.LifeExpectancy) < 'terminal'
           medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
---
Exec  Fail medium pred: SELECT country.Name, country.Region FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
---
Exec  Fail medium pred: SELECT country.Name, country.Region FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
---
Exec  Fail easy pred: SELECT Count(*) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"
---
Exec  Fail easy pred: SELECT Count(*) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"
---
Exec  OK   medium pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population = 'terminal'
           medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
---
Exec  OK   medium pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population = 'terminal'
           medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
---
Exec  OK   hard pred: SELECT Sum(country.Population), Avg(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal' AND country.SurfaceArea > 'terminal'
           hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
---
Exec  OK   hard pred: SELECT Sum(country.Population), Avg(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' AND country.SurfaceArea > 'terminal'
           hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
---
Exec  OK   easy pred: SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
---
Exec  OK   easy pred: SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'
           easy gold: select name from city where population between 160000 and 900000
---
Exec  OK   hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT countrylanguage.Language, countrylanguage.Percentage FROM countrylanguage JOIN country GROUP BY country.Name ORDER BY Max(countrylanguage.Percentage) Desc LIMIT 1
           medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode, Max(countrylanguage.Percentage) FROM countrylanguage GROUP BY countrylanguage.CountryCode
           medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
---
Exec  Fail extra pred: SELECT Count(*) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' ORDER BY countrylanguage.Percentage Desc LIMIT 1
           extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail extra pred: SELECT Count(*) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY countrylanguage.Percentage Desc LIMIT 1
           medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  OK   easy pred: SELECT Count(*) FROM conductor
           easy gold: SELECT count(*) FROM conductor
---
Exec  OK   easy pred: SELECT Count(*) FROM conductor
           easy gold: SELECT count(*) FROM conductor
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc
           easy gold: SELECT Name FROM conductor ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc
           easy gold: SELECT Name FROM conductor ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'
           easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'
           easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'
---
Exec  OK   easy pred: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Desc
           easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
---
Exec  Fail easy pred: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Asc
           easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
---
Exec  OK   easy pred: SELECT Avg(show.Attendance) FROM show
           easy gold: SELECT avg(Attendance) FROM SHOW
---
Exec  OK   easy pred: SELECT Avg(show.Attendance) FROM show
           easy gold: SELECT avg(Attendance) FROM SHOW
---
Exec  OK   medium pred: SELECT Max(performance.Share), Min(performance.Share) FROM performance JOIN show WHERE performance.Type != 'terminal'
           medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
---
Exec  Fail medium pred: SELECT Max(show.Attendance), Min(show.Attendance) FROM performance JOIN show WHERE performance.Type != 'terminal'
           medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
---
Exec  OK   easy pred: SELECT Count(DISTINCT conductor.Nationality) FROM conductor
           easy gold: SELECT count(DISTINCT Nationality) FROM conductor
---
Exec  OK   easy pred: SELECT Count(DISTINCT conductor.Nationality) FROM conductor
           easy gold: SELECT count(DISTINCT Nationality) FROM conductor
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc
           easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc
           easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1
           medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1
           medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
---
Exec  Fail medium pred: SELECT conductor.Name, orchestra.Orchestra FROM orchestra JOIN conductor
           medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
---
Exec  Fail medium pred: SELECT performance.Weekly_rank, conductor.Name FROM performance JOIN conductor
           medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
---
Exec  Fail extra pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT conductor.Name FROM orchestra JOIN conductor WHERE orchestra.Year_of_Founded > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
---
Exec  Fail medium pred: SELECT conductor.Name FROM conductor JOIN orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
---
Exec  OK   medium pred: SELECT orchestra.Record_Company, Count(*) FROM orchestra GROUP BY orchestra.Record_Company
           medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
---
Exec  Fail medium pred: SELECT orchestra.Conductor_ID, Count(*) FROM orchestra GROUP BY orchestra.Conductor_ID
           medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
---
Exec  OK   medium pred: SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY Count(*) Asc
           medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
---
Exec  OK   medium pred: SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY Count(*) Asc
           medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)
           hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
---
Exec  OK   hard pred: SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)
           hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
---
Exec  OK   medium pred: SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'
           medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
---
Exec  OK   medium pred: SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'
           medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
---
Exec  OK   medium pred: SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance JOIN show GROUP BY performance.Orchestra_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
---
Exec  OK   medium pred: SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance JOIN show GROUP BY performance.Orchestra_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
---
Exec  Fail easy pred: SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = (SELECT Avg(Highschooler.grade) FROM Highschooler)
           easy gold: SELECT count(*) FROM Highschooler
---
Exec  OK   easy pred: SELECT Count(*) FROM Highschooler
           easy gold: SELECT count(*) FROM Highschooler
---
Exec  Fail medium pred: SELECT Highschooler.name, Highschooler.grade FROM Highschooler GROUP BY Highschooler.name
           medium gold: SELECT name ,  grade FROM Highschooler
---
Exec  Fail medium pred: SELECT Highschooler.name, Highschooler.grade FROM Highschooler GROUP BY Highschooler.name
           medium gold: SELECT name ,  grade FROM Highschooler
---
Exec  Fail easy pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade
           easy gold: SELECT grade FROM Highschooler
---
Exec  Fail easy pred: SELECT Avg(Highschooler.grade), Highschooler.grade FROM Highschooler GROUP BY Highschooler.name
           easy gold: SELECT grade FROM Highschooler
---
Exec  OK   easy pred: SELECT DISTINCT Highschooler.grade FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'
           easy gold: SELECT name FROM Highschooler WHERE grade  =  10
---
Exec  OK   easy pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'
           easy gold: SELECT name FROM Highschooler WHERE grade  =  10
---
Exec  OK   easy pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   medium pred: SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'
           medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
---
Exec  OK   medium pred: SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'
           medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
---
Exec  OK   medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade
           medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
---
Exec  Fail medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler WHERE Highschooler.grade = (SELECT Avg(*) FROM Highschooler) GROUP BY Highschooler.grade
           medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
---
Exec  Fail hard pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Avg(Highschooler.ID) Desc LIMIT 1
           hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Avg(Highschooler.ID) Desc LIMIT 1
           hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
           easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Avg(Highschooler.grade) >= 'terminal'
           easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
---
Exec  OK   medium pred: SELECT Count(*), Friend.student_id FROM Friend GROUP BY Friend.student_id
           medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
---
Exec  Fail medium pred: SELECT Count(*) FROM Friend GROUP BY Friend.friend_id
           medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
---
Exec  Fail medium pred: SELECT Highschooler.name, Avg(Highschooler.grade) FROM Highschooler JOIN Friend GROUP BY Highschooler.grade
           medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail medium pred: SELECT Highschooler.name, Avg(DISTINCT Highschooler.grade) FROM Highschooler JOIN Friend GROUP BY Highschooler.grade
           medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY Avg(Highschooler.grade) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Avg(Highschooler.grade) >= 'terminal'
           medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
---
Exec  Fail medium pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Avg(Highschooler.grade) >= 'terminal'
           medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Friend JOIN Highschooler WHERE Highschooler.name = 'terminal'
           hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
---
Exec  Fail hard pred: SELECT Friend.friend_id FROM Friend JOIN Highschooler WHERE Highschooler.name = 'terminal'
           hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(*) FROM Friend JOIN Highschooler WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(*) FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  OK   hard pred: SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend
           hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
---
Exec  Fail hard pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
---
Exec  OK   hard pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
---
Exec  Fail hard pred: SELECT Friend.student_id FROM Highschooler JOIN Likes INTERSECT SELECT Likes.student_id FROM Highschooler JOIN Likes
           hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
---
Exec  Fail hard pred: SELECT Likes.student_id FROM Likes INTERSECT SELECT Friend.friend_id FROM Friend
           hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Likes INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes WHERE Friend.student_id = (SELECT Max(Likes.student_id) FROM Likes)
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade = (SELECT Avg(Highschooler.grade) FROM Highschooler JOIN Friend) UNION SELECT Highschooler.name FROM Highschooler JOIN Friend
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
---
Exec  Fail medium pred: SELECT Count(*), Highschooler.ID FROM Highschooler JOIN Likes GROUP BY Highschooler.ID
           medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
---
Exec  Fail medium pred: SELECT Count(*), Highschooler.ID FROM Highschooler JOIN Likes GROUP BY Highschooler.ID
           medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
---
Exec  Fail medium pred: SELECT Highschooler.name, Avg(Highschooler.grade) FROM Highschooler GROUP BY Highschooler.grade
           medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail medium pred: SELECT Highschooler.name, Avg(Highschooler.grade) FROM Highschooler GROUP BY Highschooler.grade
           medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id ORDER BY Avg(Highschooler.grade) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  OK   medium pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Avg(Highschooler.grade) > 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  OK   hard pred: SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   hard pred: SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   extra pred: SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   extra pred: SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   hard pred: SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals
           hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
---
Exec  OK   hard pred: SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals
           hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
---
Exec  OK   hard pred: SELECT Avg(Dogs.age) FROM Dogs WHERE Dogs.dog_id IN (SELECT Treatments.dog_id FROM Treatments)
           hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
---
Exec  Fail hard pred: SELECT Avg(Dogs.age) FROM Dogs JOIN Treatments WHERE Dogs.name = 'terminal'
           hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals WHERE Professionals.state = 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) > 'terminal'
           extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals WHERE Professionals.state = 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) > 'terminal'
           extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
---
Exec  Fail hard pred: SELECT Dogs.name FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments WHERE Charges.charge_amount > 'terminal')
           hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
---
Exec  Fail hard pred: SELECT Dogs.name FROM Dogs JOIN Treatments WHERE Dogs.owner_id NOT IN (SELECT Treatments.dog_id FROM Treatments WHERE Charges.charge_amount > 'terminal')
           hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
---
Exec  Fail hard pred: SELECT DISTINCT Professionals.first_name FROM Dogs JOIN Owners EXCEPT SELECT DISTINCT Professionals.first_name FROM Dogs JOIN Owners WHERE Dogs.name = 'terminal'
           hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
---
Exec  Fail hard pred: SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Professionals.first_name FROM Professionals JOIN Dogs WHERE Dogs.name = 'terminal'
           hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals JOIN Treatments
           extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Charges.charge_id, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Charges.charge_id, Professionals.email_address FROM Professionals JOIN Treatments
           extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.first_name, Owners.last_name FROM Dogs JOIN Owners GROUP BY Dogs.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.first_name, Owners.last_name FROM Dogs JOIN Owners GROUP BY Dogs.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.role_code, Professionals.last_name FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT Breeds.breed_name FROM Dogs JOIN Breeds GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Breeds.breed_name FROM Dogs JOIN Breeds GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs JOIN Charges GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.last_name FROM Owners JOIN Dogs JOIN Treatments GROUP BY Dogs.owner_id ORDER BY Sum(Treatments.cost_of_treatment) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments JOIN Charges GROUP BY Treatments.treatment_type_code ORDER BY Sum(Charges.charge_amount) Asc LIMIT 1
           extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Charges GROUP BY Charges.charge_type ORDER BY Sum(Charges.charge_amount) Asc LIMIT 1
           extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs JOIN Charges GROUP BY Dogs.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.zip_code FROM Owners JOIN Dogs JOIN Charges GROUP BY Dogs.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals JOIN Charges WHERE Treatments.cost_of_treatment < (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments)
           extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
---
Exec  OK   extra pred: SELECT Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals WHERE Treatments.cost_of_treatment < (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments)
           extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
---
Exec  Fail medium pred: SELECT Treatments.date_of_treatment, Professionals.last_name FROM Treatments JOIN Professionals
           medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail medium pred: SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals
           medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail medium pred: SELECT Charges.charge_amount, Treatment_Types.treatment_type_description FROM Treatments JOIN Charges JOIN Treatment_Types
           medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
---
Exec  Fail medium pred: SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types
           medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail extra pred: SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments GROUP BY Treatments.dog_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
---
Exec  Fail extra pred: SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Breeds JOIN Treatments GROUP BY Breeds.breed_name ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name FROM Dogs JOIN Owners WHERE Owners.state = 'terminal'
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name FROM Dogs JOIN Owners WHERE Owners.state = 'terminal'
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
---
Exec  Fail medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments
           medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
---
Exec  Fail medium pred: SELECT DISTINCT Dogs.date_arrived, Dogs.date_adopted FROM Dogs JOIN Treatments
           medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
---
Exec  Fail extra pred: SELECT Owners.last_name FROM Dogs JOIN Owners ORDER BY Dogs.date_of_birth Asc LIMIT 1
           extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
---
Exec  Fail extra pred: SELECT Owners.last_name FROM Dogs JOIN Owners ORDER BY Dogs.age Asc LIMIT 1
           extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
---
Exec  OK   medium pred: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'
           medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
---
Exec  OK   medium pred: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'
           medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
---
Exec  OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs
           medium gold: SELECT date_arrived ,  date_departed FROM Dogs
---
Exec  OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs
           medium gold: SELECT date_arrived ,  date_departed FROM Dogs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Treatments.dog_id) FROM Treatments
           easy gold: SELECT count(DISTINCT dog_id) FROM Treatments
---
Exec  OK   easy pred: SELECT Count(DISTINCT Treatments.dog_id) FROM Treatments
           easy gold: SELECT count(DISTINCT dog_id) FROM Treatments
---
Exec  OK   easy pred: SELECT Count(*) FROM Treatments
           easy gold: SELECT count(DISTINCT professional_id) FROM Treatments
---
Exec  OK   easy pred: SELECT Count(*) FROM Professionals
           easy gold: SELECT count(DISTINCT professional_id) FROM Treatments
---
Exec  Fail medium pred: SELECT Professionals.role_code, Professionals.city, Professionals.city, Professionals.state FROM Professionals WHERE Professionals.role_code LIKE 'terminal'
           medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
---
Exec  OK   medium pred: SELECT Professionals.role_code, Professionals.street, Professionals.city, Professionals.state FROM Professionals WHERE Professionals.city LIKE 'terminal'
           medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
---
Exec  OK   medium pred: SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'
           medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
---
Exec  OK   medium pred: SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'
           medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
---
Exec  OK   hard pred: SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)
           hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
---
Exec  OK   hard pred: SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)
           hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
---
Exec  OK   medium pred: SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment Desc LIMIT 1
           medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment Desc LIMIT 1
           medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
---
Exec  OK   extra pred: SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)
           extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)
           extra gold: select count(*) from dogs where dog_id not in ( select dog_id from treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)
           extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
---
Exec  OK   extra pred: SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)
           extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
---
Exec  OK   extra pred: SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)
           extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)
           extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
---
Exec  OK   medium pred: SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'terminal'
           medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
---
Exec  OK   medium pred: SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'terminal'
           medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
---
Exec  OK   easy pred: SELECT Avg(Dogs.age) FROM Dogs
           easy gold: SELECT avg(age) FROM Dogs
---
Exec  OK   easy pred: SELECT Avg(Dogs.age) FROM Dogs
           easy gold: SELECT avg(age) FROM Dogs
---
Exec  OK   easy pred: SELECT Max(Dogs.age) FROM Dogs
           easy gold: SELECT max(age) FROM Dogs
---
Exec  OK   easy pred: SELECT Max(Dogs.age) FROM Dogs
           easy gold: SELECT max(age) FROM Dogs
---
Exec  OK   medium pred: SELECT Charges.charge_type, Charges.charge_amount FROM Charges GROUP BY Charges.charge_type
           medium gold: SELECT charge_type ,  charge_amount FROM Charges
---
Exec  Fail medium pred: SELECT Charges.charge_type, Count(*) FROM Charges GROUP BY Charges.charge_type
           medium gold: SELECT charge_type ,  charge_amount FROM Charges
---
Exec  OK   easy pred: SELECT Charges.charge_amount FROM Charges GROUP BY Charges.charge_type ORDER BY Charges.charge_amount Desc LIMIT 1
           easy gold: SELECT max(charge_amount) FROM Charges
---
Exec  OK   easy pred: SELECT Charges.charge_amount FROM Charges GROUP BY Charges.charge_type ORDER BY Charges.charge_amount Desc LIMIT 1
           easy gold: SELECT max(charge_amount) FROM Charges
---
Exec  OK   medium pred: SELECT Professionals.email_address, Professionals.cell_number, Professionals.home_phone FROM Professionals
           medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals
---
Exec  OK   medium pred: SELECT Professionals.email_address, Professionals.cell_number, Professionals.home_phone FROM Professionals
           medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals
---
Exec  Fail medium pred: SELECT Dogs.breed_code FROM Dogs INTERSECT SELECT Dogs.size_code FROM Dogs
           medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs
---
Exec  Fail medium pred: SELECT Dogs.breed_code, Count(*) FROM Dogs GROUP BY Dogs.breed_code
           medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs
---
Exec  Fail medium pred: SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Treatments JOIN Professionals JOIN Treatment_Types
           medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
---
Exec  Fail medium pred: SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Treatments JOIN Professionals JOIN Treatment_Types
           medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  Fail easy pred: SELECT singer.Name FROM singer JOIN song ORDER BY song.Sales Asc
           easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
---
Exec  Fail easy pred: SELECT singer.Name FROM song JOIN singer ORDER BY song.Sales Asc
           easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
---
Exec  OK   medium pred: SELECT singer.Birth_Year, singer.Citizenship FROM singer
           medium gold: SELECT Birth_Year ,  Citizenship FROM singer
---
Exec  OK   medium pred: SELECT singer.Birth_Year, singer.Citizenship FROM singer
           medium gold: SELECT Birth_Year ,  Citizenship FROM singer
---
Exec  OK   easy pred: SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
           easy gold: SELECT Name FROM singer WHERE Citizenship != "France"
---
Exec  OK   easy pred: SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
           easy gold: SELECT Name FROM singer WHERE Citizenship != "France"
---
Exec  OK   medium pred: SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'
           medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
---
Exec  OK   medium pred: SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'
           medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
---
Exec  OK   medium pred: SELECT singer.Name FROM singer JOIN song WHERE song.Highest_Position = 'terminal' ORDER BY song.Sales Desc LIMIT 1
           medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
---
Exec  OK   medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY song.Singer_ID ORDER BY Count(*) Desc LIMIT 1
           medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
---
Exec  OK   medium pred: SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
---
Exec  OK   medium pred: SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1
           hard gold: select citizenship from singer group by citizenship order by count(*) desc limit 1
---
Exec  OK   medium pred: SELECT singer.Citizenship, Max(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
---
Exec  Fail medium pred: SELECT singer.Citizenship, Max(song.Sales) FROM singer JOIN song GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
---
Exec  Fail medium pred: SELECT song.Title, singer.Name FROM song JOIN singer
           medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
---
Exec  Fail medium pred: SELECT song.Title, singer.Name FROM song JOIN singer
           medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
---
Exec  Fail medium pred: SELECT DISTINCT singer.Name FROM song JOIN singer WHERE song.Sales > 'terminal'
           medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
---
Exec  Fail medium pred: SELECT DISTINCT singer.Name FROM song JOIN singer WHERE song.Sales > 'terminal'
           medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
---
Exec  Fail medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY song.Singer_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
---
Exec  Fail medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY song.Singer_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
---
Exec  Fail medium pred: SELECT singer.Name, Sum(song.Sales) FROM song JOIN singer GROUP BY song.Singer_ID
           medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
---
Exec  Fail medium pred: SELECT singer.Name, Sum(song.Sales) FROM song JOIN singer GROUP BY singer.Name
           medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
---
Exec  OK   hard pred: SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN (SELECT song.Singer_ID FROM song)
           hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
---
Exec  Fail hard pred: SELECT song.Title FROM song WHERE song.Song_ID NOT IN (SELECT song.Singer_ID FROM song)
           hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 'terminal'
           hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 'terminal'
           hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
---
Exec  Fail easy pred: SELECT Count(*) FROM Properties
           easy gold: SELECT count(*) FROM Other_Available_Features
---
Exec  Fail medium pred: SELECT Ref_Feature_Types.feature_type_name FROM Ref_Feature_Types JOIN Other_Available_Features WHERE Other_Available_Features.feature_name = 'terminal'
           medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
---
Exec  OK   medium pred: SELECT Ref_Property_Types.property_type_description FROM Ref_Property_Types
           medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
---
Exec  Fail hard pred: SELECT Properties.property_name, Properties.property_address FROM Properties WHERE Properties.room_count > 'terminal'
           hard gold: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  Fail medium pred: SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Asc
           medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Desc
           medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
---
Exec  OK   medium pred: SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Country = 'terminal'
           medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
---
Exec  OK   medium pred: SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Country = 'terminal'
           medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
---
Exec  OK   medium pred: SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age Asc LIMIT 1
           medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
---
Exec  Fail medium pred: SELECT singer.Song_Name, singer.Age FROM singer ORDER BY singer.Age Asc LIMIT 1
           medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
---
Exec  Fail easy pred: SELECT DISTINCT singer.Country FROM singer WHERE singer.Age = 'terminal'
           easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20
---
Exec  OK   easy pred: SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
           easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20
---
Exec  OK   medium pred: SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
           medium gold: SELECT country ,  count(*) FROM singer GROUP BY country
---
Exec  OK   medium pred: SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
           medium gold: SELECT country ,  count(*) FROM singer GROUP BY country
---
Exec  OK   hard pred: SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
           hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
---
Exec  OK   hard pred: SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
           hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
---
Exec  OK   medium pred: SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'
           medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
---
Exec  OK   medium pred: SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'
           medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
---
Exec  Fail medium pred: SELECT Max(stadium.Capacity), Avg(stadium.Capacity) FROM stadium
           medium gold: select max(capacity), average from stadium
---
Exec  OK   medium pred: SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium
           medium gold: select avg(capacity) ,  max(capacity) from stadium
---
Exec  OK   medium pred: SELECT stadium.Name, stadium.Capacity FROM stadium GROUP BY stadium.Highest ORDER BY Avg(stadium.Average) Desc LIMIT 1
           medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
---
Exec  OK   medium pred: SELECT stadium.Name, stadium.Capacity FROM stadium GROUP BY stadium.Highest ORDER BY Avg(stadium.Average) Desc LIMIT 1
           medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
---
Exec  OK   medium pred: SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
---
Exec  Fail medium pred: SELECT stadium.Name, Count(*) FROM concert JOIN stadium GROUP BY concert.Stadium_ID
           medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
---
Exec  Fail medium pred: SELECT stadium.Stadium_ID, Count(*) FROM concert JOIN stadium GROUP BY stadium.Stadium_ID
           medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert WHERE concert.Year >= 'terminal' GROUP BY concert.Stadium_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert WHERE concert.Year > 'terminal' GROUP BY concert.Stadium_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1
---
Exec  OK   hard pred: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)
           hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
---
Exec  OK   hard pred: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)
           hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
---
Exec  OK   hard pred: SELECT singer.Country FROM singer WHERE singer.Age < 'terminal' INTERSECT SELECT singer.Country FROM singer WHERE singer.Age < 'terminal'
           hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
---
Exec  Fail hard pred: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
---
Exec  Fail hard pred: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM concert JOIN stadium WHERE concert.Year = 'terminal'
           hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
---
Exec  Fail medium pred: SELECT concert.concert_Name, concert.Theme, Count(*) FROM concert JOIN singer_in_concert GROUP BY concert.concert_Name
           medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
---
Exec  Fail medium pred: SELECT concert.concert_Name, concert.Theme, Count(*) FROM concert JOIN singer_in_concert GROUP BY concert.concert_Name
           medium gold: select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id
---
Exec  Fail medium pred: SELECT singer.Name, Count(*) FROM singer_in_concert JOIN singer GROUP BY singer_in_concert.Singer_ID
           medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
---
Exec  Fail medium pred: SELECT singer.Name, Count(*) FROM singer_in_concert JOIN singer GROUP BY singer_in_concert.Singer_ID
           medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
---
Exec  Fail hard pred: SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
---
Exec  Fail hard pred: SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE 'terminal'
           medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE 'terminal'
           medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal' INTERSECT SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal'
           extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
---
Exec  Fail hard pred: SELECT Count(*) FROM concert JOIN stadium ORDER BY stadium.Capacity Desc LIMIT 1
           hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
---
Exec  Fail hard pred: SELECT Count(*) FROM concert JOIN stadium WHERE stadium.Capacity = (SELECT Max(stadium.Capacity) FROM stadium)
           hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
---
Exec  OK   easy pred: SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
           easy gold: SELECT count(*) FROM pets WHERE weight  >  10
---
Exec  OK   easy pred: SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
           easy gold: SELECT count(*) FROM pets WHERE weight  >  10
---
Exec  OK   medium pred: SELECT Pets.weight FROM Pets WHERE Pets.pet_age = (SELECT Min(Pets.pet_age) FROM Pets)
           medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Pets.weight FROM Pets WHERE Pets.pet_age = (SELECT Min(Pets.pet_age) FROM Pets)
           medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Max(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType
---
Exec  Fail medium pred: SELECT Pets.weight, Max(Pets.weight) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType
---
Exec  OK   medium pred: SELECT Count(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Age > 'terminal'
           medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
---
Exec  OK   medium pred: SELECT Count(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Age > 'terminal'
           medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
---
Exec  Fail hard pred: SELECT Count(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Sex = 'terminal'
           hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
---
Exec  Fail hard pred: SELECT Count(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Sex = 'terminal'
           hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
---
Exec  OK   easy pred: SELECT Count(DISTINCT Pets.PetType) FROM Pets
           easy gold: SELECT count(DISTINCT pettype) FROM pets
---
Exec  OK   easy pred: SELECT Count(DISTINCT Pets.PetType) FROM Pets
           easy gold: SELECT count(DISTINCT pettype) FROM pets
---
Exec  Fail extra pred: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'
           extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'
           extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
---
Exec  OK   extra pred: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'
---
Exec  OK   extra pred: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet WHERE Pets.PetType = 'terminal')
           extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail extra pred: SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.pet_age = 'terminal')
           extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail hard pred: SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
---
Exec  Fail hard pred: SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
---
Exec  Fail extra pred: SELECT Student.Fname, Student.Age FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.pet_age = 'terminal' EXCEPT SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.pet_age = 'terminal')
           extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail extra pred: SELECT Student.Fname FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.PetType = 'terminal' EXCEPT SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.PetType = 'terminal')
           extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  OK   medium pred: SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 'terminal'
           medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
---
Exec  OK   medium pred: SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 'terminal'
           medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
---
Exec  OK   medium pred: SELECT Pets.PetType, Avg(Pets.pet_age), Max(Pets.pet_age) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
---
Exec  OK   medium pred: SELECT Pets.PetType, Avg(DISTINCT Pets.pet_age), Max(Pets.pet_age) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
---
Exec  OK   medium pred: SELECT Pets.PetType, Avg(Pets.weight) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
---
Exec  OK   medium pred: SELECT Avg(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
---
Exec  Fail medium pred: SELECT DISTINCT Student.Fname, Student.Age FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Has_Pet)
           medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
---
Exec  Fail medium pred: SELECT DISTINCT Student.Fname, Student.Age FROM Student JOIN Has_Pet JOIN Pets
           medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
---
Exec  Fail medium pred: SELECT Has_Pet.PetID FROM Has_Pet JOIN Student WHERE Student.LName = 'terminal'
           medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
---
Exec  Fail medium pred: SELECT Has_Pet.PetID FROM Has_Pet JOIN Student WHERE Student.LName = 'terminal'
           medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
---
Exec  OK   medium pred: SELECT Count(*), Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID
           medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
---
Exec  Fail medium pred: SELECT Student.Fname, Count(*) FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' GROUP BY Student.StuID
           medium gold: select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid
---
Exec  Fail medium pred: SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet GROUP BY Student.StuID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
---
Exec  Fail medium pred: SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet GROUP BY Has_Pet.StuID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
---
Exec  Fail hard pred: SELECT Student.LName FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.pet_age = 'terminal'
           hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
---
Exec  Fail hard pred: SELECT Student.LName FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.pet_age = 'terminal'
           hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
---
Exec  OK   extra pred: SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)
           extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)
---
Exec  OK   extra pred: SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)
           extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)
---
Exec  OK   easy pred: SELECT Count(*) FROM continents
           easy gold: SELECT count(*) FROM CONTINENTS;
---
Exec  OK   easy pred: SELECT Count(*) FROM continents
           easy gold: SELECT count(*) FROM CONTINENTS;
---
Exec  Fail medium pred: SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.ContId
           medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
---
Exec  Fail medium pred: SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.ContId
           medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
---
Exec  OK   easy pred: SELECT Count(*) FROM countries
           easy gold: SELECT count(*) FROM COUNTRIES;
---
Exec  OK   easy pred: SELECT Count(*) FROM countries
           easy gold: SELECT count(*) FROM COUNTRIES;
---
Exec  Fail medium pred: SELECT car_makers.FullName, car_makers.Maker, Count(*) FROM car_makers JOIN model_list GROUP BY car_makers.Maker
           medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
---
Exec  Fail medium pred: SELECT car_makers.FullName, car_makers.FullName, Count(*) FROM car_makers JOIN model_list GROUP BY car_makers.Maker
           medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
---
Exec  OK   hard pred: SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
---
Exec  OK   hard pred: SELECT model_list.Model FROM cars_data JOIN model_list ORDER BY cars_data.Horsepower Asc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
---
Exec  Fail extra pred: SELECT car_names.Model FROM cars_data JOIN car_names WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
           extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
---
Exec  Fail extra pred: SELECT car_names.Model FROM cars_data JOIN car_names WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
           extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
---
Exec  Fail extra pred: SELECT car_makers.Maker FROM car_makers JOIN model_list JOIN cars_data WHERE cars_data.Year = 'terminal'
           extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
---
Exec  Fail extra pred: SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list JOIN cars_data WHERE cars_data.Year = 'terminal'
           extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
---
Exec  Fail extra pred: SELECT cars_data.Year, cars_data.Year FROM cars_data ORDER BY cars_data.Year Asc
           extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
---
Exec  Fail extra pred: SELECT car_makers.Maker, cars_data.Year FROM cars_data JOIN car_names JOIN car_makers ORDER BY cars_data.Year Asc LIMIT 1
           extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
---
Exec  Fail hard pred: SELECT DISTINCT model_list.Model FROM model_list JOIN cars_data WHERE cars_data.Year > 'terminal'
           hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
---
Exec  Fail hard pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_names JOIN cars_data WHERE cars_data.Year > 'terminal'
           hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
---
Exec  Fail hard pred: SELECT continents.Continent, Count(*) FROM continents JOIN car_makers GROUP BY continents.Continent
           hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
---
Exec  Fail hard pred: SELECT continents.Continent, Count(*) FROM continents JOIN car_makers GROUP BY continents.Continent
           hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
---
Exec  Fail medium pred: SELECT Count(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list GROUP BY car_makers.Maker
           medium gold: select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
---
Exec  Fail medium pred: SELECT Count(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list GROUP BY car_makers.Id
           medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
---
Exec  Fail medium pred: SELECT cars_data.Accelerate FROM car_names JOIN cars_data WHERE car_names.Make = 'terminal'
           medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
---
Exec  Fail medium pred: SELECT cars_data.Accelerate FROM car_names JOIN cars_data WHERE car_names.Make = 'terminal'
           medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
---
Exec  Fail medium pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
---
Exec  Fail medium pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
---
Exec  Fail hard pred: SELECT Count(*) FROM car_makers WHERE car_makers.Country = 'terminal'
           hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
---
Exec  Fail hard pred: SELECT Count(*) FROM car_makers WHERE car_makers.Country = 'terminal'
           hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
---
Exec  OK   easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
---
Exec  OK   easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
---
Exec  OK   medium pred: SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal' AND cars_data.Year = 'terminal'
           medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
---
Exec  OK   medium pred: SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal' AND cars_data.Year = 'terminal'
           medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
---
Exec  Fail medium pred: SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list
           medium gold: SELECT Maker ,  Model FROM MODEL_LIST;
---
Exec  Fail medium pred: SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list
           medium gold: SELECT Maker ,  Model FROM MODEL_LIST;
---
Exec  Fail medium pred: SELECT countries.CountryName, car_makers.Id FROM car_makers JOIN countries
           medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
---
Exec  Fail medium pred: SELECT countries.CountryName, car_makers.Id FROM countries JOIN car_makers GROUP BY car_makers.Country ORDER BY Count(*) Asc
           medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
---
Exec  OK   medium pred: SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
           medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
---
Exec  Fail medium pred: SELECT Avg(cars_data.Weight), Avg(cars_data.Year), cars_data.Year FROM cars_data GROUP BY cars_data.Year
           medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
---
Exec  Fail extra pred: SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING Count(*) >= 'terminal'
           extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY car_makers.Country HAVING Count(*) >= 'terminal'
           extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
---
Exec  Fail extra pred: SELECT Max(cars_data.Horsepower), Max(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT Max(cars_data.Horsepower), cars_data.Horsepower FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT model_list.Model FROM cars_data JOIN car_names JOIN model_list ORDER BY cars_data.MPG Desc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT model_list.Model FROM car_names JOIN cars_data JOIN model_list ORDER BY cars_data.MPG Desc LIMIT 1
           hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
---
Exec  Fail easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Year < 'terminal'
           easy gold: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
---
Exec  Fail easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Year < 'terminal'
           easy gold: select avg(horsepower) from cars_data where year  <  1980;
---
Exec  Fail medium pred: SELECT Avg(cars_data.Edispl) FROM car_names JOIN cars_data WHERE car_names.Model = 'terminal'
           medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
---
Exec  Fail medium pred: SELECT Avg(cars_data.Edispl) FROM cars_data
           medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
---
Exec  OK   medium pred: SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders
           medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
---
Exec  Fail medium pred: SELECT Max(cars_data.Accelerate) FROM cars_data
           medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
---
Exec  Fail hard pred: SELECT model_list.Model FROM car_names JOIN model_list GROUP BY car_names.Model ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Year = 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
---
Exec  Fail easy pred: SELECT Count(*) FROM cars_data JOIN car_makers WHERE cars_data.Year = 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
---
Exec  Fail medium pred: SELECT Count(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
---
Exec  Fail medium pred: SELECT Count(*) FROM car_makers JOIN model_list WHERE car_makers.Maker = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
---
Exec  Fail medium pred: SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail medium pred: SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list GROUP BY model_list.Maker HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers JOIN cars_data WHERE car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
           extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_names JOIN cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Weight > 'terminal'
           extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
---
Exec  Fail easy pred: SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
           easy gold: select distinct year from cars_data where weight between 3000 and 4000;
---
Exec  Fail easy pred: SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
           easy gold: select distinct year from cars_data where weight between 3000 and 4000;
---
Exec  OK   medium pred: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1
           medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
---
Exec  OK   medium pred: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1
           medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT cars_data.Cylinders, cars_data.Cylinders FROM car_names JOIN cars_data WHERE car_names.Model = 'terminal' ORDER BY cars_data.Accelerate Asc LIMIT 1
           extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
---
Exec  Fail extra pred: SELECT cars_data.Cylinders, cars_data.Cylinders FROM car_names JOIN cars_data JOIN model_list WHERE car_names.Model = 'terminal' ORDER BY cars_data.Accelerate Asc LIMIT 1
           extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
---
Exec  Fail hard pred: SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data)
           hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
---
Exec  Fail hard pred: SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data)
           hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
---
Exec  Fail medium pred: SELECT Count(*) FROM car_makers
           medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
---
Exec  OK   medium pred: SELECT Count(*) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 'terminal'
           medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
---
Exec  Fail extra pred: SELECT model_list.Model FROM car_names JOIN model_list JOIN cars_data WHERE cars_data.Cylinders = 'terminal' ORDER BY cars_data.Horsepower Desc LIMIT 1
           extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT model_list.Model FROM cars_data JOIN model_list ORDER BY cars_data.Cylinders Desc LIMIT 1
           extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT car_names.Model, car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Cylinders > 'terminal'
           extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
---
Exec  Fail extra pred: SELECT cars_data.Id, car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Cylinders != 'terminal'
           extra gold: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
---
Exec  OK   medium pred: SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Year < 'terminal'
           medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
---
Exec  OK   medium pred: SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Year < 'terminal'
           medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
---
Exec  Fail extra pred: SELECT model_list.Model FROM model_list JOIN car_makers WHERE cars_data.Weight > 'terminal' AND car_makers.Maker != 'terminal' EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.Maker = 'terminal'
           extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers JOIN cars_data WHERE cars_data.Weight > 'terminal' AND car_makers.Maker != 'terminal'
           extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
---
Exec  OK   hard pred: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
           hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
---
Exec  OK   hard pred: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
           hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
---
Exec  Fail extra pred: SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           extra gold: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
---
Exec  Fail extra pred: SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail extra pred: SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers JOIN car_names WHERE car_names.Model = 'terminal' GROUP BY countries.CountryId HAVING Count(*) > 'terminal'
           extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
---
Exec  Fail extra pred: SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryId HAVING Count(*) > 'terminal' UNION SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers WHERE car_names.Model = 'terminal' GROUP BY countries.CountryId HAVING Count(*) > 'terminal'
           extra gold: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
---
Exec  OK   easy pred: SELECT airlines.Country FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Country FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   medium pred: SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'terminal'
           medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'terminal'
           medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'terminal'
           medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
---
Exec  OK   medium pred: SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'terminal'
           medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines
           easy gold: SELECT count(*) FROM AIRLINES
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines
           easy gold: SELECT count(*) FROM AIRLINES
---
Exec  OK   easy pred: SELECT Count(*) FROM airports
           easy gold: SELECT count(*) FROM AIRPORTS
---
Exec  OK   easy pred: SELECT Count(*) FROM airports
           easy gold: SELECT count(*) FROM AIRPORTS
---
Exec  OK   easy pred: SELECT Count(*) FROM flights
           easy gold: SELECT count(*) FROM FLIGHTS
---
Exec  OK   easy pred: SELECT Count(*) FROM flights
           easy gold: SELECT count(*) FROM FLIGHTS
---
Exec  OK   easy pred: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation LIKE 'terminal'
           easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
---
Exec  OK   easy pred: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = 'terminal'
           easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'
           easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'
           easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'
           medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
---
Exec  OK   medium pred: SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'
           medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  Fail easy pred: SELECT Count(*) FROM flights
           easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
---
Exec  OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' AND airports.City = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' AND airports.AirportName = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
---
Exec  Fail medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
---
Exec  Fail medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
---
Exec  OK   medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal' AND flights.SourceAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal' AND flights.SourceAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
---
Exec  OK   medium pred: SELECT Count(*) FROM airlines JOIN flights JOIN airports WHERE airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airports WHERE flights.SourceAirport = 'terminal' AND flights.SourceAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
---
Exec  OK   hard pred: SELECT Count(*) FROM airlines JOIN airports WHERE airports.City = 'terminal' AND airlines.Airline = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
---
Exec  OK   hard pred: SELECT Count(*) FROM airlines JOIN airports JOIN flights WHERE airports.City = 'terminal' AND airlines.Airline = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
---
Exec  Fail extra pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY airports.AirportName ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights GROUP BY flights.Airline ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
---
Exec  Fail extra pred: SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights JOIN airports WHERE airlines.Airline = 'terminal' ORDER BY airports.Country Asc LIMIT 1
           extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights JOIN airports WHERE flights.SourceAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.DestAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' EXCEPT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' EXCEPT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.FlightNo < 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.FlightNo < 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
---
Exec  Fail medium pred: SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
---
Exec  Fail medium pred: SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  Fail medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' AND airports.City = 'terminal'
           hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' OR airports.City = 'terminal'
           hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
---
Exec  Fail hard pred: SELECT airports.AirportName, flights.FlightNo FROM airports WHERE airports.AirportCode NOT IN (SELECT flights.SourceAirport FROM flights)
           hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
---
Exec  OK   hard pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode NOT IN (SELECT flights.DestAirport FROM flights WHERE flights.FlightNo = 'terminal')
           hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
---
Exec  OK   easy pred: SELECT Count(*) FROM employee
           easy gold: SELECT count(*) FROM employee
---
Exec  OK   easy pred: SELECT Count(*) FROM employee
           easy gold: SELECT count(*) FROM employee
---
Exec  OK   easy pred: SELECT employee.Name FROM employee ORDER BY employee.Age Asc
           easy gold: SELECT name FROM employee ORDER BY age
---
Exec  Fail easy pred: SELECT employee.Name FROM employee ORDER BY employee.Name Asc
           easy gold: SELECT name FROM employee ORDER BY age
---
Exec  OK   medium pred: SELECT employee.City, Count(*) FROM employee GROUP BY employee.City
           medium gold: SELECT count(*) ,  city FROM employee GROUP BY city
---
Exec  OK   medium pred: SELECT employee.City, Count(*) FROM employee GROUP BY employee.City
           medium gold: SELECT count(*) ,  city FROM employee GROUP BY city
---
Exec  Fail medium pred: SELECT employee.City FROM employee WHERE employee.Age < 'terminal'
           medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
---
Exec  OK   medium pred: SELECT employee.City FROM employee WHERE employee.Age < 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
           medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
---
Exec  OK   medium pred: SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location
           medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
---
Exec  OK   medium pred: SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location
           medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
---
Exec  OK   medium pred: SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1
           medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
---
Exec  OK   medium pred: SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1
           medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Min(shop.Number_products), Max(shop.Number_products) FROM shop
           medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop
---
Exec  OK   medium pred: SELECT Min(shop.Number_products), Max(shop.Number_products) FROM shop
           medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop
---
Exec  OK   medium pred: SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products Desc
           medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
---
Exec  OK   medium pred: SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products Desc
           medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT Avg(shop.Number_products) FROM shop)
           hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT Avg(shop.Number_products) FROM shop)
           hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
---
Exec  OK   extra pred: SELECT employee.Name FROM employee JOIN evaluation GROUP BY evaluation.Employee_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT employee.Name FROM employee JOIN evaluation GROUP BY evaluation.Employee_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT employee.Name FROM employee JOIN evaluation ORDER BY evaluation.Bonus Desc LIMIT 1
           hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
---
Exec  Fail hard pred: SELECT employee.Name FROM evaluation JOIN employee ORDER BY evaluation.Bonus Desc LIMIT 1
           hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
---
Exec  OK   hard pred: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)
           hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
---
Exec  OK   hard pred: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)
           hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
---
Exec  OK   extra pred: SELECT shop.Name FROM hiring JOIN shop GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT shop.Name FROM shop JOIN hiring GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)
           hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)
           hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
---
Exec  Fail medium pred: SELECT shop.Name, Count(*) FROM hiring JOIN shop GROUP BY hiring.Shop_ID
           medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
---
Exec  Fail medium pred: SELECT shop.Name, Count(*) FROM hiring JOIN shop GROUP BY shop.Name
           medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
---
Exec  OK   easy pred: SELECT Sum(evaluation.Bonus) FROM evaluation
           easy gold: SELECT sum(bonus) FROM evaluation
---
Exec  OK   easy pred: SELECT Sum(evaluation.Bonus) FROM evaluation
           easy gold: SELECT sum(bonus) FROM evaluation
---
Exec  OK   easy pred: SELECT * FROM hiring
           easy gold: SELECT * FROM hiring
---
Exec  OK   easy pred: SELECT * FROM hiring
           easy gold: SELECT * FROM hiring
---
Exec  OK   hard pred: SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal' INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal'
           hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
---
Exec  OK   hard pred: SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal' INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal'
           hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
---
Exec  OK   easy pred: SELECT Count(DISTINCT shop.Location) FROM shop
           easy gold: SELECT count(DISTINCT LOCATION) FROM shop
---
Exec  OK   easy pred: SELECT Count(DISTINCT shop.Location) FROM shop
           easy gold: SELECT count(DISTINCT LOCATION) FROM shop
---
Exec  OK   easy pred: SELECT Count(*) FROM Documents
           easy gold: SELECT count(*) FROM Documents
---
Exec  OK   easy pred: SELECT Count(*) FROM Documents
           easy gold: SELECT count(*) FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents
           medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents
           medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'
           medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
---
Exec  OK   medium pred: SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'
           medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
---
Exec  Fail easy pred: SELECT Count(DISTINCT Templates.Template_Type_Code) FROM Templates
           easy gold: SELECT count(DISTINCT template_id) FROM Documents
---
Exec  Fail easy pred: SELECT Count(DISTINCT Templates.Template_Type_Code) FROM Templates
           easy gold: SELECT count(DISTINCT template_id) FROM Documents
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
---
Exec  OK   medium pred: SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID
           medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
---
Exec  OK   medium pred: SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID
           medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
---
Exec  Fail extra pred: SELECT Templates.Template_Type_Code, Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'
           easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
---
Exec  OK   easy pred: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'
           easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
---
Exec  OK   hard pred: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
           hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
---
Exec  OK   hard pred: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
           hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(*) FROM Templates
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(*) FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates
---
Exec  OK   easy pred: SELECT DISTINCT Templates.Template_Type_Code FROM Templates
           easy gold: SELECT DISTINCT template_type_code FROM Templates
---
Exec  OK   easy pred: SELECT DISTINCT Templates.Template_Type_Code FROM Templates
           easy gold: SELECT DISTINCT template_type_code FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
---
Exec  OK   medium pred: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'
           easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'
           easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
---
Exec  OK   medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 'terminal'
           medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
---
Exec  OK   medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 'terminal'
           medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
---
Exec  OK   medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
---
Exec  OK   medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
---
Exec  OK   hard pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Templates.Template_Type_Code FROM Templates
           hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) < 'terminal'
           easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
---
Exec  OK   easy pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) < 'terminal'
           easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
---
Exec  Fail medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates
---
Exec  Fail medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
---
Exec  Fail medium pred: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
---
Exec  Fail medium pred: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
---
Exec  Fail extra pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates
           hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
---
Exec  Fail hard pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates
           hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
---
Exec  OK   medium pred: SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
           medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types
---
Exec  OK   medium pred: SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
           medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'
           easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'
           easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
---
Exec  Fail medium pred: SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates JOIN Documents
           medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
---
Exec  Fail medium pred: SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Templates JOIN Ref_Template_Types
           medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
---
Exec  Fail medium pred: SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
---
Exec  Fail medium pred: SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
---
Exec  OK   easy pred: SELECT Count(*) FROM Paragraphs
           easy gold: SELECT count(*) FROM Paragraphs
---
Exec  OK   easy pred: SELECT Count(*) FROM Paragraphs
           easy gold: SELECT count(*) FROM Paragraphs
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
---
Exec  Fail medium pred: SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal'
           medium gold: select other_details from paragraphs where paragraph_text like 'korea'
---
Exec  OK   medium pred: SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE 'terminal'
           medium gold: select other_details from paragraphs where paragraph_text like 'korea'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_Text FROM Paragraphs WHERE Paragraphs.Document_ID = 'terminal'
           medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
---
Exec  Fail medium pred: SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc
           medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
---
Exec  Fail medium pred: SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc
           medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
---
Exec  Fail medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID
           medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
---
Exec  Fail medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID
           medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
---
Exec  OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
---
Exec  OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail easy pred: SELECT Documents.Document_ID FROM Documents JOIN Paragraphs WHERE Paragraphs.Document_ID BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
---
Exec  Fail easy pred: SELECT Documents.Document_ID FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID HAVING Count(*) BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
---
Exec  OK   hard pred: SELECT Documents.Document_ID FROM Documents JOIN Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Paragraphs.Document_ID FROM Documents JOIN Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal'
           hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Documents JOIN Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Paragraphs.Document_ID FROM Documents JOIN Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal'
           hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
---
Exec  OK   easy pred: SELECT Count(*) FROM teacher
           easy gold: SELECT count(*) FROM teacher
---
Exec  OK   easy pred: SELECT Count(*) FROM teacher
           easy gold: SELECT count(*) FROM teacher
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher ORDER BY teacher.Age Asc
           easy gold: SELECT Name FROM teacher ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher ORDER BY teacher.Age Asc
           easy gold: SELECT Name FROM teacher ORDER BY Age ASC
---
Exec  OK   medium pred: SELECT DISTINCT teacher.Age, teacher.Hometown FROM teacher
           medium gold: SELECT Age ,  Hometown FROM teacher
---
Exec  OK   medium pred: SELECT DISTINCT teacher.Age, teacher.Hometown FROM teacher
           medium gold: SELECT Age ,  Hometown FROM teacher
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'
           easy gold: select name from teacher where hometown != "little lever urban district"
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'
           easy gold: select name from teacher where hometown != "little lever urban district"
---
Exec  OK   medium pred: SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'
           medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
---
Exec  OK   medium pred: SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'
           medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
---
Exec  OK   medium pred: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age Asc LIMIT 1
           medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
---
Exec  OK   medium pred: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age Asc LIMIT 1
           medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
---
Exec  OK   medium pred: SELECT teacher.Hometown, Count(*) FROM teacher GROUP BY teacher.Hometown
           medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
---
Exec  OK   medium pred: SELECT Count(*), teacher.Hometown FROM teacher GROUP BY teacher.Hometown
           medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
---
Exec  OK   hard pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT * FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
---
Exec  OK   easy pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING Count(*) >= 'terminal'
           easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
---
Exec  Fail medium pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN course JOIN teacher
           medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
---
Exec  Fail medium pred: SELECT teacher.Name, course.Course FROM course JOIN course_arrange JOIN teacher
           medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
---
Exec  Fail hard pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN course JOIN teacher ORDER BY teacher.Name Asc
           hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
---
Exec  Fail hard pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN teacher JOIN course ORDER BY teacher.Name Asc
           hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
---
Exec  Fail hard pred: SELECT teacher.Name FROM course JOIN course_arrange JOIN teacher WHERE course.Course = 'terminal'
           hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
---
Exec  Fail hard pred: SELECT teacher.Name FROM course JOIN course_arrange JOIN teacher WHERE course.Course = 'terminal'
           hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
---
Exec  Fail medium pred: SELECT teacher.Name, Count(*) FROM course_arrange JOIN teacher GROUP BY teacher.Name
           medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
---
Exec  Fail medium pred: SELECT teacher.Name, Count(*) FROM course_arrange JOIN teacher GROUP BY teacher.Name
           medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
---
Exec  Fail medium pred: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
---
Exec  Fail medium pred: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
---
Exec  OK   hard pred: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)
           hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
---
Exec  OK   hard pred: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)
           hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
---
Exec  OK   easy pred: SELECT Count(*) FROM visitor WHERE visitor.Age < 'terminal'
           easy gold: SELECT count(*) FROM visitor WHERE age  <  30
---
Exec  OK   medium pred: SELECT visitor.Name FROM visitor WHERE visitor.Level_of_membership > 'terminal' ORDER BY visitor.Level_of_membership Desc
           medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
---
Exec  OK   easy pred: SELECT Avg(visitor.Age) FROM visitor WHERE visitor.Level_of_membership <= 'terminal'
           easy gold: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
---
Exec  Fail medium pred: SELECT visitor.Name, visitor.Level_of_membership FROM visitor WHERE visitor.Age > 'terminal' ORDER BY visitor.Age Asc
           medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
---
Exec  OK   medium pred: SELECT museum.Museum_ID, museum.Name FROM museum ORDER BY museum.Num_of_Staff Desc LIMIT 1
           medium gold: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Avg(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year < 'terminal'
           easy gold: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
---
Exec  OK   medium pred: SELECT museum.Open_Year, museum.Num_of_Staff FROM museum WHERE museum.Name = 'terminal'
           medium gold: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
---
Exec  OK   hard pred: SELECT museum.Name FROM museum WHERE museum.Num_of_Staff > (SELECT Min(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year > 'terminal')
           hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
---
Exec  Fail medium pred: SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID HAVING Count(*) > 'terminal'
           medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1
---
Exec  Fail extra pred: SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit GROUP BY visit.visitor_ID ORDER BY Sum(visit.Total_spent) Desc LIMIT 1
           extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit GROUP BY visit.Museum_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT museum.Name FROM museum WHERE museum.Museum_ID NOT IN (SELECT visit.Museum_ID FROM visit)
           hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
---
Exec  Fail hard pred: SELECT visitor.Name, visitor.Age FROM visit JOIN visitor GROUP BY visit.visitor_ID ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Avg(visit.Num_of_Ticket), Max(visit.Num_of_Ticket) FROM visit
           medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
---
Exec  Fail medium pred: SELECT Sum(visit.Total_spent) FROM visitor JOIN visit WHERE visitor.Level_of_membership = 'terminal'
           medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
---
Exec  Fail extra pred: SELECT visitor.Name FROM visitor JOIN visit JOIN museum WHERE museum.Open_Year < 'terminal' INTERSECT SELECT visitor.Name FROM visitor JOIN visit JOIN museum WHERE museum.Open_Year > 'terminal'
           extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
---
Exec  Fail extra pred: SELECT Count(*) FROM visitor WHERE visit.Museum_ID NOT IN (SELECT visit.Museum_ID FROM museum WHERE museum.Open_Year > 'terminal')
           extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
---
Exec  OK   medium pred: SELECT Count(*) FROM museum WHERE museum.Open_Year > 'terminal' OR museum.Open_Year < 'terminal'
           medium gold: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
---
Exec  OK   easy pred: SELECT Count(*) FROM players
           easy gold: SELECT count(*) FROM players
---
Exec  OK   easy pred: SELECT Count(*) FROM players
           easy gold: SELECT count(*) FROM players
---
Exec  OK   easy pred: SELECT Count(*) FROM matches
           easy gold: SELECT count(*) FROM matches
---
Exec  OK   easy pred: SELECT Count(*) FROM matches
           easy gold: SELECT count(*) FROM matches
---
Exec  OK   medium pred: SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal'
           medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
---
Exec  OK   medium pred: SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal'
           medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
---
Exec  Fail medium pred: SELECT Avg(matches.winner_age), Avg(matches.winner_age) FROM matches
           medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
---
Exec  Fail medium pred: SELECT Avg(matches.winner_age), Avg(matches.winner_age) FROM matches
           medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
---
Exec  OK   easy pred: SELECT Avg(matches.winner_rank) FROM matches
           easy gold: SELECT avg(winner_rank) FROM matches
---
Exec  OK   easy pred: SELECT Avg(matches.winner_rank) FROM matches
           easy gold: SELECT avg(winner_rank) FROM matches
---
Exec  Fail easy pred: SELECT Max(matches.winner_rank) FROM matches
           easy gold: SELECT min(loser_rank) FROM matches
---
Exec  Fail easy pred: SELECT matches.winner_rank FROM matches ORDER BY matches.winner_rank Desc LIMIT 1
           easy gold: SELECT min(loser_rank) FROM matches
---
Exec  OK   easy pred: SELECT Count(DISTINCT players.country_code) FROM players
           easy gold: SELECT count(DISTINCT country_code) FROM players
---
Exec  OK   easy pred: SELECT Count(DISTINCT players.country_code) FROM players
           easy gold: SELECT count(DISTINCT country_code) FROM players
---
Exec  OK   easy pred: SELECT Count(DISTINCT matches.winner_name) FROM matches
           easy gold: SELECT count(DISTINCT loser_name) FROM matches
---
Exec  OK   easy pred: SELECT Count(DISTINCT matches.winner_name) FROM matches
           easy gold: SELECT count(DISTINCT loser_name) FROM matches
---
Exec  OK   easy pred: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING Count(*) > 'terminal'
           easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
---
Exec  OK   easy pred: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING Count(*) > 'terminal'
           easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
---
Exec  OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.year = 'terminal' INTERSECT SELECT matches.winner_name FROM matches WHERE matches.year = 'terminal'
           hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
---
Exec  Fail hard pred: SELECT players.first_name FROM matches JOIN players WHERE matches.year = 'terminal' INTERSECT SELECT players.first_name FROM matches JOIN players WHERE matches.year = 'terminal'
           hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
---
Exec  OK   medium pred: SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
           medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
---
Exec  OK   medium pred: SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
           medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
---
Exec  Fail extra pred: SELECT players.country_code, players.first_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal' INTERSECT SELECT players.country_code, players.first_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal'
           extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
---
Exec  Fail extra pred: SELECT players.first_name, players.country_code FROM players JOIN matches WHERE matches.tourney_name = 'terminal' INTERSECT SELECT players.first_name, players.country_code FROM players JOIN matches WHERE matches.tourney_name = 'terminal'
           extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
---
Exec  Fail medium pred: SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Desc LIMIT 1
           medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
---
Exec  Fail medium pred: SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Desc LIMIT 1
           medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date
---
Exec  Fail medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
---
Exec  Fail medium pred: SELECT players.first_name, players.last_name FROM players WHERE players.birth_date = 'terminal' ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625336408.34564839027331563']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625336468.96686746048939860']' timed out after 60 seconds
Exec  Fail hard pred: SELECT players.first_name, players.country_code FROM rankings JOIN players GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625336529.59444959555918957']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625336590.20606951926064388']' timed out after 60 seconds
Exec  Fail hard pred: SELECT players.first_name, players.country_code FROM rankings JOIN players GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.winner_name, matches.winner_rank_points FROM matches GROUP BY matches.winner_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT matches.winner_name, matches.winner_rank_points FROM matches ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = 'terminal' ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = 'terminal' ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
---
Exec  Fail medium pred: SELECT matches.winner_name, players.last_name FROM matches WHERE matches.minutes = (SELECT Max(matches.minutes) FROM matches)
           medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
---
Exec  Fail medium pred: SELECT matches.winner_name, players.last_name FROM players JOIN matches ORDER BY matches.year Desc LIMIT 1
           medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625336653.10418343739314894']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625336713.72464879777816746']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Avg(rankings.ranking) FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625336774.35335372374399633']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625336835.06232629918604442']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Avg(rankings.ranking) FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625336895.696109570881892']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625336956.3055895794792170']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Sum(rankings.ranking_points) FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625337016.92826377095263067']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625337077.79765493873214812']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Sum(rankings.ranking_points) FROM rankings JOIN players GROUP BY rankings.player_id
           medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Exec  OK   medium pred: SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code
---
Exec  OK   medium pred: SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code
---
Exec  OK   hard pred: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT players.country_code FROM players GROUP BY players.country_code HAVING Count(*) > 'terminal'
           easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
---
Exec  Fail easy pred: SELECT players.country_code FROM players WHERE players.country_code > 'terminal'
           easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
---
Exec  Fail medium pred: SELECT rankings.ranking_date, Count(*) FROM rankings GROUP BY rankings.ranking_date
           medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
---
Exec  Fail medium pred: SELECT rankings.ranking_date, Sum(rankings.tours) FROM rankings GROUP BY rankings.ranking
           medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
---
Exec  OK   medium pred: SELECT matches.year, Count(*) FROM matches GROUP BY matches.year
           medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
---
Exec  OK   medium pred: SELECT matches.year, Count(*) FROM matches GROUP BY matches.year
           medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
---
Exec  OK   medium pred: SELECT matches.winner_name, matches.winner_rank FROM matches ORDER BY matches.winner_age Asc LIMIT 1
           medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
---
Exec  OK   medium pred: SELECT matches.winner_name, matches.winner_rank FROM matches ORDER BY matches.winner_age Asc LIMIT 1
           medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
---
Exec  Fail medium pred: SELECT Count(DISTINCT matches.winner_rank) FROM matches WHERE matches.tourney_name = 'terminal' AND matches.winner_rank = 'terminal'
           medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
---
Exec  Fail medium pred: SELECT Count(*) FROM matches WHERE matches.winner_rank = 'terminal' AND matches.tourney_name = 'terminal'
           medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
---
Exec  Fail hard pred: SELECT matches.winner_name, players.country_code, players.birth_date FROM players JOIN matches ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625337142.55348186017497856']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625337202.5955984423182201']' timed out after 60 seconds
Exec  Fail hard pred: SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ORDER BY rankings.ranking_points Desc LIMIT 1
           hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
---
Exec  OK   medium pred: SELECT players.hand, Count(*) FROM players GROUP BY players.hand
           medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand
---
Exec  OK   medium pred: SELECT players.hand, Count(*) FROM players GROUP BY players.hand
           medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand
---
Exec  Fail easy pred: SELECT Count(*) FROM battle JOIN ship WHERE battle.result = 'terminal'
           easy gold: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
---
Exec  OK   medium pred: SELECT ship.name, ship.tonnage FROM ship ORDER BY ship.name Desc
           medium gold: SELECT name ,  tonnage FROM ship ORDER BY name DESC
---
Exec  Fail medium pred: SELECT battle.name, battle.date, battle.result FROM battle
           medium gold: SELECT name ,  date FROM battle
---
Exec  Fail medium pred: SELECT Max(death.killed), Min(death.killed) FROM death GROUP BY death.id
           medium gold: SELECT max(killed) ,  min(killed) FROM death
---
Exec  Fail easy pred: SELECT Avg(death.injured), death.injured FROM death GROUP BY death.injured
           easy gold: SELECT avg(injured) FROM death
---
Exec  Fail medium pred: SELECT death.killed, death.injured FROM death JOIN ship WHERE ship.tonnage = 'terminal'
           medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
---
Exec  OK   medium pred: SELECT battle.name, battle.result FROM battle WHERE battle.bulgarian_commander != 'terminal'
           medium gold: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
---
Exec  Fail medium pred: SELECT DISTINCT battle.id, battle.name FROM battle JOIN ship WHERE ship.ship_type = 'terminal'
           medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
---
Exec  Fail hard pred: SELECT battle.id, battle.name FROM battle JOIN death GROUP BY battle.id HAVING Sum(death.killed) > 'terminal'
           hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
---
Exec  Fail extra pred: SELECT ship.id, ship.name FROM ship JOIN death GROUP BY death.caused_by_ship_id ORDER BY Sum(death.injured) Desc LIMIT 1
           extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT DISTINCT battle.name FROM battle WHERE battle.bulgarian_commander = 'terminal' AND battle.latin_commander = 'terminal'
           medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
---
Exec  OK   easy pred: SELECT Count(DISTINCT battle.result) FROM battle
           easy gold: SELECT count(DISTINCT RESULT) FROM battle
---
Exec  OK   extra pred: SELECT Count(*) FROM battle WHERE battle.id NOT IN (SELECT ship.lost_in_battle FROM ship WHERE ship.tonnage = 'terminal')
           extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );
---
Exec  Fail extra pred: SELECT battle.name, ship.lost_in_battle FROM ship JOIN battle WHERE ship.name = 'terminal' INTERSECT SELECT battle.name, ship.lost_in_battle FROM ship JOIN battle WHERE ship.name = 'terminal'
           extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
---
Exec  Fail extra pred: SELECT battle.name, battle.result, battle.latin_commander FROM battle WHERE battle.latin_commander != 'terminal'
           extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
---
Exec  OK   medium pred: SELECT death.note FROM death WHERE death.note LIKE 'terminal'
           medium gold: SELECT note FROM death WHERE note LIKE '%East%'
---
Exec  Fail medium pred: SELECT Addresses.line_1 FROM Addresses WHERE Addresses.line_1 LIKE 'terminal'
           medium gold: SELECT line_1 ,  line_2 FROM addresses
---
Exec  Fail medium pred: SELECT Addresses.line_1, Addresses.line_3 FROM Addresses
           medium gold: SELECT line_1 ,  line_2 FROM addresses
---
Exec  OK   easy pred: SELECT Count(*) FROM Courses
           easy gold: SELECT count(*) FROM Courses
---
Exec  OK   easy pred: SELECT Count(*) FROM Courses
           easy gold: SELECT count(*) FROM Courses
---
Exec  OK   easy pred: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'
           easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'
---
Exec  OK   easy pred: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'
           easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'
---
Exec  OK   easy pred: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'
           easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
---
Exec  OK   easy pred: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'
           easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
---
Exec  Fail extra pred: SELECT Departments.department_name, Degree_Programs.department_id FROM Departments JOIN Degree_Programs GROUP BY Degree_Programs.department_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Departments.department_name, Degree_Programs.department_id FROM Degree_Programs JOIN Departments GROUP BY Degree_Programs.department_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.department_id) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.department_id) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(*) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
---
Exec  OK   medium pred: SELECT Count(*) FROM Departments JOIN Degree_Programs WHERE Departments.department_name = 'terminal'
           medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
---
Exec  OK   medium pred: SELECT Count(*) FROM Departments JOIN Degree_Programs WHERE Departments.department_name = 'terminal'
           medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
---
Exec  OK   medium pred: SELECT Sections.section_name, Sections.section_description FROM Sections
           medium gold: SELECT section_name ,  section_description FROM Sections
---
Exec  OK   medium pred: SELECT Sections.section_name, Sections.section_description FROM Sections
           medium gold: SELECT section_name ,  section_description FROM Sections
---
Exec  Fail medium pred: SELECT Courses.course_name, Sections.course_id FROM Courses JOIN Sections GROUP BY Sections.course_id HAVING Count(*) <= 'terminal'
           medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
---
Exec  Fail medium pred: SELECT Courses.course_name, Courses.course_id FROM Courses JOIN Sections GROUP BY Courses.course_id HAVING Count(*) < 'terminal'
           medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
---
Exec  OK   easy pred: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Desc
           easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC
---
Exec  OK   easy pred: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Desc
           easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC
---
Exec  Fail extra pred: SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Semesters.semester_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Semesters.semester_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'
           medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
---
Exec  OK   medium pred: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'
           medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Student_Enrolment.student_enrolment_id FROM Students JOIN Student_Enrolment JOIN Degree_Programs WHERE Student_Enrolment.semester_id = 'terminal'
           medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.student_id FROM Students JOIN Student_Enrolment WHERE Student_Enrolment.semester_id = 'terminal'
           medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
---
Exec  Fail hard pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = 'terminal'
           hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
---
Exec  Fail hard pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = 'terminal'
           hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment GROUP BY Courses.course_name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Student_Enrolment.student_enrolment_id, Student_Enrolment.student_id FROM Student_Enrolment_Courses JOIN Student_Enrolment GROUP BY Student_Enrolment.student_enrolment_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Student_Enrolment.degree_program_id, Degree_Programs.department_id FROM Student_Enrolment JOIN Degree_Programs GROUP BY Student_Enrolment.degree_program_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.student_id, Students.first_name, Students.last_name, Count(*) FROM Students JOIN Student_Enrolment GROUP BY Students.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.first_name, Students.middle_name, Count(*) FROM Students JOIN Student_Enrolment GROUP BY Student_Enrolment.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN (SELECT Student_Enrolment.semester_id FROM Student_Enrolment)
           hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
---
Exec  OK   hard pred: SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN (SELECT Student_Enrolment.semester_id FROM Student_Enrolment)
           hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
---
Exec  Fail easy pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses
           easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
---
Exec  Fail easy pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses
           easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Student_Enrolment_Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses JOIN Student_Enrolment GROUP BY Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.last_name FROM Students WHERE Addresses.state_province_county = 'terminal' EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment WHERE Addresses.state_province_county = 'terminal'
           extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
---
Exec  Fail extra pred: SELECT Students.last_name FROM Students WHERE Addresses.state_province_county = 'terminal' EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment
           extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
---
Exec  Fail medium pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Transcripts.transcript_date, Transcript_Contents.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
---
Exec  OK   medium pred: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'
           medium gold: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
---
Exec  OK   medium pred: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'
           medium gold: select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
---
Exec  OK   medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment ORDER BY Students.date_first_registered Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.first_name Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.first_name Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
---
Exec  Fail easy pred: SELECT DISTINCT Students.first_name FROM Addresses JOIN Students
           easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
---
Exec  Fail easy pred: SELECT DISTINCT Students.first_name FROM Students
           easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
---
Exec  Fail extra pred: SELECT Students.current_address_id, Count(*) FROM Students GROUP BY Students.current_address_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Addresses.address_id, Addresses.line_1, Addresses.line_3 FROM Addresses JOIN Students GROUP BY Addresses.address_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Avg(Transcripts.transcript_date) FROM Transcripts
           easy gold: SELECT avg(transcript_date) FROM Transcripts
---
Exec  OK   easy pred: SELECT Avg(Transcripts.transcript_date) FROM Transcripts
           easy gold: SELECT avg(transcript_date) FROM Transcripts
---
Exec  OK   medium pred: SELECT Transcripts.transcript_date, Transcripts.other_details FROM Transcripts ORDER BY Transcripts.transcript_date Asc LIMIT 1
           medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
---
Exec  OK   medium pred: SELECT Min(Transcripts.transcript_date), Transcripts.other_details FROM Transcripts
           medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
---
Exec  OK   easy pred: SELECT Count(*) FROM Transcripts
           easy gold: SELECT count(*) FROM Transcripts
---
Exec  OK   easy pred: SELECT Count(*) FROM Transcripts
           easy gold: SELECT count(*) FROM Transcripts
---
Exec  OK   medium pred: SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date Desc LIMIT 1
           medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date Desc LIMIT 1
           medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Count(*), Student_Enrolment.student_enrolment_id FROM Student_Enrolment JOIN Transcripts GROUP BY Student_Enrolment.student_enrolment_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Count(*), Transcript_Contents.transcript_id FROM Transcript_Contents JOIN Transcripts GROUP BY Transcript_Contents.transcript_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment INTERSECT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment WHERE Students.first_name = 'terminal'
           extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
---
Exec  Fail extra pred: SELECT Student_Enrolment.semester_id FROM Student_Enrolment INTERSECT SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Student_Enrolment.student_id = 'terminal'
           extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
---
Exec  OK   easy pred: SELECT Count(Students.current_address_id) FROM Students
           easy gold: SELECT count(DISTINCT current_address_id) FROM Students
---
Exec  Fail easy pred: SELECT DISTINCT Addresses.zip_postcode FROM Addresses JOIN Students
           easy gold: SELECT count(DISTINCT current_address_id) FROM Students
---
Exec  Fail easy pred: SELECT * FROM Students ORDER BY Students.first_name Asc
           easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
---
Exec  Fail easy pred: SELECT Student_Enrolment.other_details FROM Student_Enrolment ORDER BY Student_Enrolment.other_details Desc
           easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
---
Exec  OK   easy pred: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'terminal'
           easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'
---
Exec  OK   easy pred: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'terminal'
           easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'
---
Exec  Fail hard pred: SELECT Students.first_name FROM Students JOIN Addresses WHERE Addresses.country = 'terminal' OR Students.cell_mobile_number = 'terminal'
           hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
---
Exec  Fail hard pred: SELECT Students.first_name FROM Students WHERE Addresses.country = 'terminal' UNION SELECT Students.first_name FROM Students WHERE Students.cell_mobile_number = 'terminal' OR Students.cell_mobile_number = 'terminal'
           hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc
           easy gold: SELECT Title FROM Cartoon ORDER BY title
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc
           easy gold: SELECT Title FROM Cartoon ORDER BY title
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
---
Exec  OK   easy pred: SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'
           easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
---
Exec  OK   easy pred: SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'
           easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
---
Exec  OK   medium pred: SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date Asc
           medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
---
Exec  OK   medium pred: SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date Asc
           medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
---
Exec  OK   medium pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'
           medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
---
Exec  OK   medium pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'
           medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
---
Exec  OK   hard pred: SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
---
Exec  OK   hard pred: SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
---
Exec  OK   medium pred: SELECT Count(TV_Channel.Content), Count(DISTINCT TV_Channel.Content) FROM TV_Channel
           medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
---
Exec  OK   medium pred: SELECT Count(DISTINCT TV_Channel.Content), Count(DISTINCT TV_Channel.Content) FROM TV_Channel
           medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
---
Exec  OK   easy pred: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'
           easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
---
Exec  OK   easy pred: SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'
           easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
---
Exec  OK   hard pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
---
Exec  OK   hard pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
---
Exec  OK   medium pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language
           medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
---
Exec  OK   medium pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language
           medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel WHERE Cartoon.Title = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel WHERE Cartoon.Title = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
---
Exec  Fail medium pred: SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  Fail medium pred: SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Asc
           easy gold: SELECT Episode FROM TV_series ORDER BY rating
---
Exec  OK   easy pred: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Asc
           easy gold: SELECT Episode FROM TV_series ORDER BY rating
---
Exec  OK   medium pred: SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating Desc LIMIT 1
           medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
---
Exec  OK   medium pred: SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating Desc LIMIT 1
           medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
---
Exec  Fail medium pred: SELECT Min(TV_Channel.Pixel_aspect_ratio_PAR), Max(TV_series.Rating) FROM TV_series JOIN TV_Channel
           medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;
---
Exec  OK   medium pred: SELECT Max(TV_series.Share), Min(TV_series.Share) FROM TV_series
           medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;
---
Exec  OK   easy pred: SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  Fail easy pred: SELECT TV_series.Air_Date FROM Cartoon JOIN TV_series WHERE Cartoon.Title = 'terminal'
           easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  OK   easy pred: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  OK   easy pred: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel WHERE TV_series.Episode = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  Fail medium pred: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  OK   medium pred: SELECT Count(*), Cartoon.Directed_by FROM Cartoon GROUP BY Cartoon.Directed_by
           medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
---
Exec  OK   medium pred: SELECT Cartoon.Directed_by, Count(*) FROM Cartoon GROUP BY Cartoon.Directed_by
           medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
---
Exec  OK   medium pred: SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date Desc LIMIT 1
           medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1
---
Exec  OK   medium pred: SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date Desc LIMIT 1
           medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1
---
Exec  OK   medium pred: SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'terminal'
           medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
---
Exec  OK   medium pred: SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'terminal'
           medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
---
Exec  Fail medium pred: SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail medium pred: SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail hard pred: SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon JOIN TV_series WHERE Cartoon.Written_by = 'terminal'
           hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail hard pred: SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail extra pred: SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal'
           extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
---
Exec  Fail extra pred: SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal'
           extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
---
Exec  OK   medium pred: SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != 'terminal'
           medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
---
Exec  OK   medium pred: SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != 'terminal'
           medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
---
Exec  Fail easy pred: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING Count(*) > 'terminal'
           easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
---
Exec  Fail easy pred: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING Count(*) > 'terminal'
           easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
---
Exec  OK   hard pred: SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
---
Exec  OK   hard pred: SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
---
Exec  Fail hard pred: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
---
Exec  Fail hard pred: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
---
Exec  OK   easy pred: SELECT Count(*) FROM poker_player
           easy gold: SELECT count(*) FROM poker_player
---
Exec  OK   easy pred: SELECT Count(*) FROM poker_player
           easy gold: SELECT count(*) FROM poker_player
---
Exec  OK   easy pred: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings Desc
           easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
---
Exec  OK   easy pred: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings Desc
           easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
---
Exec  OK   medium pred: SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player
           medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
---
Exec  OK   medium pred: SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player
           medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
---
Exec  OK   easy pred: SELECT Avg(poker_player.Earnings) FROM poker_player
           easy gold: SELECT avg(Earnings) FROM poker_player
---
Exec  OK   easy pred: SELECT Avg(poker_player.Earnings) FROM poker_player
           easy gold: SELECT avg(Earnings) FROM poker_player
---
Exec  OK   medium pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1
           medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
---
Exec  OK   medium pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1
           medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'
           easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
---
Exec  OK   easy pred: SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'
           easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
---
Exec  Fail easy pred: SELECT people.Name FROM poker_player JOIN people
           easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
---
Exec  Fail easy pred: SELECT people.Name FROM poker_player JOIN people
           easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made Asc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made Asc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
---
Exec  Fail hard pred: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings Asc LIMIT 1
           hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
---
Exec  Fail hard pred: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings Asc LIMIT 1
           hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
---
Exec  OK   hard pred: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height Desc LIMIT 1
           hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
---
Exec  OK   hard pred: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height Desc LIMIT 1
           hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Avg(poker_player.Earnings) FROM poker_player JOIN people WHERE people.Height > 'terminal'
           medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
---
Exec  Fail medium pred: SELECT Avg(poker_player.Earnings) FROM poker_player WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings Desc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings Desc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
---
Exec  OK   medium pred: SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality
           medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
---
Exec  OK   medium pred: SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality
           medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
---
Exec  OK   hard pred: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
           easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
---
Exec  OK   easy pred: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
           easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
---
Exec  OK   medium pred: SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc
           medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
---
Exec  OK   medium pred: SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc
           medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
---
Exec  OK   easy pred: SELECT people.Name FROM people WHERE people.Nationality != 'terminal'
           easy gold: SELECT Name FROM people WHERE Nationality != "Russia"
---
Exec  OK   easy pred: SELECT people.Name FROM people WHERE people.Nationality != 'terminal'
           easy gold: SELECT Name FROM people WHERE Nationality != "Russia"
---
Exec  OK   hard pred: SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)
           hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
---
Exec  OK   hard pred: SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)
           hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
---
Exec  OK   easy pred: SELECT Count(DISTINCT people.Nationality) FROM people
           easy gold: SELECT count(DISTINCT Nationality) FROM people
---
Exec  OK   easy pred: SELECT Count(DISTINCT people.Nationality) FROM people
           easy gold: SELECT count(DISTINCT Nationality) FROM people
---
Exec  OK   easy pred: SELECT Count(DISTINCT AREA_CODE_STATE.state) FROM AREA_CODE_STATE
           easy gold: SELECT count(*) FROM area_code_state
---
Exec  OK   medium pred: SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS ORDER BY CONTESTANTS.contestant_name Desc
           medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
---
Exec  OK   medium pred: SELECT VOTES.vote_id, VOTES.phone_number, VOTES.state FROM VOTES
           medium gold: SELECT vote_id ,  phone_number ,  state FROM votes
---
Exec  OK   medium pred: SELECT Max(AREA_CODE_STATE.area_code), Min(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE
           medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state
---
Exec  OK   easy pred: SELECT VOTES.created FROM VOTES WHERE VOTES.state = 'terminal'
           easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'
---
Exec  OK   easy pred: SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name != 'terminal'
           easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
---
Exec  OK   medium pred: SELECT DISTINCT VOTES.state, VOTES.created FROM VOTES
           medium gold: SELECT DISTINCT state ,  created FROM votes
---
Exec  Fail medium pred: SELECT VOTES.contestant_number, CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS ORDER BY CONTESTANTS.contestant_name Asc LIMIT 1
           extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Count(*) FROM AREA_CODE_STATE JOIN VOTES WHERE VOTES.state = 'terminal' OR VOTES.state = 'terminal'
           medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
---
Exec  OK   extra pred: SELECT Count(*) FROM CONTESTANTS WHERE CONTESTANTS.contestant_number NOT IN (SELECT VOTES.contestant_number FROM VOTES)
           extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
---
Exec  Fail extra pred: SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES GROUP BY AREA_CODE_STATE.area_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal'
           medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'
---
Exec  Fail extra pred: SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal' INTERSECT SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal'
           extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
---
Exec  OK   medium pred: SELECT DISTINCT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name LIKE 'terminal'
           medium gold: select contestant_name from contestants where contestant_name like "%al%"
---
Exec  OK   easy pred: SELECT country.Name FROM country WHERE country.IndepYear > 'terminal'
           easy gold: SELECT Name FROM country WHERE IndepYear  >  1950
---
Exec  Fail easy pred: SELECT country.Name FROM country WHERE country.Population > 'terminal'
           easy gold: SELECT Name FROM country WHERE IndepYear  >  1950
---
Exec  OK   easy pred: SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
---
Exec  OK   easy pred: SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
---
Exec  OK   easy pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
---
Exec  Fail easy pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal'
           easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
---
Exec  OK   easy pred: SELECT country.Continent FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"
---
Exec  Fail easy pred: SELECT country.Name FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"
---
Exec  Fail medium pred: SELECT city.District FROM city WHERE city.Name = 'terminal'
           medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
---
Exec  Fail medium pred: SELECT country.Region FROM city JOIN country WHERE city.Name = 'terminal'
           medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
---
Exec  Fail medium pred: SELECT country.LifeExpectancy, country.LifeExpectancy FROM country WHERE country.LocalName = 'terminal'
           medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
---
Exec  Fail medium pred: SELECT country.Population, country.LifeExpectancy FROM country WHERE country.LocalName = 'terminal'
           medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
---
Exec  OK   medium pred: SELECT country.Region, country.Population FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
---
Exec  OK   medium pred: SELECT country.Region, country.Population FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
---
Exec  OK   easy pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
---
Exec  OK   easy pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.Region = 'terminal'
           hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
---
Exec  OK   hard pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' ORDER BY country.LifeExpectancy Asc LIMIT 1
           hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
---
Exec  Fail medium pred: SELECT Sum(country.Population), Max(country.GNP) FROM country WHERE country.Region = 'terminal'
           medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
---
Exec  Fail medium pred: SELECT country.Population, Max(country.GNP) FROM country WHERE country.Continent = 'terminal' ORDER BY country.GNP Desc LIMIT 1
           medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.LocalName = 'terminal'
           medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
---
Exec  OK   medium pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal' OR country.Continent = 'terminal'
           medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
---
Exec  Fail medium pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal' OR country.Continent = 'terminal'
           medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
---
Exec  Fail easy pred: SELECT city.Population FROM city WHERE city.District = 'terminal'
           easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
---
Exec  OK   easy pred: SELECT Sum(city.Population) FROM city WHERE city.District = 'terminal'
           easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
---
Exec  OK   medium pred: SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.GovernmentForm = 'terminal'
           medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
---
Exec  Fail medium pred: SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
---
Exec  OK   easy pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage
           easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
---
Exec  OK   easy pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage
           easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
---
Exec  Fail easy pred: SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
---
Exec  Fail easy pred: SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.IsOfficial) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.IsOfficial) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT country.Continent FROM countrylanguage JOIN country GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT country.Continent FROM countrylanguage JOIN country GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail easy pred: SELECT Count(*) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
---
Exec  Fail easy pred: SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
---
Exec  Fail extra pred: SELECT sqlite_sequence.name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT sqlite_sequence.name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT country.Continent) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
---
Exec  Fail medium pred: SELECT Count(DISTINCT country.Continent) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
---
Exec  Fail hard pred: SELECT country.Region FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
---
Exec  Fail hard pred: SELECT country.Region FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
---
Exec  OK   extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.IsOfficial = 'terminal'
           extra gold: select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.IsOfficial = 'terminal' OR countrylanguage.IsOfficial = 'terminal'
           extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Continent = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT countrylanguage.Language FROM countrylanguage
           hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
---
Exec  Fail hard pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.GovernmentForm = 'terminal'
           hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY city.Population Desc LIMIT 1
           extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' GROUP BY city.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
---
Exec  Fail hard pred: SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Region = (SELECT Max(country.SurfaceArea) FROM country WHERE country.Region = (SELECT Max(country.SurfaceArea) FROM country))
           hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  OK   hard pred: SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'terminal' ORDER BY country.SurfaceArea Desc LIMIT 1
           hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
---
Exec  Fail extra pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
---
Exec  OK   extra pred: SELECT Sum(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
---
Exec  Fail extra pred: SELECT country.Population FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
---
Exec  Fail medium pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.HeadOfState = 'terminal'
           medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT countrylanguage.IsOfficial, country.Name FROM countrylanguage JOIN country WHERE country.HeadOfState = 'terminal'
           medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.GNPOld < 'terminal'
           medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage WHERE countrylanguage.IsOfficial < 'terminal'
           medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country)
           hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country)
           hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population < (SELECT Max(country.Population) FROM country WHERE country.Region = 'terminal')
           extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Continent = 'terminal')
           extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
---
Exec  OK   extra pred: SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = 'terminal') AND country.Continent = 'terminal'
           extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = 'terminal') AND country.Continent = 'terminal'
           extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail easy pred: SELECT country.Code FROM country JOIN countrylanguage WHERE countrylanguage.Language != 'terminal'
           easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
---
Exec  Fail easy pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE country.GovernmentForm = 'terminal')
           hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN country WHERE city.ID IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal') AND countrylanguage.Language != 'terminal'
           extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN country JOIN countrylanguage WHERE city.District = 'terminal' AND countrylanguage.Language != 'terminal'
           extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
---
Exec  OK   hard pred: SELECT DISTINCT city.Name FROM country JOIN countrylanguage JOIN city WHERE country.Continent = 'terminal' AND countrylanguage.Language = 'terminal'
           hard gold: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
---
Exec  Fail hard pred: SELECT DISTINCT city.Name FROM city JOIN country JOIN countrylanguage WHERE country.Continent = 'terminal' AND countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
---
Exec  Fail medium pred: SELECT country.Name, country.IndepYear, country.Population FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
---
Exec  Fail medium pred: SELECT country.Name, country.IndepYear, country.Population FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
---
Exec  OK   medium pred: SELECT country.Population, country.Name, country.HeadOfState FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  OK   medium pred: SELECT country.Name, country.Population, country.HeadOfState FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  Fail medium pred: SELECT country.Name, Count(*) FROM country JOIN countrylanguage GROUP BY country.Name HAVING Count(*) >= 'terminal'
           medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
---
Exec  Fail medium pred: SELECT country.Name, Count(*) FROM countrylanguage JOIN country GROUP BY country.Name HAVING Count(*) > 'terminal'
           medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
---
Exec  OK   extra pred: SELECT Count(*), city.District FROM city WHERE city.Population > (SELECT Avg(city.Population) FROM city) GROUP BY city.District
           extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
---
Exec  OK   extra pred: SELECT Count(*), city.District FROM city WHERE city.Population > (SELECT Avg(city.Population) FROM city) GROUP BY city.District
           extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
---
Exec  OK   medium pred: SELECT country.GovernmentForm, Sum(country.Population) FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) >= 'terminal'
           medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
---
Exec  OK   medium pred: SELECT country.GovernmentForm, Sum(country.Population) FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) >= 'terminal'
           medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy), Sum(country.Population) FROM country WHERE country.LifeExpectancy < 'terminal' GROUP BY country.Continent
           medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
---
Exec  Fail medium pred: SELECT country.Continent, Sum(country.GNP), Avg(country.LifeExpectancy) FROM country GROUP BY country.Continent HAVING Avg(country.LifeExpectancy) < 'terminal'
           medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
---
Exec  Fail medium pred: SELECT country.Name, country.Region FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
---
Exec  Fail medium pred: SELECT country.Name, country.Region FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
---
Exec  Fail easy pred: SELECT Count(*) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"
---
Exec  Fail easy pred: SELECT Count(*) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"
---
Exec  OK   medium pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population = 'terminal'
           medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
---
Exec  OK   medium pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population = 'terminal'
           medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
---
Exec  OK   hard pred: SELECT Sum(country.Population), Avg(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal' AND country.SurfaceArea > 'terminal'
           hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
---
Exec  OK   hard pred: SELECT Sum(country.SurfaceArea), Avg(country.SurfaceArea) FROM country WHERE country.SurfaceArea > 'terminal' AND country.Region = 'terminal'
           hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
---
Exec  OK   easy pred: SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
---
Exec  OK   easy pred: SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'
           easy gold: select name from city where population between 160000 and 900000
---
Exec  OK   hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT countrylanguage.Language, countrylanguage.Percentage FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY countrylanguage.Percentage Desc LIMIT 1
           medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode, Max(countrylanguage.Percentage) FROM countrylanguage GROUP BY countrylanguage.CountryCode
           medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
---
Exec  Fail extra pred: SELECT Count(*) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' ORDER BY countrylanguage.Percentage Desc LIMIT 1
           extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail extra pred: SELECT Count(*) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY countrylanguage.Percentage Desc LIMIT 1
           medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal' GROUP BY countrylanguage.CountryCode ORDER BY Count(*) Desc LIMIT 1
           medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  OK   easy pred: SELECT Count(*) FROM conductor
           easy gold: SELECT count(*) FROM conductor
---
Exec  OK   easy pred: SELECT Count(*) FROM conductor
           easy gold: SELECT count(*) FROM conductor
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc
           easy gold: SELECT Name FROM conductor ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc
           easy gold: SELECT Name FROM conductor ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'
           easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'
           easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'
---
Exec  OK   easy pred: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Desc
           easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
---
Exec  OK   easy pred: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Desc
           easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
---
Exec  OK   easy pred: SELECT Avg(show.Attendance) FROM show
           easy gold: SELECT avg(Attendance) FROM SHOW
---
Exec  OK   easy pred: SELECT Avg(show.Attendance) FROM show
           easy gold: SELECT avg(Attendance) FROM SHOW
---
Exec  Fail medium pred: SELECT Max(show.Attendance), Min(show.Attendance) FROM performance JOIN show WHERE performance.Type != 'terminal'
           medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
---
Exec  Fail medium pred: SELECT Max(performance.Share), Min(show.Attendance) FROM performance JOIN show WHERE performance.Type != 'terminal'
           medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
---
Exec  OK   easy pred: SELECT Count(DISTINCT conductor.Nationality) FROM conductor
           easy gold: SELECT count(DISTINCT Nationality) FROM conductor
---
Exec  OK   easy pred: SELECT Count(DISTINCT conductor.Nationality) FROM conductor
           easy gold: SELECT count(DISTINCT Nationality) FROM conductor
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc
           easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc
           easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1
           medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1
           medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
---
Exec  Fail medium pred: SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra
           medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
---
Exec  Fail medium pred: SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra
           medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
---
Exec  Fail extra pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT conductor.Name FROM conductor JOIN orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
---
Exec  Fail medium pred: SELECT conductor.Name FROM conductor JOIN orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
---
Exec  OK   medium pred: SELECT orchestra.Record_Company, Count(*) FROM orchestra GROUP BY orchestra.Record_Company
           medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
---
Exec  OK   medium pred: SELECT orchestra.Record_Company, Count(*) FROM orchestra GROUP BY orchestra.Record_Company
           medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
---
Exec  OK   medium pred: SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY Count(*) Asc
           medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
---
Exec  OK   medium pred: SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY Count(*) Asc
           medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)
           hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
---
Exec  OK   hard pred: SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)
           hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
---
Exec  OK   medium pred: SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'
           medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
---
Exec  OK   medium pred: SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'
           medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
---
Exec  OK   medium pred: SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance GROUP BY performance.Orchestra_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
---
Exec  OK   medium pred: SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance GROUP BY performance.Orchestra_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
---
Exec  OK   easy pred: SELECT Count(*) FROM Highschooler
           easy gold: SELECT count(*) FROM Highschooler
---
Exec  Fail easy pred: SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = 'terminal'
           easy gold: SELECT count(*) FROM Highschooler
---
Exec  OK   medium pred: SELECT Highschooler.name, Highschooler.grade FROM Highschooler
           medium gold: SELECT name ,  grade FROM Highschooler
---
Exec  OK   medium pred: SELECT Highschooler.name, Highschooler.grade FROM Highschooler
           medium gold: SELECT name ,  grade FROM Highschooler
---
Exec  OK   easy pred: SELECT DISTINCT Highschooler.grade FROM Highschooler
           easy gold: SELECT grade FROM Highschooler
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler
           easy gold: SELECT grade FROM Highschooler
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'
           easy gold: SELECT name FROM Highschooler WHERE grade  =  10
---
Exec  OK   easy pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'
           easy gold: SELECT name FROM Highschooler WHERE grade  =  10
---
Exec  OK   easy pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'
           medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
---
Exec  Fail medium pred: SELECT Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'
           medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
---
Exec  Fail medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler WHERE Highschooler.grade = 'terminal' GROUP BY Highschooler.grade
           medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
---
Exec  Fail medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler WHERE Highschooler.grade = 'terminal' GROUP BY Highschooler.grade
           medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
---
Exec  OK   hard pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
           easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
---
Exec  OK   easy pred: SELECT DISTINCT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
           easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
---
Exec  OK   medium pred: SELECT Count(*), Friend.student_id FROM Friend GROUP BY Friend.student_id
           medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
---
Exec  Fail medium pred: SELECT Count(*) FROM Friend GROUP BY Friend.friend_id
           medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
---
Exec  Fail medium pred: SELECT Highschooler.name, Count(*) FROM Highschooler JOIN Friend WHERE Highschooler.grade = 'terminal'
           medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler JOIN Friend WHERE Highschooler.grade = 'terminal' GROUP BY Highschooler.name
           medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade = (SELECT Friend.student_id FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY Count(*) Desc LIMIT 1)
           extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade = (SELECT Friend.student_id FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY Count(*) Desc LIMIT 1)
           extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
---
Exec  Fail medium pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade = 'terminal' GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal' AND Highschooler.grade = 'terminal'
           hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
---
Exec  Fail hard pred: SELECT * FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal'
           hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(*) FROM Friend JOIN Highschooler WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(DISTINCT Friend.friend_id) FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  OK   hard pred: SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend
           hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
---
Exec  Fail hard pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.grade = 'terminal' EXCEPT SELECT Friend.student_id FROM Friend
           hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal' EXCEPT SELECT Friend.student_id FROM Highschooler JOIN Friend
           hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
---
Exec  OK   hard pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
---
Exec  Fail hard pred: SELECT Friend.student_id FROM Likes INTERSECT SELECT Friend.student_id FROM Likes
           hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
---
Exec  Fail hard pred: SELECT Friend.student_id FROM Friend INTERSECT SELECT Likes.student_id FROM Likes
           hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Likes INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Likes INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
---
Exec  Fail medium pred: SELECT Count(*), Likes.liked_id FROM Likes GROUP BY Likes.liked_id
           medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
---
Exec  Fail medium pred: SELECT Count(*), Likes.liked_id FROM Likes GROUP BY Likes.liked_id
           medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
---
Exec  Fail medium pred: SELECT Highschooler.name, Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.grade = 'terminal' GROUP BY Likes.student_id
           medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail medium pred: SELECT Highschooler.name, Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.grade = 'terminal' GROUP BY Likes.liked_id
           medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.liked_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Highschooler.name FROM Likes JOIN Highschooler GROUP BY Likes.student_id HAVING Count(Likes.liked_id) >= 'terminal'
           medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  OK   medium pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING Count(DISTINCT Likes.liked_id) >= 'terminal'
           medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  OK   medium pred: SELECT Count(*) FROM Highschooler WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  OK   hard pred: SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   hard pred: SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   extra pred: SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   extra pred: SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  Fail hard pred: SELECT Owners.state FROM Owners INTERSECT SELECT Owners.state FROM Professionals
           hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
---
Exec  OK   hard pred: SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals
           hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
---
Exec  Fail hard pred: SELECT Avg(Dogs.age) FROM Dogs JOIN Treatments WHERE Dogs.name = 'terminal'
           hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
---
Exec  Fail hard pred: SELECT Avg(Dogs.age) FROM Dogs JOIN Treatments
           hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals WHERE Professionals.state = 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) > 'terminal'
           extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals WHERE Professionals.state = 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Treatments JOIN Professionals WHERE * > 'terminal'
           extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
---
Exec  Fail hard pred: SELECT Dogs.name FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments WHERE Charges.charge_amount > 'terminal')
           hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
---
Exec  Fail hard pred: SELECT Dogs.name FROM Dogs JOIN Treatments JOIN Charges WHERE Charges.charge_amount <= 'terminal'
           hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
---
Exec  Fail hard pred: SELECT Professionals.first_name FROM Owners JOIN Dogs EXCEPT SELECT Professionals.first_name FROM Owners JOIN Dogs WHERE Dogs.name = 'terminal'
           hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
---
Exec  Fail hard pred: SELECT Professionals.first_name FROM Professionals JOIN Dogs EXCEPT SELECT Professionals.first_name FROM Professionals JOIN Dogs WHERE Dogs.breed_code = 'terminal'
           hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals JOIN Treatments
           extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.state, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.state, Professionals.email_address FROM Professionals JOIN Treatments
           extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.first_name, Owners.last_name FROM Dogs JOIN Owners GROUP BY Dogs.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs GROUP BY Dogs.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.role_code, Professionals.last_name FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT Breeds.breed_name FROM Breeds JOIN Dogs GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Breeds.breed_name FROM Breeds JOIN Dogs GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs JOIN Charges GROUP BY Owners.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments JOIN Charges GROUP BY Charges.charge_type ORDER BY Sum(Charges.charge_amount) Asc LIMIT 1
           extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments JOIN Charges GROUP BY Treatments.treatment_type_code ORDER BY Sum(Charges.charge_amount) Asc LIMIT 1
           extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs JOIN Charges GROUP BY Owners.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.zip_code FROM Owners JOIN Dogs JOIN Charges GROUP BY Dogs.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.cell_number FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  OK   extra pred: SELECT Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals WHERE Treatments.cost_of_treatment < (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments)
           extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
---
Exec  OK   extra pred: SELECT Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals WHERE Treatments.cost_of_treatment < (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments)
           extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
---
Exec  Fail medium pred: SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals
           medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail medium pred: SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals
           medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail medium pred: SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types
           medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
---
Exec  Fail medium pred: SELECT Charges.charge_type, Treatment_Types.treatment_type_description FROM Treatments JOIN Charges JOIN Treatment_Types
           medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name FROM Owners JOIN Dogs
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail extra pred: SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments GROUP BY Treatments.dog_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
---
Exec  Fail extra pred: SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments GROUP BY Dogs.breed_code ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name FROM Dogs JOIN Owners WHERE Owners.state = 'terminal'
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
---
Exec  Fail medium pred: SELECT Owners.first_name, Breeds.breed_name FROM Owners JOIN Dogs JOIN Breeds WHERE Owners.state = 'terminal'
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
---
Exec  Fail medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments
           medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
---
Exec  Fail medium pred: SELECT DISTINCT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments
           medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
---
Exec  Fail extra pred: SELECT Owners.last_name FROM Owners JOIN Dogs ORDER BY Dogs.date_of_birth Asc LIMIT 1
           extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
---
Exec  Fail extra pred: SELECT Owners.last_name FROM Dogs JOIN Owners ORDER BY Dogs.date_of_birth Asc LIMIT 1
           extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
---
Exec  OK   medium pred: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'
           medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
---
Exec  OK   medium pred: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'
           medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
---
Exec  OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs
           medium gold: SELECT date_arrived ,  date_departed FROM Dogs
---
Exec  OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs
           medium gold: SELECT date_arrived ,  date_departed FROM Dogs
---
Exec  OK   easy pred: SELECT Count(*) FROM Treatments
           easy gold: SELECT count(DISTINCT dog_id) FROM Treatments
---
Exec  OK   easy pred: SELECT Count(DISTINCT Treatments.dog_id) FROM Treatments
           easy gold: SELECT count(DISTINCT dog_id) FROM Treatments
---
Exec  Fail easy pred: SELECT Count(*) FROM Treatments JOIN Professionals WHERE Treatments.treatment_type_code = 'terminal'
           easy gold: SELECT count(DISTINCT professional_id) FROM Treatments
---
Exec  Fail easy pred: SELECT Count(*) FROM Treatments JOIN Professionals WHERE Treatments.dog_id = 'terminal'
           easy gold: SELECT count(DISTINCT professional_id) FROM Treatments
---
Exec  Fail medium pred: SELECT Professionals.role_code, Professionals.city, Professionals.city, Professionals.state FROM Professionals WHERE Professionals.city LIKE 'terminal'
           medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
---
Exec  Fail medium pred: SELECT Professionals.role_code, Professionals.street, Professionals.street, Professionals.state FROM Professionals WHERE Professionals.city LIKE 'terminal'
           medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
---
Exec  OK   medium pred: SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'
           medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
---
Exec  OK   medium pred: SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'
           medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
---
Exec  OK   hard pred: SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)
           hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
---
Exec  OK   hard pred: SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)
           hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
---
Exec  OK   medium pred: SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment Desc LIMIT 1
           medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment Desc LIMIT 1
           medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
---
Exec  OK   extra pred: SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)
           extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)
           extra gold: select count(*) from dogs where dog_id not in ( select dog_id from treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)
           extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
---
Exec  OK   extra pred: SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)
           extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
---
Exec  Fail extra pred: SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments WHERE Treatments.treatment_type_code = 'terminal')
           extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)
           extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
---
Exec  OK   medium pred: SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'terminal'
           medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
---
Exec  OK   medium pred: SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'terminal'
           medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
---
Exec  OK   easy pred: SELECT Avg(Dogs.age) FROM Dogs
           easy gold: SELECT avg(age) FROM Dogs
---
Exec  OK   easy pred: SELECT Avg(Dogs.age) FROM Dogs
           easy gold: SELECT avg(age) FROM Dogs
---
Exec  Fail easy pred: SELECT Max(Dogs.age) FROM Dogs WHERE Dogs.name = 'terminal'
           easy gold: SELECT max(age) FROM Dogs
---
Exec  OK   easy pred: SELECT Dogs.age FROM Dogs ORDER BY Dogs.age Desc LIMIT 1
           easy gold: SELECT max(age) FROM Dogs
---
Exec  OK   medium pred: SELECT Charges.charge_type, Charges.charge_amount FROM Charges
           medium gold: SELECT charge_type ,  charge_amount FROM Charges
---
Exec  Fail medium pred: SELECT Charges.charge_type, Count(*) FROM Charges GROUP BY Charges.charge_type
           medium gold: SELECT charge_type ,  charge_amount FROM Charges
---
Exec  OK   easy pred: SELECT Charges.charge_amount FROM Charges GROUP BY Charges.charge_type ORDER BY Charges.charge_amount Desc LIMIT 1
           easy gold: SELECT max(charge_amount) FROM Charges
---
Exec  OK   easy pred: SELECT Charges.charge_amount FROM Charges ORDER BY Charges.charge_amount Desc LIMIT 1
           easy gold: SELECT max(charge_amount) FROM Charges
---
Exec  OK   medium pred: SELECT Professionals.email_address, Professionals.cell_number, Professionals.home_phone FROM Professionals
           medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals
---
Exec  OK   medium pred: SELECT Professionals.email_address, Professionals.cell_number, Professionals.home_phone FROM Professionals
           medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals
---
Exec  Fail medium pred: SELECT Sizes.size_code FROM Sizes INTERSECT SELECT Dogs.size_code FROM Sizes
           medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs
---
Exec  Fail medium pred: SELECT DISTINCT Dogs.size_code FROM Dogs WHERE Dogs.name = 'terminal'
           medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs
---
Exec  Fail medium pred: SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Treatments JOIN Professionals JOIN Treatment_Types
           medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
---
Exec  Fail medium pred: SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Treatments JOIN Professionals JOIN Treatment_Types
           medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  Fail easy pred: SELECT singer.Citizenship FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  OK   easy pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Asc
           easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
---
Exec  OK   easy pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Asc
           easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
---
Exec  OK   medium pred: SELECT singer.Birth_Year, singer.Citizenship FROM singer
           medium gold: SELECT Birth_Year ,  Citizenship FROM singer
---
Exec  OK   medium pred: SELECT singer.Birth_Year, singer.Citizenship FROM singer
           medium gold: SELECT Birth_Year ,  Citizenship FROM singer
---
Exec  OK   easy pred: SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
           easy gold: SELECT Name FROM singer WHERE Citizenship != "France"
---
Exec  OK   easy pred: SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
           easy gold: SELECT Name FROM singer WHERE Citizenship != "France"
---
Exec  OK   medium pred: SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'
           medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
---
Exec  OK   medium pred: SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'
           medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
---
Exec  OK   medium pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Desc LIMIT 1
           medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
---
Exec  OK   medium pred: SELECT singer.Name FROM song JOIN singer ORDER BY song.Sales Desc LIMIT 1
           medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
---
Exec  OK   medium pred: SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
---
Exec  OK   medium pred: SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1
           hard gold: select citizenship from singer group by citizenship order by count(*) desc limit 1
---
Exec  OK   medium pred: SELECT singer.Citizenship, Max(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
---
Exec  OK   medium pred: SELECT singer.Citizenship, Max(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
---
Exec  Fail medium pred: SELECT song.Title, singer.Name FROM song JOIN singer
           medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
---
Exec  Fail medium pred: SELECT song.Title, singer.Name FROM song JOIN singer
           medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
---
Exec  Fail medium pred: SELECT DISTINCT singer.Name FROM song JOIN singer WHERE song.Sales > 'terminal'
           medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
---
Exec  Fail medium pred: SELECT DISTINCT singer.Name FROM song JOIN singer WHERE song.Sales > 'terminal'
           medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
---
Exec  Fail medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY song.Singer_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
---
Exec  Fail medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY song.Singer_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
---
Exec  Fail medium pred: SELECT singer.Name, Sum(song.Sales) FROM song JOIN singer GROUP BY song.Singer_ID
           medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
---
Exec  Fail medium pred: SELECT Sum(song.Sales), singer.Name FROM song JOIN singer GROUP BY singer.Name
           medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
---
Exec  OK   hard pred: SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN (SELECT song.Singer_ID FROM song)
           hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
---
Exec  Fail hard pred: SELECT Count(*) FROM song WHERE song.Song_ID NOT IN (SELECT song.Singer_ID FROM song)
           hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 'terminal'
           hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 'terminal'
           hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
---
Exec  OK   easy pred: SELECT Count(*) FROM Other_Available_Features
           easy gold: SELECT count(*) FROM Other_Available_Features
---
Exec  Fail medium pred: SELECT Ref_Feature_Types.feature_type_name FROM Other_Available_Features JOIN Ref_Feature_Types WHERE Other_Available_Features.feature_name = 'terminal'
           medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
---
Exec  OK   medium pred: SELECT Ref_Property_Types.property_type_description FROM Ref_Property_Types
           medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
---
Exec  Fail hard pred: SELECT Properties.property_name FROM Properties WHERE Properties.room_count = 'terminal' OR Properties.room_count > 'terminal'
           hard gold: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  Fail medium pred: SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Asc
           medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country, singer.Age FROM singer ORDER BY singer.Age Desc
           medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
---
Exec  OK   medium pred: SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Country = 'terminal'
           medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
---
Exec  OK   medium pred: SELECT Avg(singer.Age), Min(singer.Age), Max(singer.Age) FROM singer WHERE singer.Country = 'terminal'
           medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'
---
Exec  OK   medium pred: SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age Asc LIMIT 1
           medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
---
Exec  OK   medium pred: SELECT singer.Song_Name, singer.Song_release_year FROM singer ORDER BY singer.Age Asc LIMIT 1
           medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1
---
Exec  OK   easy pred: SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
           easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20
---
Exec  OK   easy pred: SELECT DISTINCT singer.Country FROM singer WHERE singer.Age > 'terminal'
           easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20
---
Exec  OK   medium pred: SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
           medium gold: SELECT country ,  count(*) FROM singer GROUP BY country
---
Exec  OK   medium pred: SELECT singer.Country, Count(*) FROM singer GROUP BY singer.Country
           medium gold: SELECT country ,  count(*) FROM singer GROUP BY country
---
Exec  OK   hard pred: SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
           hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
---
Exec  OK   hard pred: SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT Avg(singer.Age) FROM singer)
           hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)
---
Exec  OK   medium pred: SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'
           medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
---
Exec  OK   medium pred: SELECT stadium.Location, stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN 'terminal' AND 'terminal'
           medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000
---
Exec  Fail medium pred: SELECT Max(stadium.Capacity), Avg(stadium.Capacity) FROM stadium
           medium gold: select max(capacity), average from stadium
---
Exec  OK   medium pred: SELECT Avg(stadium.Capacity), Max(stadium.Capacity) FROM stadium
           medium gold: select avg(capacity) ,  max(capacity) from stadium
---
Exec  OK   medium pred: SELECT stadium.Name, stadium.Capacity FROM stadium GROUP BY stadium.Highest ORDER BY Avg(stadium.Average) Desc LIMIT 1
           medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
---
Exec  OK   medium pred: SELECT stadium.Name, stadium.Capacity FROM stadium GROUP BY stadium.Highest ORDER BY Avg(stadium.Average) Desc LIMIT 1
           medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
---
Exec  OK   medium pred: SELECT Count(*) FROM concert WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015
---
Exec  Fail medium pred: SELECT stadium.Name, Count(*) FROM stadium JOIN concert GROUP BY concert.Stadium_ID
           medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
---
Exec  Fail medium pred: SELECT stadium.Stadium_ID, Count(*) FROM concert JOIN stadium GROUP BY stadium.Stadium_ID
           medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert WHERE concert.Year >= 'terminal' GROUP BY concert.Stadium_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Capacity FROM concert JOIN stadium WHERE concert.Year > 'terminal' GROUP BY concert.Stadium_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1
---
Exec  OK   hard pred: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)
           hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
---
Exec  OK   hard pred: SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)
           hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)
---
Exec  OK   hard pred: SELECT singer.Country FROM singer WHERE singer.Age > 'terminal' INTERSECT SELECT singer.Country FROM singer WHERE singer.Age < 'terminal'
           hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30
---
Exec  Fail hard pred: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
---
Exec  Fail hard pred: SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM concert JOIN stadium WHERE concert.Year = 'terminal'
           hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014
---
Exec  Fail medium pred: SELECT concert.concert_Name, concert.Theme, Count(*) FROM concert JOIN singer_in_concert GROUP BY concert.concert_Name
           medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id
---
Exec  Fail medium pred: SELECT concert.concert_Name, concert.Theme, Count(*) FROM concert JOIN singer_in_concert GROUP BY singer_in_concert.concert_ID
           medium gold: select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id
---
Exec  Fail medium pred: SELECT singer.Name, Count(*) FROM singer_in_concert JOIN singer GROUP BY singer_in_concert.Singer_ID
           medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
---
Exec  Fail medium pred: SELECT singer.Name, Count(*) FROM singer_in_concert JOIN singer GROUP BY singer_in_concert.Singer_ID
           medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
---
Exec  Fail hard pred: SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
---
Exec  Fail hard pred: SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = 'terminal'
           hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE 'terminal'
           medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
---
Exec  OK   medium pred: SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE 'terminal'
           medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal' OR concert.Year = 'terminal'
           extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
---
Exec  Fail extra pred: SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal' INTERSECT SELECT stadium.Name, stadium.Location FROM concert JOIN stadium WHERE concert.Year = 'terminal'
           extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015
---
Exec  Fail hard pred: SELECT Count(*) FROM concert JOIN stadium WHERE stadium.Capacity = (SELECT Max(stadium.Capacity) FROM stadium)
           hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
---
Exec  Fail hard pred: SELECT Count(*) FROM concert JOIN stadium WHERE stadium.Capacity = (SELECT Max(stadium.Capacity) FROM stadium)
           hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)
---
Exec  OK   easy pred: SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
           easy gold: SELECT count(*) FROM pets WHERE weight  >  10
---
Exec  OK   easy pred: SELECT Count(*) FROM Pets WHERE Pets.weight > 'terminal'
           easy gold: SELECT count(*) FROM pets WHERE weight  >  10
---
Exec  Fail medium pred: SELECT Pets.weight FROM Pets WHERE Pets.pet_age < 'terminal'
           medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  Fail medium pred: SELECT Count(*) FROM Pets WHERE Pets.PetType = 'terminal' ORDER BY Pets.pet_age Asc LIMIT 1
           medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Max(Pets.weight), Pets.PetType FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType
---
Exec  OK   medium pred: SELECT Max(Pets.weight), Max(DISTINCT Pets.PetType) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType
---
Exec  OK   medium pred: SELECT Count(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Age > 'terminal'
           medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
---
Exec  OK   medium pred: SELECT Count(*) FROM Has_Pet JOIN Student JOIN Pets WHERE Student.Age > 'terminal'
           medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
---
Exec  Fail hard pred: SELECT Count(*) FROM Has_Pet JOIN Pets JOIN Student WHERE Student.Sex = 'terminal'
           hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
---
Exec  Fail hard pred: SELECT Count(*) FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Sex = 'terminal'
           hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
---
Exec  OK   easy pred: SELECT Count(DISTINCT Pets.PetType) FROM Pets
           easy gold: SELECT count(DISTINCT pettype) FROM pets
---
Exec  OK   easy pred: SELECT Count(DISTINCT Pets.PetType) FROM Pets
           easy gold: SELECT count(DISTINCT pettype) FROM pets
---
Exec  Fail extra pred: SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'
           extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' OR Pets.PetType = 'terminal'
           extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'
---
Exec  OK   extra pred: SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
---
Exec  Fail extra pred: SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet WHERE Pets.PetType = 'terminal')
           extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail extra pred: SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.pet_age = 'terminal')
           extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail hard pred: SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
---
Exec  Fail hard pred: SELECT Student.StuID FROM Student EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
---
Exec  Fail extra pred: SELECT Student.Fname, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.PetType = 'terminal' EXCEPT SELECT Has_Pet.StuID FROM Student JOIN Has_Pet WHERE Pets.PetType = 'terminal')
           extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  Fail extra pred: SELECT Student.Fname FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal')
           extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
---
Exec  OK   medium pred: SELECT Pets.PetType, Pets.weight FROM Pets WHERE Pets.pet_age = (SELECT Min(Pets.pet_age) FROM Pets)
           medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  Fail medium pred: SELECT Pets.PetType, Count(*) FROM Pets GROUP BY Pets.PetType ORDER BY Count(*) Asc LIMIT 1
           medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
---
Exec  OK   medium pred: SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 'terminal'
           medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
---
Exec  OK   medium pred: SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 'terminal'
           medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1
---
Exec  Fail medium pred: SELECT Pets.PetType, Avg(Student.Age), Max(Pets.pet_age) FROM Pets JOIN Has_Pet JOIN Student GROUP BY Pets.PetType
           medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
---
Exec  Fail medium pred: SELECT Pets.PetType, Avg(Student.Age), Max(Pets.pet_age) FROM Pets JOIN Has_Pet JOIN Student GROUP BY Pets.PetType
           medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype
---
Exec  OK   medium pred: SELECT Pets.PetType, Avg(Pets.weight) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
---
Exec  OK   medium pred: SELECT Pets.PetType, Avg(Pets.weight) FROM Pets GROUP BY Pets.PetType
           medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype
---
Exec  Fail medium pred: SELECT DISTINCT Student.Fname, Student.Age FROM Student WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal')
           medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
---
Exec  Fail medium pred: SELECT DISTINCT Student.Fname, Student.Age FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal'
           medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
---
Exec  Fail medium pred: SELECT Has_Pet.PetID FROM Pets JOIN Has_Pet JOIN Student WHERE Student.LName = 'terminal'
           medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
---
Exec  Fail medium pred: SELECT Has_Pet.PetID FROM Student JOIN Has_Pet JOIN Pets WHERE Student.LName = 'terminal'
           medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'
---
Exec  OK   medium pred: SELECT Count(*), Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID
           medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
---
Exec  Fail medium pred: SELECT Student.Fname, Count(*) FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = 'terminal' GROUP BY Student.StuID
           medium gold: select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid
---
Exec  Fail medium pred: SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet JOIN Pets GROUP BY Student.StuID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
---
Exec  Fail medium pred: SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet JOIN Pets GROUP BY Has_Pet.StuID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1
---
Exec  Fail hard pred: SELECT Student.LName FROM Student WHERE Student.Age = 'terminal'
           hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
---
Exec  Fail hard pred: SELECT Student.LName FROM Has_Pet JOIN Student JOIN Pets WHERE Pets.pet_age = 'terminal'
           hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
---
Exec  OK   extra pred: SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)
           extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)
---
Exec  OK   extra pred: SELECT Avg(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)
           extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)
---
Exec  OK   easy pred: SELECT Count(*) FROM continents
           easy gold: SELECT count(*) FROM CONTINENTS;
---
Exec  OK   easy pred: SELECT Count(*) FROM continents
           easy gold: SELECT count(*) FROM CONTINENTS;
---
Exec  Fail medium pred: SELECT continents.Continent, continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.Continent
           medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
---
Exec  Fail medium pred: SELECT continents.ContId, continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.ContId
           medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;
---
Exec  OK   easy pred: SELECT Count(*) FROM countries
           easy gold: SELECT count(*) FROM COUNTRIES;
---
Exec  OK   easy pred: SELECT Count(*) FROM countries
           easy gold: SELECT count(*) FROM COUNTRIES;
---
Exec  Fail medium pred: SELECT car_makers.FullName, car_makers.FullName, Count(*) FROM car_makers JOIN model_list GROUP BY car_makers.Maker
           medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
---
Exec  Fail medium pred: SELECT car_makers.FullName, car_makers.FullName, Count(*) FROM car_makers JOIN model_list GROUP BY car_makers.Maker
           medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;
---
Exec  OK   hard pred: SELECT model_list.Model FROM car_names JOIN cars_data JOIN model_list ORDER BY cars_data.Horsepower Asc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
---
Exec  OK   hard pred: SELECT model_list.Model FROM car_names JOIN model_list JOIN cars_data ORDER BY cars_data.Horsepower Asc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;
---
Exec  Fail extra pred: SELECT model_list.Model FROM cars_data WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
           extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
---
Exec  Fail extra pred: SELECT car_names.Model FROM cars_data WHERE cars_data.Weight < (SELECT Avg(cars_data.Weight) FROM cars_data)
           extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)
---
Exec  Fail extra pred: SELECT car_makers.Maker FROM car_makers JOIN cars_data WHERE cars_data.Year = 'terminal'
           extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
---
Exec  Fail extra pred: SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list JOIN cars_data WHERE cars_data.Year = 'terminal'
           extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';
---
Exec  Fail extra pred: SELECT cars_data.Year, cars_data.Year FROM cars_data ORDER BY cars_data.Year Asc LIMIT 1
           extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
---
Exec  Fail extra pred: SELECT car_makers.Maker, cars_data.Year FROM car_makers JOIN cars_data ORDER BY cars_data.Year Asc LIMIT 1
           extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);
---
Exec  Fail hard pred: SELECT DISTINCT model_list.Model FROM model_list JOIN cars_data WHERE cars_data.Year > 'terminal'
           hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
---
Exec  Fail hard pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_names JOIN cars_data WHERE cars_data.Year > 'terminal'
           hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;
---
Exec  Fail hard pred: SELECT continents.Continent, Count(*) FROM continents JOIN countries GROUP BY continents.Continent
           hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
---
Exec  Fail hard pred: SELECT continents.Continent, Count(*) FROM continents JOIN car_makers GROUP BY continents.Continent
           hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;
---
Exec  Fail medium pred: SELECT Count(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list GROUP BY car_makers.Maker
           medium gold: select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;
---
Exec  Fail medium pred: SELECT Count(*), car_makers.Maker, car_makers.FullName FROM car_makers JOIN model_list GROUP BY car_makers.Id
           medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;
---
Exec  Fail medium pred: SELECT cars_data.Accelerate FROM car_names JOIN cars_data WHERE car_names.Make = 'terminal'
           medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
---
Exec  Fail medium pred: SELECT cars_data.Accelerate FROM car_names JOIN cars_data WHERE car_names.Make = 'terminal'
           medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';
---
Exec  Fail medium pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
---
Exec  Fail medium pred: SELECT Count(*) FROM countries JOIN car_makers WHERE countries.CountryName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';
---
Exec  Fail hard pred: SELECT Count(*) FROM car_makers WHERE car_makers.Country = 'terminal'
           hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
---
Exec  Fail hard pred: SELECT Count(*) FROM car_makers WHERE car_makers.Country = 'terminal'
           hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';
---
Exec  OK   easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
---
Exec  OK   easy pred: SELECT Avg(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;
---
Exec  Fail medium pred: SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Year = 'terminal'
           medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
---
Exec  OK   medium pred: SELECT Min(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal' AND cars_data.Year = 'terminal'
           medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974
---
Exec  Fail medium pred: SELECT car_makers.Maker FROM car_makers
           medium gold: SELECT Maker ,  Model FROM MODEL_LIST;
---
Exec  Fail medium pred: SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list
           medium gold: SELECT Maker ,  Model FROM MODEL_LIST;
---
Exec  Fail medium pred: SELECT countries.CountryName, car_makers.Id FROM car_makers JOIN countries
           medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
---
Exec  Fail medium pred: SELECT countries.CountryName, car_makers.Id FROM countries JOIN car_makers GROUP BY car_makers.Id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Horsepower > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;
---
Exec  OK   medium pred: SELECT Avg(cars_data.Weight), cars_data.Year FROM cars_data GROUP BY cars_data.Year
           medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
---
Exec  Fail medium pred: SELECT Avg(cars_data.Weight), Avg(cars_data.Year), cars_data.Year FROM cars_data GROUP BY cars_data.Year
           medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;
---
Exec  Fail extra pred: SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING Count(*) >= 'terminal'
           extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
---
Exec  Fail extra pred: SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY car_makers.Country HAVING Count(*) >= 'terminal'
           extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;
---
Exec  Fail extra pred: SELECT Max(cars_data.Horsepower), Max(cars_data.Weight) FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT cars_data.Horsepower, cars_data.Weight FROM cars_data WHERE cars_data.Cylinders = 'terminal'
           extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT model_list.Model FROM cars_data JOIN model_list GROUP BY model_list.Model ORDER BY Sum(cars_data.MPG) Desc LIMIT 1
           hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT model_list.Model FROM cars_data JOIN model_list ORDER BY cars_data.MPG Desc LIMIT 1
           hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;
---
Exec  OK   easy pred: SELECT Avg(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 'terminal'
           easy gold: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;
---
Exec  OK   easy pred: SELECT Avg(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 'terminal'
           easy gold: select avg(horsepower) from cars_data where year  <  1980;
---
Exec  Fail medium pred: SELECT Avg(cars_data.Edispl) FROM car_names JOIN cars_data WHERE car_names.Model = 'terminal'
           medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
---
Exec  Fail medium pred: SELECT Avg(cars_data.Edispl) FROM car_makers JOIN cars_data WHERE car_makers.FullName = 'terminal'
           medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';
---
Exec  Fail medium pred: SELECT Max(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Accelerate
           medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
---
Exec  Fail medium pred: SELECT Max(cars_data.Accelerate) FROM cars_data
           medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;
---
Exec  OK   hard pred: SELECT car_names.Model FROM car_names GROUP BY car_names.Model ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
---
Exec  Fail hard pred: SELECT model_list.Model FROM model_list GROUP BY model_list.Model ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Year = 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
---
Exec  Fail easy pred: SELECT Count(*) FROM cars_data JOIN car_makers WHERE cars_data.Year = 'terminal'
           easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;
---
Exec  Fail medium pred: SELECT Count(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
---
Exec  Fail medium pred: SELECT Count(*) FROM car_makers JOIN model_list WHERE car_makers.Maker = 'terminal'
           medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';
---
Exec  Fail medium pred: SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail medium pred: SELECT car_makers.Maker, model_list.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers JOIN cars_data WHERE car_makers.FullName = 'terminal' OR cars_data.Weight > 'terminal'
           extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_names JOIN cars_data WHERE cars_data.Horsepower = 'terminal' OR cars_data.Weight > 'terminal'
           extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;
---
Exec  Fail easy pred: SELECT * FROM cars_data WHERE cars_data.Weight < 'terminal' EXCEPT SELECT * FROM cars_data WHERE cars_data.Year > 'terminal'
           easy gold: select distinct year from cars_data where weight between 3000 and 4000;
---
Exec  Fail easy pred: SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < 'terminal' INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > 'terminal'
           easy gold: select distinct year from cars_data where weight between 3000 and 4000;
---
Exec  OK   medium pred: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1
           medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
---
Exec  OK   medium pred: SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate Desc LIMIT 1
           medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT cars_data.Cylinders, cars_data.Cylinders FROM car_names JOIN cars_data WHERE car_names.Model = 'terminal' ORDER BY cars_data.Accelerate Asc LIMIT 1
           extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
---
Exec  Fail extra pred: SELECT cars_data.Cylinders, cars_data.Cylinders FROM car_names JOIN cars_data WHERE car_names.Model = 'terminal' ORDER BY cars_data.Accelerate Asc LIMIT 1
           extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;
---
Exec  Fail hard pred: SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data)
           hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
---
Exec  Fail hard pred: SELECT Count(*) FROM cars_data WHERE cars_data.Accelerate > (SELECT Max(cars_data.Accelerate) FROM cars_data)
           hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );
---
Exec  OK   medium pred: SELECT Count(*) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 'terminal'
           medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
---
Exec  OK   medium pred: SELECT Count(*) FROM car_makers GROUP BY car_makers.Country HAVING Count(*) > 'terminal'
           medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
---
Exec  OK   easy pred: SELECT Count(*) FROM cars_data WHERE cars_data.Cylinders > 'terminal'
           easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;
---
Exec  Fail extra pred: SELECT model_list.Model FROM car_names JOIN cars_data JOIN model_list WHERE cars_data.Cylinders = 'terminal' ORDER BY cars_data.Horsepower Desc LIMIT 1
           extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT cars_data.Id FROM cars_data WHERE cars_data.Cylinders = 'terminal' ORDER BY cars_data.Horsepower Desc LIMIT 1
           extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;
---
Exec  Fail extra pred: SELECT car_names.Make, car_makers.FullName FROM car_names JOIN cars_data JOIN car_makers WHERE cars_data.Cylinders > 'terminal'
           extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;
---
Exec  Fail extra pred: SELECT cars_data.Id, car_makers.FullName FROM car_names JOIN cars_data JOIN car_makers WHERE cars_data.Cylinders != 'terminal'
           extra gold: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;
---
Exec  OK   medium pred: SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Year < 'terminal'
           medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
---
Exec  OK   medium pred: SELECT Max(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 'terminal' OR cars_data.Year < 'terminal'
           medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980
---
Exec  Fail extra pred: SELECT model_list.Model FROM model_list JOIN car_makers WHERE cars_data.Weight < 'terminal' EXCEPT SELECT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.Maker = 'terminal'
           extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
---
Exec  Fail extra pred: SELECT DISTINCT model_list.Model FROM model_list JOIN car_names WHERE cars_data.Weight > 'terminal' EXCEPT SELECT DISTINCT model_list.Model FROM model_list JOIN car_names WHERE car_makers.Maker = 'terminal'
           extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';
---
Exec  OK   hard pred: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
           hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
---
Exec  OK   hard pred: SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN (SELECT car_makers.Country FROM car_makers)
           hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;
---
Exec  Fail extra pred: SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           extra gold: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;
---
Exec  Fail extra pred: SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) >= 'terminal' INTERSECT SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING Count(*) > 'terminal'
           extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;
---
Exec  Fail extra pred: SELECT countries.CountryName, countries.CountryName FROM countries JOIN car_makers JOIN car_names GROUP BY countries.CountryName HAVING Count(*) > 'terminal'
           extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';
---
Exec  Fail extra pred: SELECT countries.CountryName, countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName HAVING Count(*) > 'terminal' UNION SELECT countries.CountryName, countries.CountryName FROM countries JOIN car_makers JOIN model_list WHERE car_names.Model = 'terminal' GROUP BY countries.CountryName HAVING Count(*) > 'terminal'
           extra gold: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';
---
Exec  OK   easy pred: SELECT airlines.Country FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Country FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   easy pred: SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = 'terminal'
           easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"
---
Exec  OK   medium pred: SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'terminal'
           medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airlines.Airline, airlines.Abbreviation FROM airlines WHERE airlines.Country = 'terminal'
           medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airports.AirportCode, airports.City FROM airports WHERE airports.AirportName = 'terminal'
           medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
---
Exec  OK   medium pred: SELECT airports.AirportCode, airports.AirportName FROM airports WHERE airports.City = 'terminal'
           medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines
           easy gold: SELECT count(*) FROM AIRLINES
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines
           easy gold: SELECT count(*) FROM AIRLINES
---
Exec  OK   easy pred: SELECT Count(*) FROM airports
           easy gold: SELECT count(*) FROM AIRPORTS
---
Exec  OK   easy pred: SELECT Count(*) FROM airports
           easy gold: SELECT count(*) FROM AIRPORTS
---
Exec  OK   easy pred: SELECT Count(*) FROM flights
           easy gold: SELECT count(*) FROM FLIGHTS
---
Exec  OK   easy pred: SELECT Count(*) FROM flights
           easy gold: SELECT count(*) FROM FLIGHTS
---
Exec  OK   easy pred: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = 'terminal'
           easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
---
Exec  OK   easy pred: SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation = 'terminal'
           easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'
           easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   easy pred: SELECT Count(*) FROM airlines WHERE airlines.Country = 'terminal'
           easy gold: SELECT count(*) FROM AIRLINES WHERE Country  =  "USA"
---
Exec  OK   medium pred: SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'
           medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
---
Exec  OK   medium pred: SELECT airports.City, airports.Country FROM airports WHERE airports.AirportName = 'terminal'
           medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
---
Exec  OK   easy pred: SELECT airports.AirportName FROM airports WHERE airports.City = 'terminal'
           easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport LIKE 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.DestAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
---
Exec  OK   easy pred: SELECT Count(*) FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"
---
Exec  OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT Count(*) FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' AND airports.City = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' AND airports.AirportName = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"
---
Exec  Fail medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
---
Exec  Fail medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"
---
Exec  OK   medium pred: SELECT Count(*) FROM airlines JOIN airports JOIN flights WHERE flights.SourceAirport = 'terminal' AND airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
---
Exec  OK   medium pred: SELECT Count(*) FROM airlines JOIN airports JOIN flights WHERE airports.AirportName = 'terminal' AND airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"
---
Exec  OK   medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE airlines.Airline = 'terminal' AND flights.SourceAirport = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT Count(*) FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' AND airlines.Airline = 'terminal'
           medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"
---
Exec  OK   hard pred: SELECT Count(*) FROM airlines JOIN airports WHERE airports.City = 'terminal' AND airlines.Airline = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
---
Exec  OK   hard pred: SELECT Count(*) FROM airlines JOIN flights JOIN airports WHERE airports.City = 'terminal' AND airlines.Airline = 'terminal'
           hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"
---
Exec  Fail extra pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.City FROM airports GROUP BY airports.City ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY airports.AirportName ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
---
Exec  Fail extra pred: SELECT airports.AirportCode FROM airports JOIN flights GROUP BY flights.SourceAirport ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY airlines.Airline ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights GROUP BY flights.Airline ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
---
Exec  Fail extra pred: SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights GROUP BY airlines.Country ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.DestAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
---
Exec  OK   medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.DestAirport = 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' INTERSECT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"
---
Exec  OK   extra pred: SELECT flights.Airline FROM flights WHERE flights.SourceAirport = 'terminal' EXCEPT SELECT flights.Airline FROM flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
---
Exec  OK   extra pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal' EXCEPT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = 'terminal'
           extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
---
Exec  Fail medium pred: SELECT flights.Airline FROM airlines JOIN flights GROUP BY flights.Airline HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.FlightNo < 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
---
Exec  Fail medium pred: SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.FlightNo < 'terminal'
           medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
---
Exec  Fail medium pred: SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
---
Exec  Fail medium pred: SELECT flights.FlightNo FROM airlines JOIN flights WHERE airlines.Airline = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
---
Exec  OK   easy pred: SELECT flights.FlightNo FROM flights WHERE flights.DestAirport = 'terminal'
           easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM airports JOIN flights WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   medium pred: SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = 'terminal'
           medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' OR airports.City = 'terminal'
           hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
---
Exec  OK   hard pred: SELECT Count(*) FROM airports JOIN flights WHERE airports.City = 'terminal' OR airports.City = 'terminal'
           hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"
---
Exec  OK   hard pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode NOT IN (SELECT flights.SourceAirport FROM flights)
           hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
---
Exec  OK   hard pred: SELECT airports.AirportName FROM airports WHERE airports.AirportCode NOT IN (SELECT flights.DestAirport FROM flights)
           hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
---
Exec  OK   easy pred: SELECT Count(*) FROM employee
           easy gold: SELECT count(*) FROM employee
---
Exec  OK   easy pred: SELECT Count(*) FROM employee
           easy gold: SELECT count(*) FROM employee
---
Exec  OK   easy pred: SELECT employee.Name FROM employee ORDER BY employee.Age Asc
           easy gold: SELECT name FROM employee ORDER BY age
---
Exec  OK   easy pred: SELECT employee.Name FROM employee ORDER BY employee.Age Asc
           easy gold: SELECT name FROM employee ORDER BY age
---
Exec  OK   medium pred: SELECT employee.City, Count(*) FROM employee GROUP BY employee.City
           medium gold: SELECT count(*) ,  city FROM employee GROUP BY city
---
Exec  OK   medium pred: SELECT employee.City, Count(*) FROM employee GROUP BY employee.City
           medium gold: SELECT count(*) ,  city FROM employee GROUP BY city
---
Exec  Fail medium pred: SELECT employee.City FROM employee WHERE employee.Age < 'terminal'
           medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
---
Exec  OK   medium pred: SELECT employee.City FROM employee WHERE employee.Age < 'terminal' GROUP BY employee.City HAVING Count(*) > 'terminal'
           medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1
---
Exec  OK   medium pred: SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location
           medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
---
Exec  OK   medium pred: SELECT shop.Location, Count(*) FROM shop GROUP BY shop.Location
           medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION
---
Exec  OK   medium pred: SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1
           medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
---
Exec  OK   medium pred: SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products Desc LIMIT 1
           medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Min(shop.Number_products), Max(shop.Number_products) FROM shop
           medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop
---
Exec  OK   medium pred: SELECT Min(shop.Number_products), Max(shop.Number_products) FROM shop
           medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop
---
Exec  OK   medium pred: SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Number_products Desc
           medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
---
Exec  Fail medium pred: SELECT shop.Name, shop.Location, shop.District FROM shop ORDER BY shop.Name Desc
           medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT Avg(shop.Number_products) FROM shop)
           hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Number_products > (SELECT Avg(shop.Number_products) FROM shop)
           hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)
---
Exec  OK   extra pred: SELECT employee.Name FROM employee JOIN evaluation GROUP BY evaluation.Employee_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT employee.Name FROM employee JOIN evaluation GROUP BY evaluation.Employee_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT employee.Name FROM employee JOIN evaluation ORDER BY evaluation.Bonus Desc LIMIT 1
           hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
---
Exec  Fail hard pred: SELECT employee.Name FROM evaluation JOIN employee ORDER BY evaluation.Bonus Desc LIMIT 1
           hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1
---
Exec  OK   hard pred: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)
           hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
---
Exec  OK   hard pred: SELECT employee.Name FROM employee WHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)
           hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
---
Exec  OK   extra pred: SELECT shop.Name FROM hiring JOIN shop GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT shop.Name FROM shop JOIN hiring GROUP BY hiring.Shop_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)
           hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
---
Exec  OK   hard pred: SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT hiring.Shop_ID FROM hiring)
           hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)
---
Exec  Fail medium pred: SELECT shop.Name, Count(*) FROM hiring JOIN shop GROUP BY hiring.Shop_ID
           medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
---
Exec  Fail medium pred: SELECT shop.Name, Count(*) FROM shop JOIN hiring GROUP BY shop.Name
           medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
---
Exec  OK   easy pred: SELECT Sum(evaluation.Bonus) FROM evaluation
           easy gold: SELECT sum(bonus) FROM evaluation
---
Exec  OK   easy pred: SELECT Sum(evaluation.Bonus) FROM evaluation
           easy gold: SELECT sum(bonus) FROM evaluation
---
Exec  OK   easy pred: SELECT * FROM hiring
           easy gold: SELECT * FROM hiring
---
Exec  OK   easy pred: SELECT * FROM hiring
           easy gold: SELECT * FROM hiring
---
Exec  OK   hard pred: SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal' INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal'
           hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
---
Exec  OK   hard pred: SELECT shop.District FROM shop WHERE shop.Number_products < 'terminal' INTERSECT SELECT shop.District FROM shop WHERE shop.Number_products > 'terminal'
           hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000
---
Exec  OK   easy pred: SELECT Count(DISTINCT shop.Location) FROM shop
           easy gold: SELECT count(DISTINCT LOCATION) FROM shop
---
Exec  OK   easy pred: SELECT Count(DISTINCT shop.Location) FROM shop
           easy gold: SELECT count(DISTINCT LOCATION) FROM shop
---
Exec  OK   easy pred: SELECT Count(*) FROM Documents
           easy gold: SELECT count(*) FROM Documents
---
Exec  OK   easy pred: SELECT Count(*) FROM Documents
           easy gold: SELECT count(*) FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents
           medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Documents.Document_Description FROM Documents
           medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents
---
Exec  OK   medium pred: SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'
           medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
---
Exec  OK   medium pred: SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE 'terminal'
           medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
---
Exec  OK   medium pred: SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"
---
Exec  Fail easy pred: SELECT Count(DISTINCT Templates.Template_Type_Code) FROM Templates
           easy gold: SELECT count(DISTINCT template_id) FROM Documents
---
Exec  Fail easy pred: SELECT Count(DISTINCT Templates.Template_Type_Code) FROM Templates
           easy gold: SELECT count(DISTINCT template_id) FROM Documents
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
---
Exec  OK   medium pred: SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID
           medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
---
Exec  OK   medium pred: SELECT Documents.Template_ID, Count(*) FROM Documents GROUP BY Documents.Template_ID
           medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id
---
Exec  Fail extra pred: SELECT Templates.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Documents.Template_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT Documents.Template_ID, Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Documents.Template_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'
           easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
---
Exec  OK   easy pred: SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING Count(*) > 'terminal'
           easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1
---
Exec  OK   hard pred: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
           hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
---
Exec  OK   hard pred: SELECT Templates.Template_ID FROM Templates EXCEPT SELECT Documents.Template_ID FROM Documents
           hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(*) FROM Templates
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates
           easy gold: SELECT count(*) FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates
---
Exec  OK   easy pred: SELECT DISTINCT Templates.Template_Type_Code FROM Templates
           easy gold: SELECT DISTINCT template_type_code FROM Templates
---
Exec  OK   easy pred: SELECT DISTINCT Templates.Template_Type_Code FROM Templates
           easy gold: SELECT DISTINCT template_type_code FROM Templates
---
Exec  OK   medium pred: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
---
Exec  OK   medium pred: SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = 'terminal' OR Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'
           easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
---
Exec  OK   easy pred: SELECT Count(*) FROM Templates WHERE Templates.Template_Type_Code = 'terminal'
           easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 'terminal'
           medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
---
Exec  OK   medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 'terminal'
           medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
---
Exec  OK   medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
---
Exec  OK   medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code
---
Exec  OK   hard pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) < 'terminal'
           easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
---
Exec  OK   easy pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING Count(*) < 'terminal'
           easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code, Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Asc LIMIT 1
           medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates
---
Exec  Fail medium pred: SELECT Templates.Version_Number, Templates.Template_Type_Code FROM Templates
           medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code FROM Templates JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"
---
Exec  Fail medium pred: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
---
Exec  Fail medium pred: SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = 'terminal'
           medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
---
Exec  Fail medium pred: SELECT Templates.Template_Type_Code, Count(*) FROM Templates GROUP BY Templates.Template_Type_Code
           medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
---
Exec  Fail extra pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates
           hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
---
Exec  Fail hard pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types EXCEPT SELECT Templates.Template_Type_Code FROM Templates
           hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
---
Exec  OK   medium pred: SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
           medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types
---
Exec  OK   medium pred: SELECT Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
           medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'
           easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = 'terminal'
           easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
---
Exec  OK   easy pred: SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"
---
Exec  Fail medium pred: SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types EXCEPT SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates
           medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
---
Exec  Fail medium pred: SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
           medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
---
Exec  Fail medium pred: SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
---
Exec  Fail medium pred: SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = 'terminal'
           medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"
---
Exec  OK   easy pred: SELECT Count(*) FROM Paragraphs
           easy gold: SELECT count(*) FROM Paragraphs
---
Exec  OK   easy pred: SELECT Count(*) FROM Paragraphs
           easy gold: SELECT count(*) FROM Paragraphs
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
---
Exec  Fail medium pred: SELECT Count(*) FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
---
Exec  OK   medium pred: SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE 'terminal'
           medium gold: select other_details from paragraphs where paragraph_text like 'korea'
---
Exec  OK   medium pred: SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE 'terminal'
           medium gold: select other_details from paragraphs where paragraph_text like 'korea'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_Text FROM Paragraphs WHERE Paragraphs.Document_ID = 'terminal'
           medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
---
Exec  Fail medium pred: SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = 'terminal'
           medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"
---
Exec  Fail medium pred: SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc
           medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
---
Exec  Fail medium pred: SELECT Paragraphs.Document_ID, Count(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc
           medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
---
Exec  Fail medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID
           medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
---
Exec  Fail medium pred: SELECT Documents.Document_ID, Documents.Document_Name, Count(*) FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID
           medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id
---
Exec  OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
---
Exec  OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) >= 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT Paragraphs.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Documents.Document_ID, Documents.Document_Name FROM Documents JOIN Paragraphs GROUP BY Documents.Document_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Document_ID BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
---
Exec  OK   easy pred: SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING Count(*) BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal'
           hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
---
Exec  OK   hard pred: SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal' INTERSECT SELECT Paragraphs.Document_ID FROM Paragraphs WHERE Paragraphs.Paragraph_Text = 'terminal'
           hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
---
Exec  OK   easy pred: SELECT Count(*) FROM teacher
           easy gold: SELECT count(*) FROM teacher
---
Exec  OK   easy pred: SELECT Count(*) FROM teacher
           easy gold: SELECT count(*) FROM teacher
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher ORDER BY teacher.Age Asc
           easy gold: SELECT Name FROM teacher ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher ORDER BY teacher.Age Asc
           easy gold: SELECT Name FROM teacher ORDER BY Age ASC
---
Exec  OK   medium pred: SELECT teacher.Age, teacher.Hometown FROM teacher
           medium gold: SELECT Age ,  Hometown FROM teacher
---
Exec  OK   medium pred: SELECT teacher.Age, teacher.Hometown FROM teacher
           medium gold: SELECT Age ,  Hometown FROM teacher
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'
           easy gold: select name from teacher where hometown != "little lever urban district"
---
Exec  OK   easy pred: SELECT teacher.Name FROM teacher WHERE teacher.Hometown != 'terminal'
           easy gold: select name from teacher where hometown != "little lever urban district"
---
Exec  OK   medium pred: SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'
           medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
---
Exec  OK   medium pred: SELECT teacher.Name FROM teacher WHERE teacher.Age = 'terminal' OR teacher.Age = 'terminal'
           medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33
---
Exec  OK   medium pred: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age Asc LIMIT 1
           medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
---
Exec  OK   medium pred: SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age Asc LIMIT 1
           medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1
---
Exec  OK   medium pred: SELECT teacher.Hometown, Count(*) FROM teacher GROUP BY teacher.Hometown
           medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
---
Exec  OK   medium pred: SELECT Count(*), teacher.Hometown FROM teacher GROUP BY teacher.Hometown
           medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown
---
Exec  OK   hard pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING Count(*) >= 'terminal'
           easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
---
Exec  OK   easy pred: SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING Count(*) >= 'terminal'
           easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2
---
Exec  Fail medium pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN course JOIN teacher
           medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
---
Exec  Fail medium pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN teacher JOIN course
           medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID
---
Exec  Fail hard pred: SELECT teacher.Name, course.Course FROM course JOIN course_arrange JOIN teacher ORDER BY teacher.Name Asc
           hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
---
Exec  Fail hard pred: SELECT teacher.Name, course.Course FROM course_arrange JOIN teacher JOIN course ORDER BY teacher.Name Asc
           hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name
---
Exec  Fail hard pred: SELECT teacher.Name FROM course JOIN course_arrange JOIN teacher WHERE course.Course = 'terminal'
           hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
---
Exec  Fail hard pred: SELECT teacher.Name FROM course JOIN course_arrange JOIN teacher WHERE course.Course = 'terminal'
           hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"
---
Exec  Fail medium pred: SELECT teacher.Name, Count(*) FROM course_arrange JOIN teacher GROUP BY teacher.Name
           medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
---
Exec  Fail medium pred: SELECT teacher.Name, Count(*) FROM course_arrange JOIN teacher GROUP BY teacher.Name
           medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
---
Exec  Fail medium pred: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
---
Exec  Fail medium pred: SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
---
Exec  OK   hard pred: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)
           hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
---
Exec  OK   hard pred: SELECT teacher.Name FROM teacher WHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)
           hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
---
Exec  OK   easy pred: SELECT Count(*) FROM visitor WHERE visitor.Age < 'terminal'
           easy gold: SELECT count(*) FROM visitor WHERE age  <  30
---
Exec  OK   medium pred: SELECT visitor.Name FROM visitor WHERE visitor.Level_of_membership > 'terminal' ORDER BY visitor.Level_of_membership Desc
           medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
---
Exec  OK   easy pred: SELECT Avg(visitor.Age) FROM visitor WHERE visitor.Level_of_membership <= 'terminal'
           easy gold: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
---
Exec  Fail medium pred: SELECT visitor.Name, visitor.Level_of_membership FROM visitor WHERE visitor.Age > 'terminal' ORDER BY visitor.Age Asc
           medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
---
Exec  OK   medium pred: SELECT museum.Museum_ID, museum.Name FROM museum ORDER BY museum.Num_of_Staff Desc LIMIT 1
           medium gold: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Avg(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year < 'terminal'
           easy gold: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009
---
Exec  OK   medium pred: SELECT museum.Open_Year, museum.Num_of_Staff FROM museum WHERE museum.Name = 'terminal'
           medium gold: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'
---
Exec  OK   hard pred: SELECT museum.Name FROM museum WHERE museum.Num_of_Staff > (SELECT Min(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year > 'terminal')
           hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
---
Exec  Fail medium pred: SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID HAVING Count(*) > 'terminal'
           medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1
---
Exec  Fail extra pred: SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit GROUP BY visit.visitor_ID ORDER BY Sum(visit.Total_spent) Desc LIMIT 1
           extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit GROUP BY visit.Museum_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT museum.Name FROM museum WHERE museum.Museum_ID NOT IN (SELECT visit.Museum_ID FROM visit)
           hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)
---
Exec  Fail hard pred: SELECT visitor.Name, visitor.Age FROM visit JOIN visitor GROUP BY visit.visitor_ID ORDER BY Sum(visit.Num_of_Ticket) Desc LIMIT 1
           hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Avg(visit.Num_of_Ticket), Max(visit.Num_of_Ticket) FROM visit
           medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit
---
Exec  Fail medium pred: SELECT Sum(visit.Total_spent) FROM visitor JOIN visit WHERE visitor.Level_of_membership = 'terminal'
           medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1
---
Exec  Fail extra pred: SELECT visitor.Name FROM visitor JOIN visit JOIN museum WHERE museum.Open_Year < 'terminal' INTERSECT SELECT visitor.Name FROM visitor JOIN visit JOIN museum WHERE museum.Open_Year > 'terminal'
           extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
---
Exec  Fail extra pred: SELECT Count(*) FROM visitor WHERE visit.Museum_ID NOT IN (SELECT visit.Museum_ID FROM museum WHERE museum.Open_Year > 'terminal')
           extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)
---
Exec  OK   medium pred: SELECT Count(*) FROM museum WHERE museum.Open_Year > 'terminal' OR museum.Open_Year < 'terminal'
           medium gold: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008
---
Exec  OK   easy pred: SELECT Count(*) FROM players
           easy gold: SELECT count(*) FROM players
---
Exec  OK   easy pred: SELECT Count(*) FROM players
           easy gold: SELECT count(*) FROM players
---
Exec  OK   easy pred: SELECT Count(*) FROM matches
           easy gold: SELECT count(*) FROM matches
---
Exec  OK   easy pred: SELECT Count(*) FROM matches
           easy gold: SELECT count(*) FROM matches
---
Exec  OK   medium pred: SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal'
           medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
---
Exec  OK   medium pred: SELECT players.first_name, players.birth_date FROM players WHERE players.country_code = 'terminal'
           medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'
---
Exec  Fail medium pred: SELECT Avg(matches.winner_age), Avg(matches.winner_age) FROM matches
           medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
---
Exec  Fail medium pred: SELECT Avg(matches.winner_age), Avg(matches.winner_age) FROM matches
           medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
---
Exec  OK   easy pred: SELECT Avg(matches.winner_rank) FROM matches
           easy gold: SELECT avg(winner_rank) FROM matches
---
Exec  OK   easy pred: SELECT Avg(matches.winner_rank) FROM matches
           easy gold: SELECT avg(winner_rank) FROM matches
---
Exec  Fail easy pred: SELECT matches.winner_rank FROM matches ORDER BY matches.winner_rank Desc LIMIT 1
           easy gold: SELECT min(loser_rank) FROM matches
---
Exec  Fail easy pred: SELECT matches.winner_rank FROM matches ORDER BY matches.winner_rank Desc LIMIT 1
           easy gold: SELECT min(loser_rank) FROM matches
---
Exec  Fail easy pred: SELECT DISTINCT players.country_code FROM players
           easy gold: SELECT count(DISTINCT country_code) FROM players
---
Exec  OK   easy pred: SELECT Count(DISTINCT players.country_code) FROM players
           easy gold: SELECT count(DISTINCT country_code) FROM players
---
Exec  Fail easy pred: SELECT DISTINCT matches.winner_name FROM matches
           easy gold: SELECT count(DISTINCT loser_name) FROM matches
---
Exec  Fail easy pred: SELECT Count(DISTINCT players.last_name) FROM players
           easy gold: SELECT count(DISTINCT loser_name) FROM matches
---
Exec  OK   easy pred: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING Count(*) > 'terminal'
           easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
---
Exec  OK   easy pred: SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING Count(*) > 'terminal'
           easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10
---
Exec  OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.year = 'terminal' INTERSECT SELECT matches.winner_name FROM matches WHERE matches.year = 'terminal'
           hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
---
Exec  Fail hard pred: SELECT players.last_name FROM players JOIN matches WHERE matches.year = 'terminal' INTERSECT SELECT players.last_name FROM players JOIN matches WHERE matches.year = 'terminal'
           hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
---
Exec  Fail medium pred: SELECT matches.loser_name FROM matches WHERE matches.year > 'terminal' OR matches.year = 'terminal'
           medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
---
Exec  OK   medium pred: SELECT Count(*) FROM matches WHERE matches.year = 'terminal' OR matches.year = 'terminal'
           medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
---
Exec  Fail extra pred: SELECT players.country_code, players.first_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal' INTERSECT SELECT players.country_code, players.first_name FROM players JOIN matches WHERE matches.tourney_name = 'terminal'
           extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
---
Exec  Fail extra pred: SELECT players.first_name, players.country_code FROM players JOIN matches WHERE matches.tourney_name = 'terminal' INTERSECT SELECT players.first_name, players.country_code FROM players JOIN matches WHERE matches.tourney_name = 'terminal'
           extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
---
Exec  OK   medium pred: SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Asc LIMIT 1
           medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
---
Exec  Fail medium pred: SELECT players.first_name, players.country_code FROM players ORDER BY players.birth_date Desc LIMIT 1
           medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date
---
Exec  OK   medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date
---
Exec  Fail medium pred: SELECT players.first_name, players.last_name FROM players ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
---
Exec  Fail medium pred: SELECT players.first_name, players.last_name FROM players WHERE players.birth_date = (SELECT players.first_name FROM players ORDER BY players.birth_date Asc) ORDER BY players.birth_date Asc
           medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625337444.064540451568339']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625337504.69105222778436659']' timed out after 60 seconds
Exec  Fail hard pred: SELECT players.first_name, players.country_code FROM rankings JOIN players GROUP BY rankings.player_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625337565.32234986473693767']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625337625.69791228606712670']' timed out after 60 seconds
Exec  Fail hard pred: SELECT players.first_name, players.country_code FROM rankings JOIN players GROUP BY players.first_name ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.year FROM matches GROUP BY matches.year ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT matches.winner_name, matches.loser_rank_points FROM matches GROUP BY matches.winner_rank ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.winner_name, matches.winner_rank_points FROM matches JOIN players GROUP BY matches.winner_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = 'terminal' ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
---
Exec  OK   hard pred: SELECT matches.winner_name FROM matches WHERE matches.tourney_name = 'terminal' ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
---
Exec  Fail medium pred: SELECT matches.winner_name, players.last_name FROM players JOIN matches ORDER BY matches.minutes Desc LIMIT 1
           medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
---
Exec  Fail medium pred: SELECT matches.winner_name, players.last_name FROM players JOIN matches ORDER BY matches.year Desc LIMIT 1
           medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625337690.51959597855550570']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625337751.1398795222386853']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Avg(rankings.ranking) FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625337811.77362631437730292']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625337872.3882049888469465']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Avg(rankings.ranking_points) FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625337933.01287223145024401']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625337993.62194829621413630']' timed out after 60 seconds
Exec  Fail medium pred: SELECT Sum(rankings.ranking_points), players.first_name FROM rankings JOIN players GROUP BY players.first_name
           medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625338054.248714978904689']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625338115.1051576323277607']' timed out after 60 seconds
Exec  Fail medium pred: SELECT players.first_name, Sum(rankings.ranking_points) FROM rankings JOIN players GROUP BY rankings.player_id
           medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
---
Exec  OK   medium pred: SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code
---
Exec  OK   medium pred: SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code
---
Exec  OK   hard pred: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT players.country_code FROM players GROUP BY players.country_code HAVING Count(*) > 'terminal'
           easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
---
Exec  Fail easy pred: SELECT players.country_code FROM players WHERE players.country_code > 'terminal'
           easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
---
Exec  Fail medium pred: SELECT rankings.ranking_date, Count(*) FROM rankings GROUP BY rankings.ranking
           medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
---
Exec  Fail medium pred: SELECT rankings.ranking_date, Sum(rankings.tours) FROM rankings GROUP BY rankings.ranking
           medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
---
Exec  Fail medium pred: SELECT matches.match_num, matches.year FROM matches
           medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
---
Exec  OK   medium pred: SELECT matches.year, Count(*) FROM matches GROUP BY matches.year
           medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR
---
Exec  OK   medium pred: SELECT matches.winner_name, matches.winner_rank FROM matches ORDER BY matches.winner_age Asc LIMIT 1
           medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
---
Exec  OK   medium pred: SELECT matches.winner_name, matches.winner_rank FROM matches ORDER BY matches.winner_age Asc LIMIT 1
           medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
---
Exec  Fail medium pred: SELECT Count(DISTINCT matches.winner_ht) FROM matches WHERE matches.tourney_name = 'terminal'
           medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
---
Exec  Fail medium pred: SELECT Count(*) FROM matches WHERE matches.winner_rank = 'terminal' AND matches.tourney_name = 'terminal'
           medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
---
Exec  Fail hard pred: SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN matches ORDER BY matches.winner_rank_points Desc LIMIT 1
           hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
---
Command '['python3', 'exec_subprocess.py', 'tmp/1625338179.87974365710103338']' timed out after 60 seconds
Command '['python3', 'exec_subprocess.py', 'tmp/1625338239.9230614553842055']' timed out after 60 seconds
Exec  Fail hard pred: SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ORDER BY rankings.ranking_points Desc LIMIT 1
           hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
---
Exec  Fail medium pred: SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand
---
Exec  Fail medium pred: SELECT players.country_code, Count(*) FROM players GROUP BY players.country_code
           medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand
---
Exec  OK   easy pred: SELECT Count(*) FROM ship WHERE ship.disposition_of_ship = 'terminal'
           easy gold: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
---
Exec  OK   medium pred: SELECT ship.name, ship.tonnage FROM ship ORDER BY ship.name Desc
           medium gold: SELECT name ,  tonnage FROM ship ORDER BY name DESC
---
Exec  Fail medium pred: SELECT battle.name, battle.date, battle.result FROM battle
           medium gold: SELECT name ,  date FROM battle
---
Exec  Fail medium pred: SELECT Max(death.killed), Min(death.killed) FROM death GROUP BY death.id
           medium gold: SELECT max(killed) ,  min(killed) FROM death
---
Exec  Fail easy pred: SELECT Avg(death.injured), death.injured FROM death GROUP BY death.injured
           easy gold: SELECT avg(injured) FROM death
---
Exec  Fail medium pred: SELECT death.killed, death.injured FROM ship JOIN death WHERE ship.tonnage = 'terminal'
           medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
---
Exec  OK   medium pred: SELECT battle.name, battle.result FROM battle WHERE battle.bulgarian_commander != 'terminal'
           medium gold: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'
---
Exec  Fail medium pred: SELECT DISTINCT battle.id, battle.name FROM battle JOIN ship WHERE ship.ship_type = 'terminal'
           medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
---
Exec  Fail hard pred: SELECT battle.id, battle.name FROM battle JOIN death GROUP BY battle.id HAVING Sum(death.killed) > 'terminal'
           hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10
---
Exec  Fail extra pred: SELECT ship.id, ship.name FROM ship JOIN death GROUP BY death.caused_by_ship_id ORDER BY Sum(death.injured) Desc LIMIT 1
           extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT DISTINCT battle.name FROM battle WHERE battle.bulgarian_commander = 'terminal' AND battle.latin_commander = 'terminal'
           medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
---
Exec  OK   easy pred: SELECT Count(DISTINCT battle.result) FROM battle
           easy gold: SELECT count(DISTINCT RESULT) FROM battle
---
Exec  OK   extra pred: SELECT Count(*) FROM battle WHERE battle.id NOT IN (SELECT ship.lost_in_battle FROM ship WHERE ship.tonnage = 'terminal')
           extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );
---
Exec  Fail extra pred: SELECT battle.name, battle.date FROM ship JOIN battle WHERE ship.name = 'terminal' INTERSECT SELECT battle.name, battle.date FROM ship JOIN battle WHERE ship.name = 'terminal'
           extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
---
Exec  Fail extra pred: SELECT battle.name, battle.result, battle.latin_commander FROM battle WHERE battle.id NOT IN (SELECT ship.id FROM ship WHERE battle.latin_commander = 'terminal')
           extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
---
Exec  Fail medium pred: SELECT death.note FROM death WHERE death.killed LIKE 'terminal'
           medium gold: SELECT note FROM death WHERE note LIKE '%East%'
---
Exec  Fail medium pred: SELECT Addresses.line_1 FROM Addresses INTERSECT SELECT Addresses.line_1 FROM Addresses
           medium gold: SELECT line_1 ,  line_2 FROM addresses
---
Exec  Fail medium pred: SELECT Addresses.line_1, Addresses.line_3 FROM Addresses
           medium gold: SELECT line_1 ,  line_2 FROM addresses
---
Exec  OK   easy pred: SELECT Count(*) FROM Courses
           easy gold: SELECT count(*) FROM Courses
---
Exec  OK   easy pred: SELECT Count(*) FROM Courses
           easy gold: SELECT count(*) FROM Courses
---
Exec  OK   easy pred: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'
           easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'
---
Exec  OK   easy pred: SELECT Courses.course_description FROM Courses WHERE Courses.course_name = 'terminal'
           easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'
---
Exec  OK   easy pred: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'
           easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
---
Exec  OK   easy pred: SELECT Addresses.zip_postcode FROM Addresses WHERE Addresses.city = 'terminal'
           easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'
---
Exec  Fail extra pred: SELECT Departments.department_name, Degree_Programs.department_id FROM Departments JOIN Degree_Programs GROUP BY Degree_Programs.department_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Departments.department_name, Degree_Programs.department_id FROM Degree_Programs JOIN Departments GROUP BY Degree_Programs.department_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1
---
Exec  OK   easy pred: SELECT Count(DISTINCT Departments.department_name) FROM Departments
           easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.department_id) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
---
Exec  OK   easy pred: SELECT Count(DISTINCT Degree_Programs.degree_summary_name) FROM Degree_Programs
           easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs
---
Exec  OK   medium pred: SELECT Count(*) FROM Degree_Programs JOIN Departments WHERE Departments.department_name = 'terminal'
           medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
---
Exec  OK   medium pred: SELECT Count(*) FROM Departments JOIN Degree_Programs WHERE Departments.department_name = 'terminal'
           medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
---
Exec  OK   medium pred: SELECT Sections.section_name, Sections.section_description FROM Sections
           medium gold: SELECT section_name ,  section_description FROM Sections
---
Exec  OK   medium pred: SELECT Sections.section_name, Sections.section_description FROM Sections
           medium gold: SELECT section_name ,  section_description FROM Sections
---
Exec  Fail medium pred: SELECT Courses.course_name, Sections.course_id FROM Courses JOIN Sections GROUP BY Sections.course_id HAVING Count(*) <= 'terminal'
           medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
---
Exec  Fail medium pred: SELECT Courses.course_name, Sections.course_id FROM Courses JOIN Sections GROUP BY Sections.course_id HAVING Count(*) < 'terminal'
           medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
---
Exec  OK   easy pred: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Desc
           easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC
---
Exec  OK   easy pred: SELECT Sections.section_name FROM Sections ORDER BY Sections.section_name Desc
           easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC
---
Exec  Fail extra pred: SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Semesters.semester_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Semesters.semester_name, Semesters.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Semesters.semester_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'
           medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
---
Exec  OK   medium pred: SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE 'terminal'
           medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.student_id FROM Students JOIN Student_Enrolment JOIN Degree_Programs WHERE Student_Enrolment.semester_id = 'terminal'
           medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.student_id FROM Students JOIN Student_Enrolment WHERE Student_Enrolment.semester_id = 'terminal'
           medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
---
Exec  Fail hard pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = 'terminal'
           hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
---
Exec  Fail hard pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students JOIN Student_Enrolment JOIN Degree_Programs WHERE Degree_Programs.degree_summary_name = 'terminal'
           hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Students JOIN Student_Enrolment GROUP BY Courses.course_name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Degree_Programs.degree_summary_name FROM Courses JOIN Student_Enrolment JOIN Degree_Programs WHERE Courses.course_name = 'terminal' GROUP BY Student_Enrolment.degree_program_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Courses.course_id, Courses.course_name FROM Courses JOIN Student_Enrolment GROUP BY Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Student_Enrolment.degree_program_id, Degree_Programs.degree_summary_name FROM Student_Enrolment JOIN Degree_Programs GROUP BY Student_Enrolment.degree_program_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.student_id, Students.first_name, Students.last_name, Count(*) FROM Students JOIN Student_Enrolment GROUP BY Students.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.first_name, Students.middle_name, Count(*) FROM Students JOIN Student_Enrolment GROUP BY Students.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN (SELECT Student_Enrolment.semester_id FROM Student_Enrolment)
           hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
---
Exec  OK   hard pred: SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN (SELECT Student_Enrolment.semester_id FROM Student_Enrolment)
           hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
---
Exec  Fail easy pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses
           easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
---
Exec  Fail easy pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses JOIN Student_Enrolment
           easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Students.last_name FROM Students WHERE Addresses.state_province_county = 'terminal' EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment WHERE Addresses.state_province_county = 'terminal'
           extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
---
Exec  Fail extra pred: SELECT Students.last_name FROM Students WHERE Addresses.state_province_county = 'terminal' EXCEPT SELECT Students.last_name FROM Students JOIN Student_Enrolment
           extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id
---
Exec  Fail medium pred: SELECT Transcripts.transcript_date, Transcript_Contents.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
---
Exec  OK   medium pred: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'
           medium gold: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'
---
Exec  OK   medium pred: SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = 'terminal' AND Students.last_name = 'terminal'
           medium gold: select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'
---
Exec  Fail medium pred: SELECT Students.first_name, Students.date_first_registered, Students.last_name FROM Students
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Student_Enrolment JOIN Students ORDER BY Students.first_name Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.last_name Asc LIMIT 1
           medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1
---
Exec  Fail easy pred: SELECT DISTINCT Students.first_name FROM Students
           easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
---
Exec  Fail easy pred: SELECT DISTINCT Students.first_name FROM Students
           easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
---
Exec  Fail extra pred: SELECT Students.current_address_id, Count(*) FROM Students GROUP BY Students.current_address_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Addresses.address_id, Addresses.line_1, Addresses.address_id FROM Addresses JOIN Students GROUP BY Addresses.address_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Avg(Transcripts.transcript_date) FROM Transcripts
           easy gold: SELECT avg(transcript_date) FROM Transcripts
---
Exec  OK   easy pred: SELECT Avg(Transcripts.transcript_date) FROM Transcripts
           easy gold: SELECT avg(transcript_date) FROM Transcripts
---
Exec  OK   medium pred: SELECT Transcripts.transcript_date, Transcripts.other_details FROM Transcripts ORDER BY Transcripts.transcript_date Asc LIMIT 1
           medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Transcripts.transcript_date, Transcripts.other_details FROM Transcripts
           medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
---
Exec  OK   easy pred: SELECT Count(*) FROM Transcripts
           easy gold: SELECT count(*) FROM Transcripts
---
Exec  OK   easy pred: SELECT Count(*) FROM Transcripts
           easy gold: SELECT count(*) FROM Transcripts
---
Exec  OK   medium pred: SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date Desc LIMIT 1
           medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date Desc LIMIT 1
           medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Count(*), Transcripts.transcript_id FROM Student_Enrolment JOIN Transcripts GROUP BY Transcripts.transcript_id HAVING Count(*) >= 'terminal'
           hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT Count(*), Transcripts.transcript_id FROM Transcripts GROUP BY Transcripts.transcript_id ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Transcripts.transcript_date, Transcripts.transcript_id FROM Transcripts GROUP BY Transcripts.transcript_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal' INTERSECT SELECT Semesters.semester_name FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal'
           extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
---
Exec  Fail extra pred: SELECT Student_Enrolment.semester_id FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal' INTERSECT SELECT Student_Enrolment.semester_id FROM Semesters JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = 'terminal'
           extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
---
Exec  OK   easy pred: SELECT Count(*) FROM Students
           easy gold: SELECT count(DISTINCT current_address_id) FROM Students
---
Exec  Fail easy pred: SELECT DISTINCT Addresses.zip_postcode FROM Addresses JOIN Students
           easy gold: SELECT count(DISTINCT current_address_id) FROM Students
---
Exec  Fail easy pred: SELECT Student_Enrolment.other_details FROM Student_Enrolment JOIN Students ORDER BY Students.first_name Desc
           easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
---
Exec  Fail easy pred: SELECT Student_Enrolment.other_details FROM Student_Enrolment ORDER BY Student_Enrolment.other_details Desc
           easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
---
Exec  OK   easy pred: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'terminal'
           easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'
---
Exec  OK   easy pred: SELECT Sections.section_description FROM Sections WHERE Sections.section_name = 'terminal'
           easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'
---
Exec  Fail hard pred: SELECT Students.first_name FROM Students JOIN Addresses WHERE Addresses.country = 'terminal' OR Students.cell_mobile_number = 'terminal'
           hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
---
Exec  Fail hard pred: SELECT Students.first_name FROM Students JOIN Addresses WHERE Addresses.country = 'terminal' AND Students.cell_mobile_number = 'terminal'
           hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc
           easy gold: SELECT Title FROM Cartoon ORDER BY title
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon ORDER BY Cartoon.Title Asc
           easy gold: SELECT Title FROM Cartoon ORDER BY title
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
---
Exec  OK   easy pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";
---
Exec  OK   easy pred: SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'
           easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
---
Exec  OK   easy pred: SELECT Count(*) FROM Cartoon WHERE Cartoon.Written_by = 'terminal'
           easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";
---
Exec  OK   medium pred: SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date Asc
           medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
---
Exec  OK   medium pred: SELECT Cartoon.Title, Cartoon.Directed_by FROM Cartoon ORDER BY Cartoon.Original_air_date Asc
           medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
---
Exec  OK   medium pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'
           medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
---
Exec  OK   medium pred: SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'terminal' OR Cartoon.Directed_by = 'terminal'
           medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";
---
Exec  OK   hard pred: SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
---
Exec  OK   hard pred: SELECT TV_Channel.Country, Count(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;
---
Exec  Fail medium pred: SELECT Count(TV_Channel.series_name), TV_Channel.Content FROM TV_Channel
           medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
---
Exec  OK   medium pred: SELECT Count(DISTINCT TV_Channel.Content), Count(DISTINCT TV_Channel.Content) FROM TV_Channel
           medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;
---
Exec  OK   easy pred: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = 'terminal'
           easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'
           easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
---
Exec  OK   easy pred: SELECT Count(*) FROM TV_Channel WHERE TV_Channel.Language = 'terminal'
           easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";
---
Exec  Fail hard pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
---
Exec  OK   hard pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY Count(*) Asc LIMIT 1
           hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;
---
Exec  OK   medium pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language
           medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
---
Exec  OK   medium pred: SELECT TV_Channel.Language, Count(*) FROM TV_Channel GROUP BY TV_Channel.Language
           medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel WHERE Cartoon.Title = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM Cartoon JOIN TV_Channel WHERE Cartoon.Title = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";
---
Exec  Fail medium pred: SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  Fail medium pred: SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  OK   easy pred: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Asc
           easy gold: SELECT Episode FROM TV_series ORDER BY rating
---
Exec  OK   easy pred: SELECT TV_series.Episode FROM TV_series ORDER BY TV_series.Rating Asc
           easy gold: SELECT Episode FROM TV_series ORDER BY rating
---
Exec  OK   medium pred: SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating Desc LIMIT 1
           medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
---
Exec  OK   medium pred: SELECT TV_series.Episode, TV_series.Rating FROM TV_series ORDER BY TV_series.Rating Desc LIMIT 1
           medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;
---
Exec  OK   medium pred: SELECT Min(TV_series.Share), Max(TV_series.Share) FROM TV_series
           medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;
---
Exec  OK   medium pred: SELECT Max(TV_series.Share), Min(TV_series.Share) FROM TV_series
           medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;
---
Exec  OK   easy pred: SELECT TV_series.Air_Date FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  Fail easy pred: SELECT TV_series.Air_Date FROM TV_series JOIN Cartoon WHERE Cartoon.Title = 'terminal'
           easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  OK   easy pred: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  OK   easy pred: SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = 'terminal'
           easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM TV_series JOIN TV_Channel WHERE TV_series.Episode = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series WHERE TV_series.Episode = 'terminal'
           medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";
---
Exec  Fail medium pred: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  Fail medium pred: SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = 'terminal'
           medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";
---
Exec  OK   medium pred: SELECT Cartoon.Directed_by, Count(*) FROM Cartoon GROUP BY Cartoon.Directed_by
           medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
---
Exec  OK   medium pred: SELECT Cartoon.Directed_by, Count(*) FROM Cartoon GROUP BY Cartoon.Directed_by
           medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by
---
Exec  OK   medium pred: SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date Desc LIMIT 1
           medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1
---
Exec  OK   medium pred: SELECT Cartoon.Production_code, Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date Desc LIMIT 1
           medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1
---
Exec  OK   medium pred: SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'terminal'
           medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
---
Exec  Fail medium pred: SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM Cartoon JOIN TV_Channel WHERE TV_Channel.Hight_definition_TV = 'terminal'
           medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"
---
Exec  Fail medium pred: SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail medium pred: SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail hard pred: SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel EXCEPT SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail hard pred: SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Written_by = 'terminal'
           hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
---
Exec  Fail extra pred: SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = 'terminal'
           extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
---
Exec  Fail extra pred: SELECT TV_Channel.series_name, TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal' AND Cartoon.Directed_by = 'terminal' INTERSECT SELECT TV_Channel.series_name, TV_Channel.Country FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal'
           extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
---
Exec  OK   medium pred: SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != 'terminal'
           medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
---
Exec  OK   medium pred: SELECT TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country FROM TV_Channel WHERE TV_Channel.Language != 'terminal'
           medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
---
Exec  Fail easy pred: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING Count(*) > 'terminal'
           easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
---
Exec  Fail easy pred: SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.id HAVING Count(*) > 'terminal'
           easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
---
Exec  OK   hard pred: SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
---
Exec  OK   hard pred: SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
---
Exec  Fail hard pred: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
---
Exec  Fail hard pred: SELECT TV_Channel.Package_Option FROM TV_Channel EXCEPT SELECT TV_Channel.Package_Option FROM Cartoon JOIN TV_Channel WHERE Cartoon.Directed_by = 'terminal'
           hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
---
Exec  OK   easy pred: SELECT Count(*) FROM poker_player
           easy gold: SELECT count(*) FROM poker_player
---
Exec  OK   easy pred: SELECT Count(*) FROM poker_player
           easy gold: SELECT count(*) FROM poker_player
---
Exec  OK   easy pred: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings Desc
           easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
---
Exec  OK   easy pred: SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings Desc
           easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC
---
Exec  OK   medium pred: SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player
           medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
---
Exec  OK   medium pred: SELECT poker_player.Final_Table_Made, poker_player.Best_Finish FROM poker_player
           medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
---
Exec  OK   easy pred: SELECT Avg(poker_player.Earnings) FROM poker_player
           easy gold: SELECT avg(Earnings) FROM poker_player
---
Exec  OK   easy pred: SELECT Avg(poker_player.Earnings) FROM poker_player
           easy gold: SELECT avg(Earnings) FROM poker_player
---
Exec  OK   medium pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1
           medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
---
Exec  OK   medium pred: SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Earnings Desc LIMIT 1
           medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'
           easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
---
Exec  OK   easy pred: SELECT Max(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < 'terminal'
           easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000
---
Exec  Fail easy pred: SELECT people.Name FROM poker_player JOIN people
           easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
---
Exec  Fail easy pred: SELECT people.Name FROM poker_player JOIN people
           easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made Asc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made Asc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made
---
Exec  Fail hard pred: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings Asc LIMIT 1
           hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
---
Exec  Fail hard pred: SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings Asc LIMIT 1
           hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1
---
Exec  OK   hard pred: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height Desc LIMIT 1
           hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
---
Exec  OK   hard pred: SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height Desc LIMIT 1
           hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Avg(poker_player.Earnings) FROM poker_player JOIN people WHERE people.Height > 'terminal'
           medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
---
Exec  Fail medium pred: SELECT Avg(poker_player.Earnings) FROM poker_player WHERE poker_player.Earnings > 'terminal'
           medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings Desc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
---
Exec  Fail medium pred: SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings Desc
           medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC
---
Exec  OK   medium pred: SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality
           medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
---
Exec  OK   medium pred: SELECT people.Nationality, Count(*) FROM people GROUP BY people.Nationality
           medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality
---
Exec  OK   hard pred: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
           easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
---
Exec  OK   easy pred: SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING Count(*) >= 'terminal'
           easy gold: SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2
---
Exec  OK   medium pred: SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc
           medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
---
Exec  OK   medium pred: SELECT people.Name, people.Birth_Date FROM people ORDER BY people.Name Asc
           medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC
---
Exec  OK   easy pred: SELECT people.Name FROM people WHERE people.Nationality != 'terminal'
           easy gold: SELECT Name FROM people WHERE Nationality != "Russia"
---
Exec  OK   easy pred: SELECT people.Name FROM people WHERE people.Nationality != 'terminal'
           easy gold: SELECT Name FROM people WHERE Nationality != "Russia"
---
Exec  OK   hard pred: SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)
           hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
---
Exec  OK   hard pred: SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT poker_player.People_ID FROM poker_player)
           hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)
---
Exec  OK   easy pred: SELECT Count(DISTINCT people.Nationality) FROM people
           easy gold: SELECT count(DISTINCT Nationality) FROM people
---
Exec  OK   easy pred: SELECT Count(DISTINCT people.Nationality) FROM people
           easy gold: SELECT count(DISTINCT Nationality) FROM people
---
Exec  OK   easy pred: SELECT Count(DISTINCT AREA_CODE_STATE.state) FROM AREA_CODE_STATE
           easy gold: SELECT count(*) FROM area_code_state
---
Exec  OK   medium pred: SELECT CONTESTANTS.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS ORDER BY CONTESTANTS.contestant_name Desc
           medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC
---
Exec  OK   medium pred: SELECT VOTES.vote_id, VOTES.phone_number, VOTES.state FROM VOTES
           medium gold: SELECT vote_id ,  phone_number ,  state FROM votes
---
Exec  OK   medium pred: SELECT Max(AREA_CODE_STATE.area_code), Min(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE
           medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state
---
Exec  OK   easy pred: SELECT VOTES.created FROM VOTES WHERE VOTES.state = 'terminal'
           easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'
---
Exec  OK   easy pred: SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name != 'terminal'
           easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
---
Exec  OK   medium pred: SELECT DISTINCT VOTES.state, VOTES.created FROM VOTES
           medium gold: SELECT DISTINCT state ,  created FROM votes
---
Exec  Fail medium pred: SELECT VOTES.contestant_number, CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES GROUP BY VOTES.contestant_number HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT VOTES.contestant_number, CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS GROUP BY VOTES.contestant_number ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1
---
Exec  Fail medium pred: SELECT Count(*) FROM AREA_CODE_STATE JOIN VOTES WHERE VOTES.state = 'terminal' OR VOTES.state = 'terminal'
           medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'
---
Exec  OK   extra pred: SELECT Count(*) FROM CONTESTANTS WHERE CONTESTANTS.contestant_number NOT IN (SELECT VOTES.contestant_number FROM VOTES)
           extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )
---
Exec  Fail extra pred: SELECT VOTES.state FROM VOTES GROUP BY VOTES.state ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal'
           medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'
---
Exec  Fail extra pred: SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal' INTERSECT SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = 'terminal'
           extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'
---
Exec  OK   medium pred: SELECT DISTINCT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name LIKE 'terminal'
           medium gold: select contestant_name from contestants where contestant_name like "%al%"
---
Exec  OK   easy pred: SELECT country.Name FROM country WHERE country.IndepYear > 'terminal'
           easy gold: SELECT Name FROM country WHERE IndepYear  >  1950
---
Exec  Fail easy pred: SELECT country.Name FROM country WHERE country.Population > 'terminal'
           easy gold: SELECT Name FROM country WHERE IndepYear  >  1950
---
Exec  OK   easy pred: SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
---
Exec  OK   easy pred: SELECT Count(*) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"
---
Exec  OK   easy pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
---
Exec  Fail easy pred: SELECT country.SurfaceArea FROM country WHERE country.Continent = 'terminal'
           easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"
---
Exec  OK   easy pred: SELECT country.Continent FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"
---
Exec  OK   easy pred: SELECT country.Continent FROM country WHERE country.Name = 'terminal'
           easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"
---
Exec  Fail medium pred: SELECT city.District FROM city WHERE city.Name = 'terminal'
           medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
---
Exec  Fail medium pred: SELECT country.Region FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1
---
Exec  OK   medium pred: SELECT country.Population, country.LifeExpectancy FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
---
Exec  OK   medium pred: SELECT country.Population, country.LifeExpectancy FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"
---
Exec  OK   medium pred: SELECT country.Region, country.Population FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
---
Exec  OK   medium pred: SELECT country.Region, country.Population FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"
---
Exec  OK   easy pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
---
Exec  OK   easy pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal'
           hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
---
Exec  OK   hard pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' ORDER BY country.LifeExpectancy Asc LIMIT 1
           hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1
---
Exec  OK   medium pred: SELECT Sum(country.Population), Max(country.GNP) FROM country WHERE country.Continent = 'terminal'
           medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
---
Exec  Fail medium pred: SELECT country.Population, Max(country.GNP) FROM country WHERE country.Continent = 'terminal' ORDER BY country.GNP Desc LIMIT 1
           medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"
---
Exec  OK   medium pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal' OR country.Continent = 'terminal'
           medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
---
Exec  OK   medium pred: SELECT Sum(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal' OR country.Continent = 'terminal'
           medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"
---
Exec  Fail easy pred: SELECT city.Population FROM city WHERE city.District = 'terminal'
           easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
---
Exec  OK   easy pred: SELECT Sum(city.Population) FROM city WHERE city.District = 'terminal'
           easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"
---
Exec  OK   medium pred: SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.GovernmentForm = 'terminal'
           medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
---
Exec  Fail medium pred: SELECT Avg(country.GNP), Sum(country.Population) FROM country WHERE country.Name = 'terminal'
           medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"
---
Exec  OK   easy pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage
           easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
---
Exec  OK   easy pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage
           easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage
---
Exec  Fail easy pred: SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
---
Exec  Fail easy pred: SELECT Count(DISTINCT country.GovernmentForm) FROM country WHERE country.GovernmentForm = 'terminal'
           easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.IsOfficial) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.IsOfficial) FROM countrylanguage JOIN country WHERE country.Name = 'terminal'
           medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country GROUP BY country.Name ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT country.Continent FROM countrylanguage JOIN country GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   extra pred: SELECT country.Continent FROM countrylanguage JOIN country GROUP BY country.Continent ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail easy pred: SELECT Count(*) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
---
Exec  Fail easy pred: SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal'
           easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")
---
Exec  Fail extra pred: SELECT sqlite_sequence.name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT sqlite_sequence.name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
---
Exec  Fail extra pred: SELECT sqlite_sequence.name FROM countrylanguage JOIN sqlite_sequence WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT sqlite_sequence.name FROM countrylanguage JOIN sqlite_sequence WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' INTERSECT SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT country.Continent) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
---
Exec  Fail medium pred: SELECT Count(DISTINCT country.Continent) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"
---
Exec  Fail hard pred: SELECT country.Region FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
---
Exec  Fail hard pred: SELECT country.Region FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"
---
Exec  OK   extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           extra gold: select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"
---
Exec  Fail extra pred: SELECT country.Name FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal' OR countrylanguage.Language = 'terminal'
           extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Continent = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT countrylanguage.Language FROM countrylanguage WHERE countrylanguage.Language = 'terminal' GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
---
Exec  Fail hard pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.LocalName = 'terminal'
           hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
---
Exec  Fail hard pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.LocalName = 'terminal'
           hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY city.Population Desc LIMIT 1
           extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = 'terminal' GROUP BY city.Population ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1
---
Exec  OK   hard pred: SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'terminal' AND country.SurfaceArea = (SELECT Max(country.SurfaceArea) FROM country WHERE country.Continent = 'terminal')
           hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  OK   hard pred: SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'terminal' ORDER BY country.SurfaceArea Desc LIMIT 1
           hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
---
Exec  Fail extra pred: SELECT Avg(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")
---
Exec  OK   extra pred: SELECT Sum(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
---
Exec  Fail extra pred: SELECT country.Population FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")
---
Exec  Fail medium pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.HeadOfState = 'terminal'
           medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.HeadOfState = 'terminal'
           medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.GNPOld < 'terminal'
           medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
---
Exec  Fail medium pred: SELECT Count(DISTINCT countrylanguage.Language) FROM countrylanguage WHERE countrylanguage.IsOfficial < 'terminal'
           medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country)
           hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
---
Exec  Fail hard pred: SELECT country.Name FROM country WHERE country.SurfaceArea > (SELECT Max(country.SurfaceArea) FROM country)
           hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Name = 'terminal')
           extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population < (SELECT Min(country.Population) FROM country WHERE country.Name = 'terminal')
           extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")
---
Exec  OK   extra pred: SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = 'terminal') AND country.Continent = 'terminal'
           extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")
---
Exec  Fail extra pred: SELECT country.Name FROM country WHERE country.Population > (SELECT Max(country.Population) FROM country WHERE country.Continent = 'terminal') AND country.Continent = 'terminal'
           extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  OK   easy pred: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language != 'terminal'
           easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
---
Exec  Fail easy pred: SELECT country.Code FROM country JOIN countrylanguage WHERE countrylanguage.Language != 'terminal'
           easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE country.GovernmentForm = 'terminal')
           hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail hard pred: SELECT country.Code FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"
---
Exec  Fail extra pred: SELECT city.Name FROM city JOIN country WHERE city.ID IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal') AND countrylanguage.Language != 'terminal'
           extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
---
Exec  Fail extra pred: SELECT city.Name FROM city WHERE city.ID NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal')
           extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
---
Exec  OK   hard pred: SELECT DISTINCT city.Name FROM country JOIN countrylanguage JOIN city WHERE country.Continent = 'terminal' AND countrylanguage.Language = 'terminal'
           hard gold: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"
---
Exec  Fail hard pred: SELECT DISTINCT city.Name FROM city JOIN country JOIN countrylanguage WHERE country.Continent = 'terminal' AND countrylanguage.Language = 'terminal'
           hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"
---
Exec  Fail medium pred: SELECT country.Name, country.IndepYear, country.Population FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
---
Exec  OK   medium pred: SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1
---
Exec  Fail medium pred: SELECT country.Population, country.LocalName, country.HeadOfState FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  OK   medium pred: SELECT country.Name, country.Population, country.HeadOfState FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
---
Exec  Fail medium pred: SELECT country.Name, Count(*) FROM country JOIN countrylanguage GROUP BY country.Name HAVING Count(*) >= 'terminal'
           medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
---
Exec  Fail medium pred: SELECT country.Name, Count(*) FROM countrylanguage JOIN country GROUP BY country.Name HAVING Count(*) > 'terminal'
           medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2
---
Exec  OK   extra pred: SELECT Count(*), city.District FROM city WHERE city.Population > (SELECT Avg(city.Population) FROM city) GROUP BY city.District
           extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
---
Exec  OK   extra pred: SELECT Count(*), city.District FROM city WHERE city.Population > (SELECT Avg(city.Population) FROM city) GROUP BY city.District
           extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District
---
Exec  OK   medium pred: SELECT country.GovernmentForm, Sum(country.Population) FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) > 'terminal'
           medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
---
Exec  OK   medium pred: SELECT country.GovernmentForm, Sum(country.Population) FROM country GROUP BY country.GovernmentForm HAVING Avg(country.LifeExpectancy) > 'terminal'
           medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
---
Exec  Fail medium pred: SELECT Avg(country.LifeExpectancy), Sum(country.Population) FROM country WHERE country.LifeExpectancy < 'terminal' GROUP BY country.Continent
           medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
---
Exec  Fail medium pred: SELECT country.Continent, Sum(country.Population), Avg(country.LifeExpectancy) FROM country WHERE country.LifeExpectancy < 'terminal' GROUP BY country.Continent
           medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
---
Exec  Fail medium pred: SELECT country.Name, country.Region FROM country ORDER BY country.SurfaceArea Desc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
---
Exec  Fail medium pred: SELECT country.Name, country.SurfaceArea FROM country ORDER BY country.Continent Desc LIMIT 1
           medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Desc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
---
Exec  OK   medium pred: SELECT country.Name FROM country ORDER BY country.Population Asc LIMIT 1
           medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
---
Exec  Fail easy pred: SELECT Count(*) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"
---
Exec  Fail easy pred: SELECT Count(*) FROM country WHERE country.Region = 'terminal'
           easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"
---
Exec  OK   medium pred: SELECT country.Name FROM country WHERE country.Continent = 'terminal' AND country.Population = 'terminal'
           medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
---
Exec  OK   medium pred: SELECT country.Name FROM country WHERE country.Population > 'terminal'
           medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"
---
Exec  OK   hard pred: SELECT Sum(country.Population), Avg(country.Region) FROM country WHERE country.SurfaceArea > 'terminal' AND country.Continent = 'terminal'
           hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
---
Exec  OK   hard pred: SELECT Sum(country.Population), Avg(country.SurfaceArea) FROM country WHERE country.SurfaceArea > 'terminal' AND country.Region = 'terminal'
           hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000
---
Exec  OK   easy pred: SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'
           easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000
---
Exec  OK   easy pred: SELECT city.Name FROM city WHERE city.Population BETWEEN 'terminal' AND 'terminal'
           easy gold: select name from city where population between 160000 and 900000
---
Exec  OK   hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT countrylanguage.Language, Max(countrylanguage.Percentage) FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY Max(countrylanguage.Percentage) Desc LIMIT 1
           medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode, Max(countrylanguage.Percentage) FROM countrylanguage GROUP BY countrylanguage.Language
           medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
---
Exec  Fail extra pred: SELECT Count(*) FROM countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY countrylanguage.Percentage Desc LIMIT 1
           extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail extra pred: SELECT Count(*) FROM countrylanguage JOIN country WHERE countrylanguage.Language = 'terminal'
           extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal' ORDER BY countrylanguage.Percentage Desc LIMIT 1
           medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  Fail medium pred: SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'terminal' GROUP BY countrylanguage.CountryCode ORDER BY Count(*) Desc LIMIT 1
           medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode
---
Exec  OK   easy pred: SELECT Count(*) FROM conductor
           easy gold: SELECT count(*) FROM conductor
---
Exec  OK   easy pred: SELECT Count(*) FROM conductor
           easy gold: SELECT count(*) FROM conductor
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc
           easy gold: SELECT Name FROM conductor ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Age Asc
           easy gold: SELECT Name FROM conductor ORDER BY Age ASC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'
           easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor WHERE conductor.Nationality != 'terminal'
           easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'
---
Exec  OK   easy pred: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Desc
           easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
---
Exec  OK   easy pred: SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded Desc
           easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC
---
Exec  OK   easy pred: SELECT Avg(show.Attendance) FROM show
           easy gold: SELECT avg(Attendance) FROM SHOW
---
Exec  OK   easy pred: SELECT Avg(show.Attendance) FROM show
           easy gold: SELECT avg(Attendance) FROM SHOW
---
Exec  OK   medium pred: SELECT Max(performance.Share), Min(performance.Share) FROM performance WHERE performance.Type != 'terminal'
           medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
---
Exec  Fail medium pred: SELECT Max(performance.Share), Min(show.Attendance) FROM performance JOIN show WHERE performance.Type != 'terminal'
           medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"
---
Exec  OK   easy pred: SELECT Count(DISTINCT conductor.Nationality) FROM conductor
           easy gold: SELECT count(DISTINCT Nationality) FROM conductor
---
Exec  OK   easy pred: SELECT Count(DISTINCT conductor.Nationality) FROM conductor
           easy gold: SELECT count(DISTINCT Nationality) FROM conductor
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc
           easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
---
Exec  OK   easy pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc
           easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1
           medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work Desc LIMIT 1
           medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
---
Exec  Fail medium pred: SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra
           medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
---
Exec  Fail medium pred: SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra
           medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
---
Exec  OK   medium pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
---
Exec  Fail extra pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT conductor.Name FROM conductor JOIN orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
---
Exec  Fail medium pred: SELECT conductor.Name FROM conductor JOIN orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
---
Exec  OK   medium pred: SELECT orchestra.Record_Company, Count(*) FROM orchestra GROUP BY orchestra.Record_Company
           medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
---
Exec  OK   medium pred: SELECT orchestra.Record_Company, Count(*) FROM orchestra GROUP BY orchestra.Record_Company
           medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
---
Exec  Fail medium pred: SELECT orchestra.Major_Record_Format FROM orchestra ORDER BY orchestra.Major_Record_Format Asc
           medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
---
Exec  OK   medium pred: SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY Count(*) Asc
           medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)
           hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
---
Exec  OK   hard pred: SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN (SELECT performance.Orchestra_ID FROM performance)
           hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
---
Exec  OK   hard pred: SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < 'terminal' INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > 'terminal'
           hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
---
Exec  OK   medium pred: SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'
           medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
---
Exec  OK   medium pred: SELECT Count(*) FROM orchestra WHERE orchestra.Major_Record_Format = 'terminal' OR orchestra.Major_Record_Format = 'terminal'
           medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"
---
Exec  OK   medium pred: SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance GROUP BY orchestra.Year_of_Founded HAVING Count(*) > 'terminal'
           medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
---
Exec  OK   medium pred: SELECT orchestra.Year_of_Founded FROM orchestra JOIN performance GROUP BY performance.Orchestra_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
---
Exec  OK   easy pred: SELECT Count(*) FROM Highschooler
           easy gold: SELECT count(*) FROM Highschooler
---
Exec  OK   easy pred: SELECT Count(*) FROM Highschooler
           easy gold: SELECT count(*) FROM Highschooler
---
Exec  OK   medium pred: SELECT Highschooler.name, Highschooler.grade FROM Highschooler
           medium gold: SELECT name ,  grade FROM Highschooler
---
Exec  OK   medium pred: SELECT Highschooler.name, Highschooler.grade FROM Highschooler
           medium gold: SELECT name ,  grade FROM Highschooler
---
Exec  OK   easy pred: SELECT DISTINCT Highschooler.grade FROM Highschooler
           easy gold: SELECT grade FROM Highschooler
---
Exec  Fail easy pred: SELECT Highschooler.grade, Highschooler.grade FROM Highschooler GROUP BY Highschooler.name
           easy gold: SELECT grade FROM Highschooler
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT DISTINCT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'
           easy gold: SELECT name FROM Highschooler WHERE grade  =  10
---
Exec  OK   easy pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.grade = 'terminal'
           easy gold: SELECT name FROM Highschooler WHERE grade  =  10
---
Exec  OK   easy pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   easy pred: SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'terminal'
           easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"
---
Exec  OK   medium pred: SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'
           medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
---
Exec  OK   medium pred: SELECT Count(*) FROM Highschooler WHERE Highschooler.grade = 'terminal' OR Highschooler.grade = 'terminal'
           medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10
---
Exec  OK   medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade
           medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
---
Exec  OK   medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade
           medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade
---
Exec  OK   hard pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
           easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
---
Exec  OK   easy pred: SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING Count(*) >= 'terminal'
           easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
---
Exec  OK   medium pred: SELECT Count(*), Friend.student_id FROM Friend GROUP BY Friend.student_id
           medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
---
Exec  Fail medium pred: SELECT Count(*), Highschooler.name FROM Highschooler JOIN Friend GROUP BY Highschooler.name
           medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
---
Exec  Fail medium pred: SELECT Count(*), Highschooler.name FROM Highschooler JOIN Friend GROUP BY Highschooler.name
           medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail medium pred: SELECT Count(*), Highschooler.name FROM Highschooler JOIN Friend GROUP BY Highschooler.name
           medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
---
Exec  Fail medium pred: SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
---
Exec  Fail hard pred: SELECT * FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal'
           hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
---
Exec  Fail hard pred: SELECT Friend.friend_id FROM Friend JOIN Highschooler WHERE Highschooler.name = 'terminal'
           hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(*) FROM Friend JOIN Highschooler WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(*) FROM Highschooler JOIN Friend WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  OK   hard pred: SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend
           hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
---
Exec  OK   hard pred: SELECT Highschooler.ID FROM Highschooler EXCEPT SELECT Friend.student_id FROM Friend
           hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
---
Exec  OK   hard pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
---
Exec  OK   hard pred: SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
---
Exec  Fail hard pred: SELECT Friend.student_id FROM Friend INTERSECT SELECT Friend.student_id FROM Friend
           hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
---
Exec  OK   hard pred: SELECT Friend.student_id FROM Friend INTERSECT SELECT Likes.liked_id FROM Likes
           hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Likes INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Likes INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Likes
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
---
Exec  Fail medium pred: SELECT Count(*), Likes.liked_id FROM Likes GROUP BY Likes.liked_id
           medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
---
Exec  Fail medium pred: SELECT Count(*), Likes.liked_id FROM Likes GROUP BY Likes.liked_id
           medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
---
Exec  Fail medium pred: SELECT Highschooler.name, Count(*) FROM Highschooler JOIN Likes GROUP BY Likes.liked_id
           medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail medium pred: SELECT Count(*), Highschooler.grade FROM Highschooler JOIN Likes WHERE Highschooler.grade = 'terminal' GROUP BY Highschooler.name
           medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
---
Exec  OK   medium pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  OK   medium pred: SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING Count(DISTINCT Likes.liked_id) >= 'terminal'
           medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING Count(*) >= 'terminal'
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail hard pred: SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > 'terminal' INTERSECT SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade >= 'terminal'
           hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  Fail medium pred: SELECT Count(*) FROM Highschooler JOIN Likes WHERE Highschooler.name = 'terminal'
           medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"
---
Exec  OK   hard pred: SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   hard pred: SELECT Avg(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend)
           hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   extra pred: SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  OK   extra pred: SELECT Min(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)
           extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
---
Exec  Fail hard pred: SELECT Owners.state, Professionals.last_name FROM Owners JOIN Professionals
           hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
---
Exec  OK   hard pred: SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals
           hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
---
Exec  Fail hard pred: SELECT Avg(Dogs.age) FROM Dogs JOIN Treatments
           hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
---
Exec  OK   hard pred: SELECT Avg(Dogs.age) FROM Dogs WHERE Dogs.dog_id IN (SELECT Treatments.dog_id FROM Treatments)
           hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.first_name, Professionals.home_phone FROM Treatments JOIN Professionals WHERE Professionals.state = 'terminal' UNION SELECT Professionals.professional_id, Professionals.first_name, Professionals.home_phone FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) > 'terminal'
           extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.last_name, Owners.home_phone FROM Treatments JOIN Professionals WHERE Professionals.state = 'terminal' UNION SELECT Professionals.professional_id, Professionals.last_name, Owners.home_phone FROM Treatments JOIN Professionals WHERE * > 'terminal'
           extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
---
Exec  Fail hard pred: SELECT Dogs.name FROM Dogs EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments JOIN Charges WHERE Charges.charge_amount > 'terminal'
           hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
---
Exec  Fail hard pred: SELECT Dogs.name FROM Dogs EXCEPT SELECT Dogs.name FROM Dogs JOIN Treatments JOIN Charges WHERE Charges.charge_amount > 'terminal'
           hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )
---
Exec  Fail hard pred: SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Professionals.first_name FROM Owners JOIN Dogs
           hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
---
Exec  Fail hard pred: SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Professionals.first_name FROM Owners JOIN Dogs
           hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Treatments JOIN Professionals
           extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail extra pred: SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id, Professionals.role_code, Professionals.email_address FROM Professionals JOIN Treatments
           extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.first_name, Owners.last_name FROM Dogs JOIN Owners GROUP BY Dogs.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs GROUP BY Dogs.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.role_code, Professionals.first_name FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.role_code, Professionals.last_name FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail extra pred: SELECT Breeds.breed_name FROM Dogs JOIN Breeds GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Breeds.breed_name FROM Dogs JOIN Breeds GROUP BY Dogs.breed_code ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs GROUP BY Owners.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.last_name FROM Owners JOIN Dogs GROUP BY Dogs.owner_id ORDER BY Count(*) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments JOIN Charges GROUP BY Treatments.treatment_type_code ORDER BY Sum(Charges.charge_amount) Asc LIMIT 1
           extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments GROUP BY Treatments.treatment_type_code ORDER BY Sum(Treatments.cost_of_treatment) Asc LIMIT 1
           extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
---
Exec  Fail extra pred: SELECT Owners.owner_id, Owners.zip_code FROM Dogs JOIN Owners JOIN Charges GROUP BY Dogs.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
---
Exec  Fail extra pred: SELECT Dogs.owner_id, Owners.zip_code FROM Owners JOIN Dogs JOIN Charges GROUP BY Dogs.owner_id ORDER BY Sum(Charges.charge_amount) Desc LIMIT 1
           extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.home_phone FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  Fail medium pred: SELECT Treatments.professional_id, Professionals.home_phone FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING Count(*) >= 'terminal'
           medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
---
Exec  OK   extra pred: SELECT Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals WHERE Treatments.cost_of_treatment < (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments)
           extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
---
Exec  OK   extra pred: SELECT Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals WHERE Treatments.cost_of_treatment < (SELECT Avg(Treatments.cost_of_treatment) FROM Treatments)
           extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
---
Exec  Fail medium pred: SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals
           medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail medium pred: SELECT Treatments.date_of_treatment, Professionals.first_name FROM Treatments JOIN Professionals
           medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
---
Exec  Fail medium pred: SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types
           medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
---
Exec  Fail medium pred: SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types
           medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name, Dogs.size_code FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name FROM Dogs JOIN Owners
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
---
Exec  Fail extra pred: SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments GROUP BY Treatments.dog_id ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
---
Exec  Fail extra pred: SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments GROUP BY Dogs.breed_code ORDER BY Count(*) Asc LIMIT 1
           extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name FROM Dogs JOIN Owners WHERE Owners.state = 'terminal'
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
---
Exec  Fail medium pred: SELECT Owners.first_name, Owners.last_name FROM Dogs JOIN Owners WHERE Owners.state = 'terminal'
           medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
---
Exec  Fail medium pred: SELECT DISTINCT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments
           medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
---
Exec  Fail medium pred: SELECT DISTINCT Dogs.date_arrived, Dogs.date_departed FROM Dogs JOIN Treatments
           medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
---
Exec  Fail extra pred: SELECT Owners.last_name FROM Owners JOIN Dogs ORDER BY Dogs.age Asc LIMIT 1
           extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
---
Exec  Fail extra pred: SELECT Owners.last_name FROM Dogs JOIN Owners ORDER BY Dogs.age Asc LIMIT 1
           extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )
---
Exec  OK   medium pred: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'
           medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
---
Exec  OK   medium pred: SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = 'terminal' OR Professionals.state = 'terminal'
           medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'
---
Exec  OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs
           medium gold: SELECT date_arrived ,  date_departed FROM Dogs
---
Exec  OK   medium pred: SELECT Dogs.date_arrived, Dogs.date_departed FROM Dogs
           medium gold: SELECT date_arrived ,  date_departed FROM Dogs
---
Exec  OK   easy pred: SELECT Count(*) FROM Treatments
           easy gold: SELECT count(DISTINCT dog_id) FROM Treatments
---
Exec  OK   easy pred: SELECT Count(DISTINCT Treatments.dog_id) FROM Treatments
           easy gold: SELECT count(DISTINCT dog_id) FROM Treatments
---
Exec  OK   easy pred: SELECT Count(*) FROM Treatments
           easy gold: SELECT count(DISTINCT professional_id) FROM Treatments
---
Exec  OK   easy pred: SELECT Count(*) FROM Treatments
           easy gold: SELECT count(DISTINCT professional_id) FROM Treatments
---
Exec  Fail medium pred: SELECT Professionals.role_code, Professionals.city, Professionals.city, Professionals.state FROM Professionals WHERE Professionals.city LIKE 'terminal'
           medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
---
Exec  OK   medium pred: SELECT Professionals.role_code, Professionals.street, Professionals.city, Professionals.state FROM Professionals WHERE Professionals.city LIKE 'terminal'
           medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
---
Exec  OK   medium pred: SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'
           medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
---
Exec  OK   medium pred: SELECT Owners.first_name, Owners.last_name, Owners.email_address FROM Owners WHERE Owners.state LIKE 'terminal'
           medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
---
Exec  OK   hard pred: SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)
           hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
---
Exec  OK   hard pred: SELECT Count(*) FROM Dogs WHERE Dogs.age < (SELECT Avg(Dogs.age) FROM Dogs)
           hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )
---
Exec  OK   medium pred: SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.date_of_treatment Desc LIMIT 1
           medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
---
Exec  Fail medium pred: SELECT Treatments.cost_of_treatment FROM Treatments ORDER BY Treatments.cost_of_treatment Desc LIMIT 1
           medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
---
Exec  OK   extra pred: SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)
           extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Dogs WHERE Dogs.dog_id NOT IN (SELECT Treatments.dog_id FROM Treatments)
           extra gold: select count(*) from dogs where dog_id not in ( select dog_id from treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)
           extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
---
Exec  OK   extra pred: SELECT Count(*) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)
           extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )
---
Exec  OK   extra pred: SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)
           extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
---
Exec  OK   extra pred: SELECT Count(*) FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)
           extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )
---
Exec  OK   medium pred: SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'terminal'
           medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
---
Exec  Fail medium pred: SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'terminal' EXCEPT SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'terminal'
           medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
---
Exec  OK   easy pred: SELECT Avg(Dogs.age) FROM Dogs
           easy gold: SELECT avg(age) FROM Dogs
---
Exec  OK   easy pred: SELECT Avg(Dogs.age) FROM Dogs
           easy gold: SELECT avg(age) FROM Dogs
---
Exec  OK   easy pred: SELECT Max(Dogs.age) FROM Dogs
           easy gold: SELECT max(age) FROM Dogs
---
Exec  OK   easy pred: SELECT Max(Dogs.age) FROM Dogs
           easy gold: SELECT max(age) FROM Dogs
---
Exec  OK   medium pred: SELECT Charges.charge_type, Charges.charge_amount FROM Charges
           medium gold: SELECT charge_type ,  charge_amount FROM Charges
---
Exec  OK   medium pred: SELECT Charges.charge_type, Sum(Charges.charge_amount) FROM Charges GROUP BY Charges.charge_type
           medium gold: SELECT charge_type ,  charge_amount FROM Charges
---
Exec  OK   easy pred: SELECT Charges.charge_amount FROM Charges GROUP BY Charges.charge_type ORDER BY Charges.charge_amount Desc LIMIT 1
           easy gold: SELECT max(charge_amount) FROM Charges
---
Exec  OK   easy pred: SELECT Charges.charge_amount FROM Charges ORDER BY Charges.charge_amount Desc LIMIT 1
           easy gold: SELECT max(charge_amount) FROM Charges
---
Exec  Fail medium pred: SELECT Professionals.email_address, Professionals.home_phone, Professionals.home_phone FROM Professionals
           medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals
---
Exec  Fail medium pred: SELECT Professionals.email_address, Professionals.home_phone, Professionals.home_phone FROM Professionals
           medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals
---
Exec  Fail medium pred: SELECT Dogs.breed_code FROM Dogs
           medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs
---
Exec  Fail medium pred: SELECT Count(DISTINCT Dogs.breed_code) FROM Dogs
           medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs
---
Exec  Fail medium pred: SELECT Professionals.first_name FROM Treatments JOIN Professionals JOIN Treatment_Types
           medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
---
Exec  Fail medium pred: SELECT Professionals.first_name, Treatment_Types.treatment_type_description FROM Treatments JOIN Professionals JOIN Treatment_Types
           medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  OK   easy pred: SELECT Count(*) FROM singer
           easy gold: SELECT count(*) FROM singer
---
Exec  OK   easy pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Asc
           easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
---
Exec  OK   easy pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Asc
           easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC
---
Exec  OK   medium pred: SELECT singer.Birth_Year, singer.Citizenship FROM singer
           medium gold: SELECT Birth_Year ,  Citizenship FROM singer
---
Exec  OK   medium pred: SELECT singer.Birth_Year, singer.Citizenship FROM singer
           medium gold: SELECT Birth_Year ,  Citizenship FROM singer
---
Exec  OK   easy pred: SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
           easy gold: SELECT Name FROM singer WHERE Citizenship != "France"
---
Exec  OK   easy pred: SELECT singer.Name FROM singer WHERE singer.Citizenship != 'terminal'
           easy gold: SELECT Name FROM singer WHERE Citizenship != "France"
---
Exec  OK   medium pred: SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'
           medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
---
Exec  OK   medium pred: SELECT singer.Name FROM singer WHERE singer.Birth_Year = 'terminal' OR singer.Birth_Year = 'terminal'
           medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
---
Exec  OK   medium pred: SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions Desc LIMIT 1
           medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
---
Exec  OK   medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY song.Singer_ID ORDER BY Count(*) Desc LIMIT 1
           medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1
---
Exec  OK   medium pred: SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
---
Exec  OK   medium pred: SELECT singer.Citizenship, Count(*) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1
           hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship ORDER BY Count(*) Desc LIMIT 1
           hard gold: select citizenship from singer group by citizenship order by count(*) desc limit 1
---
Exec  OK   medium pred: SELECT singer.Citizenship, Max(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
---
Exec  OK   medium pred: SELECT singer.Citizenship, Max(singer.Net_Worth_Millions) FROM singer GROUP BY singer.Citizenship
           medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship
---
Exec  Fail medium pred: SELECT song.Title, singer.Name FROM song JOIN singer
           medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
---
Exec  Fail medium pred: SELECT song.Title, singer.Name FROM song JOIN singer
           medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID
---
Exec  Fail medium pred: SELECT DISTINCT singer.Name FROM song JOIN singer WHERE song.Sales > 'terminal'
           medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
---
Exec  Fail medium pred: SELECT DISTINCT singer.Name FROM song JOIN singer WHERE song.Sales > 'terminal'
           medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000
---
Exec  Fail medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY song.Singer_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
---
Exec  Fail medium pred: SELECT singer.Name FROM song JOIN singer GROUP BY song.Singer_ID HAVING Count(*) > 'terminal'
           medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
---
Exec  Fail medium pred: SELECT singer.Name, Sum(song.Sales) FROM song JOIN singer GROUP BY song.Singer_ID
           medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
---
Exec  Fail medium pred: SELECT singer.Name, Sum(song.Sales) FROM song JOIN singer GROUP BY singer.Name
           medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
---
Exec  OK   hard pred: SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN (SELECT song.Singer_ID FROM song)
           hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
---
Exec  Fail hard pred: SELECT song.Song_ID FROM song WHERE song.Song_ID NOT IN (SELECT song.Singer_ID FROM song)
           hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 'terminal'
           hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
---
Exec  OK   hard pred: SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year < 'terminal' INTERSECT SELECT singer.Citizenship FROM singer WHERE singer.Birth_Year > 'terminal'
           hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
---
Exec  OK   easy pred: SELECT Count(*) FROM Other_Available_Features
           easy gold: SELECT count(*) FROM Other_Available_Features
---
Exec  Fail medium pred: SELECT Ref_Feature_Types.feature_type_name FROM Ref_Feature_Types JOIN Other_Available_Features WHERE Other_Available_Features.feature_name = 'terminal'
           medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"
---
Exec  OK   medium pred: SELECT Ref_Property_Types.property_type_description FROM Ref_Property_Types
           medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
---
Exec  Fail hard pred: SELECT Properties.property_name FROM Properties WHERE Properties.room_count > 'terminal' OR Properties.room_count > 'terminal'
           hard gold: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1
---
                     easy                 medium               hard                 extra                all                 
count                992                  1784                 696                  664                  4136                
=====================   EXECUTION ACCURACY     =====================
execution            0.840                0.503                0.520                0.188                0.536               
