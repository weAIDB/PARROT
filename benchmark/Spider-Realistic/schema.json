[
    {
        "db_id": "perpetrator",
        "schema": "CREATE TABLE perpetrator (perpetrator id INT, people id INT, date VARCHAR, year INT, location VARCHAR, country VARCHAR, killed INT, injured INT, PRIMARY KEY (perpetrator id), FOREIGN KEY (people id) REFERENCES people (people id)); CREATE TABLE people (people id INT, name VARCHAR, height INT, weight INT, home town VARCHAR, PRIMARY KEY (people id));"
    },
    {
        "db_id": "college_2",
        "schema": "CREATE TABLE classroom (building VARCHAR, room number VARCHAR, capacity INT, department name VARCHAR, FOREIGN KEY (department name) REFERENCES department (dept_name)); CREATE TABLE department (dept_name VARCHAR, building VARCHAR, budget INT, PRIMARY KEY (dept_name)); CREATE TABLE course (course id INT, title VARCHAR, dept_name VARCHAR, credits INT, PRIMARY KEY (course id), FOREIGN KEY (dept_name) REFERENCES department (dept_name)); CREATE TABLE instructor (ID INT, name VARCHAR, dept_name VARCHAR, salary INT, PRIMARY KEY (ID), FOREIGN KEY (dept_name) REFERENCES department (dept_name)); CREATE TABLE section (course_id INT, sec_id INT, semester INT, year INT, building VARCHAR, room_number INT, time_slot_id INT, PRIMARY KEY (course_id, sec_id, semester, year), FOREIGN KEY (course_id) REFERENCES course (course id), FOREIGN KEY (time_slot_id) REFERENCES time_slot (time slot id)); CREATE TABLE teaches (ID INT, course_id INT, sec_id INT, semester INT, year INT, PRIMARY KEY (ID, course_id, sec_id, semester, year), FOREIGN KEY (ID) REFERENCES instructor (ID), FOREIGN KEY (course_id, sec_id, semester, year) REFERENCES section (course_id, sec_id, semester, year)); CREATE TABLE student (ID INT, name VARCHAR, dept_name VARCHAR, tot_cred INT, PRIMARY KEY (ID), FOREIGN KEY (dept_name) REFERENCES department (dept_name)); CREATE TABLE takes (course_id INT, sec_id INT, semester INT, year INT, grade INT, PRIMARY KEY (course_id, sec_id, semester, year), FOREIGN KEY (course_id, sec_id, semester, year) REFERENCES section (course_id, sec_id, semester, year)); CREATE TABLE advisor (s_ID INT, i_ID INT, PRIMARY KEY (s_ID, i_ID), FOREIGN KEY (s_ID) REFERENCES student (ID), FOREIGN KEY (i_ID) REFERENCES instructor (ID)); CREATE TABLE time_slot (time slot id INT, day VARCHAR, start_hr INT, start_min INT, end_hr INT, end_min INT, PRIMARY KEY (time slot id)); CREATE TABLE prerequisite (course_id INT, prereq_id INT, PRIMARY KEY (course_id, prereq_id), FOREIGN KEY (course_id) REFERENCES course (course id));"
    },
    {
        "db_id": "flight_company",
        "schema": "CREATE TABLE airport (id INT, City VARCHAR, Country VARCHAR, IATA VARCHAR, ICAO VARCHAR, name VARCHAR, PRIMARY KEY (id)); CREATE TABLE operate_company (id INT, name VARCHAR, Type VARCHAR, Principal_activities VARCHAR, Incorporated_in VARCHAR, Group_Equity_Shareholding VARCHAR, PRIMARY KEY (id)); CREATE TABLE flight (id INT, vehicle_flight_number VARCHAR, date DATE, pilot INT, velocity INT, altitude INT, airport_id INT, company_id INT, PRIMARY KEY (id), FOREIGN KEY (airport_id) REFERENCES airport (id), FOREIGN KEY (company_id) REFERENCES operate_company (id));"
    },
    {
        "db_id": "icfp_1",
        "schema": "CREATE TABLE institution (instID INT, name VARCHAR, country VARCHAR, PRIMARY KEY (instID)); CREATE TABLE authors (authID INT, lname VARCHAR, fname VARCHAR, PRIMARY KEY (authID)); CREATE TABLE papers (paperID INT, title VARCHAR, PRIMARY KEY (paperID)); CREATE TABLE authorship (authID INT, instID INT, paperID INT, authOrder INT, PRIMARY KEY (authID, instID, paperID), FOREIGN KEY (authID) REFERENCES authors (authID), FOREIGN KEY (instID) REFERENCES institution (instID), FOREIGN KEY (paperID) REFERENCES papers (paperID));"
    },
    {
        "db_id": "body_builder",
        "schema": "CREATE TABLE body builder (Body_Builder_ID INT, People_ID INT, Snatch INT, Clean_Jerk INT, Total INT, PRIMARY KEY (Body_Builder_ID), FOREIGN KEY (People_ID) REFERENCES people (People_ID)); CREATE TABLE people (People_ID INT, Name VARCHAR, Height INT, Weight INT, Birth_Date DATE, Birth_Place VARCHAR, PRIMARY KEY (People_ID));"
    },
    {
        "db_id": "storm_record",
        "schema": "CREATE TABLE storm (Storm_ID INT, Name VARCHAR, Dates_active DATE, Max_speed INT, Damage_millions_USD INT, Number_Deaths INT, PRIMARY KEY (Storm_ID)); CREATE TABLE region (Region_id INT, Region_code VARCHAR, Region_name VARCHAR, PRIMARY KEY (Region_id)); CREATE TABLE affected region (Region_id INT, Storm_ID INT, Number_city_affected INT, PRIMARY KEY (Region_id, Storm_ID), FOREIGN KEY (Region_id) REFERENCES region (Region_id), FOREIGN KEY (Storm_ID) REFERENCES storm (Storm_ID));"
    },
    {
        "db_id": "pilot_record",
        "schema": "CREATE TABLE aircraft (Aircraft_ID INT, Order_Year INT, Manufacturer VARCHAR, Model VARCHAR, Fleet_Series VARCHAR, Powertrain VARCHAR, Fuel_Propulsion VARCHAR, PRIMARY KEY (Aircraft_ID)); CREATE TABLE pilot (Pilot_ID INT, Pilot_name VARCHAR, Rank VARCHAR, Age INT, Nationality VARCHAR, Position VARCHAR, Join_Year INT, Team VARCHAR, PRIMARY KEY (Pilot_ID)); CREATE TABLE pilot record (Record_ID INT, Pilot_ID INT, Aircraft_ID INT, Date DATE, PRIMARY KEY (Record_ID), FOREIGN KEY (Pilot_ID) REFERENCES pilot (Pilot_ID), FOREIGN KEY (Aircraft_ID) REFERENCES aircraft (Aircraft_ID));"
    },
    {
        "db_id": "race_track",
        "schema": "CREATE TABLE race (Race_ID INT, Name VARCHAR, Class VARCHAR, Date DATE, Track_ID INT, PRIMARY KEY (Race_ID), FOREIGN KEY (Track_ID) REFERENCES track (Track_ID)); CREATE TABLE track (Track_ID INT, Name VARCHAR, Location VARCHAR, Seating INT, Year_Opened INT, PRIMARY KEY (Track_ID));"
    },
    {
        "db_id": "academic",
        "schema": "CREATE TABLE author (aid INT, homepage VARCHAR, name VARCHAR, oid INT, PRIMARY KEY (aid)); CREATE TABLE conference (cid INT, homepage VARCHAR, name VARCHAR, PRIMARY KEY (cid)); CREATE TABLE domain (did INT, name VARCHAR, PRIMARY KEY (did)); CREATE TABLE domain_author (aid INT, did INT, PRIMARY KEY (aid, did), FOREIGN KEY (aid) REFERENCES author (aid), FOREIGN KEY (did) REFERENCES domain (did)); CREATE TABLE domain_conference (cid INT, did INT, PRIMARY KEY (cid, did), FOREIGN KEY (cid) REFERENCES conference (cid), FOREIGN KEY (did) REFERENCES domain (did)); CREATE TABLE journal (jid INT, homepage VARCHAR, name VARCHAR, PRIMARY KEY (jid)); CREATE TABLE domain_journal (jid INT, did INT, PRIMARY KEY (jid, did), FOREIGN KEY (jid) REFERENCES journal (jid), FOREIGN KEY (did) REFERENCES domain (did)); CREATE TABLE keyword (kid INT, keyword VARCHAR, PRIMARY KEY (kid)); CREATE TABLE domain_keyword (kid INT, did INT, PRIMARY KEY (kid, did), FOREIGN KEY (kid) REFERENCES keyword (kid), FOREIGN KEY (did) REFERENCES domain (did)); CREATE TABLE publication (pid INT, abstract TEXT, cid INT, citation_num INT, jid INT, pid INT, reference_num INT, title VARCHAR, year INT, PRIMARY KEY (pid), FOREIGN KEY (cid) REFERENCES domain (did), FOREIGN KEY (jid) REFERENCES journal (jid), FOREIGN KEY (pid) REFERENCES publication (pid)); CREATE TABLE domain_publication (pid INT, did INT, PRIMARY KEY (pid, did), FOREIGN KEY (pid) REFERENCES publication (pid), FOREIGN KEY (did) REFERENCES domain (did)); CREATE TABLE organization (oid INT, name VARCHAR, PRIMARY KEY (oid)); CREATE TABLE publication_keyword (pid INT, kid INT, PRIMARY KEY (pid, kid), FOREIGN KEY (pid) REFERENCES publication (pid), FOREIGN KEY (kid) REFERENCES keyword (kid)); CREATE TABLE writes (aid INT, pid INT, PRIMARY KEY (aid, pid), FOREIGN KEY (aid) REFERENCES author (aid), FOREIGN KEY (pid) REFERENCES publication (pid)); CREATE TABLE cite (cited INT, citing INT, PRIMARY KEY (cited, citing), FOREIGN KEY (cited) REFERENCES publication (pid), FOREIGN KEY (citing) REFERENCES publication (pid));"
    },
    {
        "db_id": "department_store",
        "schema": "CREATE TABLE addresses (address_id TEXT, address_details TEXT, PRIMARY KEY (address_id)); CREATE TABLE staff (staff_id TEXT, staff_gender TEXT, staff_name TEXT, PRIMARY KEY (staff_id)); CREATE TABLE suppliers (supplier_id TEXT, supplier_name TEXT, supplier_phone TEXT, PRIMARY KEY (supplier_id)); CREATE TABLE department_store_chain (department_store_chain_id TEXT, department_store_chain_name TEXT, PRIMARY KEY (department_store_chain_id)); CREATE TABLE customers (customer_id TEXT, payment_method_code TEXT, customer_code TEXT, customer_name TEXT, customer_address TEXT, customer_phone TEXT, customer_email TEXT, PRIMARY KEY (customer_id)); CREATE TABLE products (product_id TEXT, product_type_code TEXT, product_name TEXT, product_price TEXT, PRIMARY KEY (product_id)); CREATE TABLE supplier_addresses (supplier_id TEXT, address_id TEXT, date_from TEXT, date_to TEXT, PRIMARY KEY (supplier_id, address_id)); CREATE TABLE customer_addresses (customer_id TEXT, address_id TEXT, date_from TEXT, date_to TEXT, PRIMARY KEY (customer_id, address_id)); CREATE TABLE customer_orders (order_id TEXT, customer_id TEXT, order_status_code TEXT, order_date TEXT, PRIMARY KEY (order_id)); CREATE TABLE department_stores (department_store_id TEXT, department_store_chain_id TEXT, store_name TEXT, store_address TEXT, store_phone TEXT, store_email TEXT, PRIMARY KEY (department_store_id)); CREATE TABLE departments (department_id TEXT, department_store_id TEXT, department_name TEXT, PRIMARY KEY (department_id)); CREATE TABLE order_items (order_item_id TEXT, order_id TEXT, product_id TEXT, PRIMARY KEY (order_item_id)); CREATE TABLE product_suppliers (product_id TEXT, supplier_id TEXT, date_supplied_from TEXT, date_supplied_to TEXT, total_amount_purchased TEXT, total_value_purchased TEXT, PRIMARY KEY (product_id, supplier_id)); CREATE TABLE staff_department_assignments (staff_id TEXT, department_id TEXT, date_assigned_from TEXT, job_title_code TEXT, date_assigned_to TEXT, PRIMARY KEY (staff_id, department_id));"
    },
    {
        "db_id": "music_4",
        "schema": "CREATE TABLE artist (artist_id TEXT, artist TEXT, age TEXT, famous_title TEXT, famous_release_date TEXT, PRIMARY KEY (artist_id)); CREATE TABLE volume (volume_id TEXT, volume_issue TEXT, issue_date TEXT, weeks_on_top TEXT, song TEXT, artist_id TEXT, PRIMARY KEY (volume_id), FOREIGN KEY (artist_id) REFERENCES artist (artist_id)); CREATE TABLE music_festival (id TEXT, music_festival TEXT, date_of_ceremony TEXT, category TEXT, volume TEXT, result TEXT, PRIMARY KEY (id));"
    },
    {
        "db_id": "insurance_fnol",
        "schema": "CREATE TABLE customers (customer_id TEXT, customer_name TEXT, PRIMARY KEY (customer_id)); CREATE TABLE services (service_id TEXT, service_name TEXT, PRIMARY KEY (service_id)); CREATE TABLE available_policies (policy_id TEXT, policy_type_code TEXT, customer_phone TEXT, PRIMARY KEY (policy_id)); CREATE TABLE customers_policies (customer_id TEXT, policy_id TEXT, date_opened TEXT, date_closed TEXT, PRIMARY KEY (customer_id, policy_id), FOREIGN KEY (customer_id) REFERENCES customers (customer_id), FOREIGN KEY (policy_id) REFERENCES available_policies (policy_id)); CREATE TABLE first_notification_of_loss (fnol_id TEXT, customer_id TEXT, policy_id TEXT, service_id TEXT, PRIMARY KEY (fnol_id), FOREIGN KEY (customer_id) REFERENCES customers (customer_id), FOREIGN KEY (policy_id) REFERENCES customers_policies (policy_id), FOREIGN KEY (service_id) REFERENCES services (service_id)); CREATE TABLE claims (claim_id TEXT, fnol_id TEXT, effective_date TEXT, PRIMARY KEY (claim_id), FOREIGN KEY (fnol_id) REFERENCES first_notification_of_loss (fnol_id)); CREATE TABLE settlements (settlement_id TEXT, claim_id TEXT, effective_date TEXT, settlement_amount TEXT, PRIMARY KEY (settlement_id), FOREIGN KEY (claim_id) REFERENCES claims (claim_id));"
    },
    {
        "db_id": "cinema",
        "schema": "CREATE TABLE film (film_id TEXT, rank_in_series TEXT, number_in_season TEXT, title TEXT, directed_by TEXT, original_air_date TEXT, production_code TEXT, PRIMARY KEY (film_id)); CREATE TABLE cinema (cinema_id TEXT, name TEXT, openning_year TEXT, capacity TEXT, location TEXT, PRIMARY KEY (cinema_id)); CREATE TABLE schedule (cinema_id TEXT, film_id TEXT, date TEXT, show_times_per_day TEXT, price TEXT, PRIMARY KEY (cinema_id, film_id), FOREIGN KEY (cinema_id) REFERENCES cinema (cinema_id), FOREIGN KEY (film_id) REFERENCES film (film_id));"
    },
    {
        "db_id": "flight_4",
        "schema": "CREATE TABLE routes (route_id TEXT, destination_airport_id TEXT, destination_airport TEXT, source_airport_id TEXT, source_airport TEXT, airline_id TEXT, airline TEXT, code_share TEXT, PRIMARY KEY (route_id)); CREATE TABLE airports (airport_id TEXT, name TEXT, city TEXT, country TEXT, x TEXT, y TEXT, elevation TEXT, iata TEXT, icao TEXT, PRIMARY KEY (airport_id)); CREATE TABLE airlines (airline_id TEXT, name TEXT, iata TEXT, icao TEXT, call_sign TEXT, country TEXT, active TEXT, PRIMARY KEY (airline_id));"
    },
    {
        "db_id": "pets_1",
        "schema": "CREATE TABLE student (student_id TEXT, last_name TEXT, first_name TEXT, age TEXT, sex TEXT, major TEXT, advisor TEXT, city_code TEXT, PRIMARY KEY (student_id)); CREATE TABLE has_pet (student_id TEXT, pet_id TEXT, PRIMARY KEY (student_id, pet_id), FOREIGN KEY (student_id) REFERENCES student (student_id)); CREATE TABLE pets (pet_id TEXT, pet_type TEXT, pet_age TEXT, weight TEXT, PRIMARY KEY (pet_id));"
    },
    {
        "db_id": "dorm_1",
        "schema": "CREATE TABLE student (StuID TEXT, LName TEXT, Fname TEXT, Age TEXT, Sex TEXT, Major TEXT, Advisor TEXT, city_code TEXT, PRIMARY KEY (StuID)); CREATE TABLE dorm (dormid TEXT, dorm_name TEXT, student_capacity TEXT, gender TEXT, PRIMARY KEY (dormid)); CREATE TABLE dorm_amenity (dormid TEXT, amenid TEXT, PRIMARY KEY (dormid, amenid), FOREIGN KEY (dormid) REFERENCES dorm (dormid)); CREATE TABLE has_amenity (StuID TEXT, dormid TEXT, amenid TEXT, PRIMARY KEY (StuID, dormid, amenid), FOREIGN KEY (StuID) REFERENCES student (StuID), FOREIGN KEY (dormid, amenid) REFERENCES dorm_amenity (dormid, amenid)); CREATE TABLE lives_in (stuid TEXT, dormid TEXT, room_number TEXT, PRIMARY KEY (stuid, dormid), FOREIGN KEY (stuid) REFERENCES student (StuID), FOREIGN KEY (dormid) REFERENCES dorm (dormid));"
    },
    {
        "db_id": "dorm_1",
        "schema": "CREATE TABLE Student (\n    StuID INT PRIMARY KEY,\n    LName TEXT,\n    Fname TEXT,\n    Age INT,\n    Sex TEXT,\n    Major TEXT,\n    Advisor TEXT,\n    city_code INT\n);\nCREATE TABLE Dorm (\n    dormid INT PRIMARY KEY,\n    dorm_name TEXT,\n    student_capacity INT,\n    gender TEXT\n);\nCREATE TABLE Dorm_amenity (\n    amenid INT PRIMARY KEY,\n    amenity_name TEXT\n);\nCREATE TABLE Has_amenity (\n    dormid INT,\n    amenid INT,\n    FOREIGN KEY (dormid) REFERENCES Dorm (dormid),\n    FOREIGN KEY (amenid) REFERENCES Dorm_amenity (amenid)\n);\nCREATE TABLE Lives_in (\n    stuid INT,\n    dormid INT,\n    room_number INT,\n    FOREIGN KEY (stuid) REFERENCES Student (StuID),\n    FOREIGN KEY (dormid) REFERENCES Dorm (dormid)\n);"
    },
    {
        "db_id": "journal_committee",
        "schema": "CREATE TABLE journal (\n    Journal_ID TEXT PRIMARY KEY,\n    Date INT,\n    Theme TEXT,\n    Sales TEXT\n);\nCREATE TABLE editor (\n    Editor_ID INT PRIMARY KEY,\n    Name TEXT,\n    Age INT\n);\nCREATE TABLE journal_committee (\n    Editor_ID INT,\n    Journal_ID TEXT,\n    Work_Type TEXT,\n    FOREIGN KEY (Editor_ID) REFERENCES editor (Editor_ID),\n    FOREIGN KEY (Journal_ID) REFERENCES journal (Journal_ID)\n);"
    },
    {
        "db_id": "flight_1",
        "schema": "CREATE TABLE flight (\n    flno TEXT PRIMARY KEY,\n    origin TEXT,\n    destination TEXT,\n    distance INT,\n    departure_date TIME,\n    arrival_date TIME,\n    price INT,\n    aid INT\n);\nCREATE TABLE aircraft (\n    aid INT PRIMARY KEY,\n    name TEXT,\n    distance INT\n);\nCREATE TABLE employee (\n    eid INT PRIMARY KEY,\n    name TEXT,\n    salary INT\n);\nCREATE TABLE certificate (\n    eid INT,\n    aid INT,\n    FOREIGN KEY (eid) REFERENCES employee (eid),\n    FOREIGN KEY (aid) REFERENCES aircraft (aid)\n);"
    },
    {
        "db_id": "medicine_enzyme_interaction",
        "schema": "CREATE TABLE medicine (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    Trade_Name TEXT,\n    FDA_approved TEXT\n);\nCREATE TABLE enzyme (\n    id INT PRIMARY KEY,\n    name TEXT,\n    Location TEXT,\n    Product TEXT,\n    Chromosome TEXT,\n    OMIM TEXT,\n    Porphyria TEXT\n);\nCREATE TABLE medicine_enzyme_interaction (\n    enzyme_id INT,\n    medicine_id TEXT,\n    interaction_type TEXT,\n    FOREIGN KEY (enzyme_id) REFERENCES enzyme (id),\n    FOREIGN KEY (medicine_id) REFERENCES medicine (id)\n);"
    },
    {
        "db_id": "local_govt_and_lot",
        "schema": "CREATE TABLE Customers (\n    customer_id TEXT PRIMARY KEY,\n    customer_details TEXT\n);\nCREATE TABLE Properties (\n    property_id INT PRIMARY KEY,\n    property_type_code INT,\n    property_address TEXT,\n    other_details TEXT\n);\nCREATE TABLE Residents (\n    resident_id INT PRIMARY KEY,\n    property_id INT,\n    date_moved_in TIME,\n    date_moved_out TIME,\n    other_details TEXT,\n    FOREIGN KEY (property_id) REFERENCES Properties (property_id)\n);\nCREATE TABLE Organizations (\n    organization_id INT PRIMARY KEY,\n    parent_organization_id INT,\n    organization_details TEXT\n);\nCREATE TABLE Services (\n    service_id INT PRIMARY KEY,\n    organization_id INT,\n    service_type_code INT,\n    service_details TEXT,\n    FOREIGN KEY (organization_id) REFERENCES Organizations (organization_id)\n);\nCREATE TABLE Residents_Services (\n    resident_id INT,\n    service_id INT,\n    date_moved_in TIME,\n    property_id INT,\n    date_requested TIME,\n    date_provided TIME,\n    other_details TEXT,\n    FOREIGN KEY (resident_id) REFERENCES Residents (resident_id),\n    FOREIGN KEY (service_id) REFERENCES Services (service_id),\n    FOREIGN KEY (property_id) REFERENCES Properties (property_id)\n);\nCREATE TABLE Things (\n    thing_id INT PRIMARY KEY,\n    organization_id INT,\n    Type_of_Thing_Code INT,\n    service_type_code INT,\n    service_details TEXT,\n    FOREIGN KEY (organization_id) REFERENCES Organizations (organization_id)\n);\nCREATE TABLE Customer_Events (\n    Customer_Event_ID INT PRIMARY KEY,\n    customer_id TEXT,\n    date_moved_in TIME,\n    property_id INT,\n    resident_id INT,\n    thing_id INT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),\n    FOREIGN KEY (property_id) REFERENCES Properties (property_id),\n    FOREIGN KEY (resident_id) REFERENCES Residents (resident_id),\n    FOREIGN KEY (thing_id) REFERENCES Things (thing_id)\n);\nCREATE TABLE Customer_Event_Notes (\n    Customer_Event_Note_ID INT PRIMARY KEY,\n    Customer_Event_ID INT,\n    service_type_code INT,\n    resident_id INT,\n    property_id INT,\n    date_moved_in TIME,\n    FOREIGN KEY (Customer_Event_ID) REFERENCES Customer_Events (Customer_Event_ID),\n    FOREIGN KEY (resident_id) REFERENCES Residents (resident_id),\n    FOREIGN KEY (property_id) REFERENCES Properties (property_id)\n);\nCREATE TABLE Timed_Status_of_Things (\n    thing_id INT,\n    Date_and_Date TIME,\n    Status_of_Thing_Code INT,\n    FOREIGN KEY (thing_id) REFERENCES Things (thing_id)\n);\nCREATE TABLE Timed_Locations_of_Things (\n    thing_id INT,\n    Date_and_Time TIME,\n    Location_Code INT,\n    FOREIGN KEY (thing_id) REFERENCES Things (thing_id)\n);"
    }
    {
        "db_id": "station_weather",
        "schema": "CREATE TABLE train (\n    id INT PRIMARY KEY,\n    train_number INT,\n    name TEXT,\n    origin TEXT,\n    destination TEXT,\n    time TEXT,\n    interval TEXT\n);\nCREATE TABLE station (\n    id INT PRIMARY KEY,\n    network_name TEXT,\n    services TEXT,\n    local_authority TEXT\n);\nCREATE TABLE route (\n    train_id INT,\n    station_id INT,\n    FOREIGN KEY (train_id) REFERENCES train (id),\n    FOREIGN KEY (station_id) REFERENCES station (id)\n);\nCREATE TABLE weekly_weather (\n    station_id INT,\n    day_of_week TEXT,\n    high_temperature INT,\n    low_temperature INT,\n    precipitation TEXT,\n    wind_speed_mph INT,\n    FOREIGN KEY (station_id) REFERENCES station (id)\n);"
    },
    {
        "db_id": "shop_membership",
        "schema": "CREATE TABLE member (\n    Member_ID INT PRIMARY KEY,\n    Card_Number INT,\n    Name TEXT,\n    Hometown TEXT,\n    Level TEXT\n);\nCREATE TABLE branch (\n    Branch_ID INT PRIMARY KEY,\n    Name TEXT,\n    Open_year TEXT,\n    Address_road TEXT,\n    City TEXT,\n    membership_amount TEXT\n);\nCREATE TABLE membership_register_branch (\n    Member_ID INT,\n    Branch_ID INT,\n    Register_Year TEXT,\n    FOREIGN KEY (Member_ID) REFERENCES member (Member_ID),\n    FOREIGN KEY (Branch_ID) REFERENCES branch (Branch_ID)\n);\nCREATE TABLE purchase (\n    Member_ID INT,\n    Branch_ID INT,\n    Year INT,\n    Total_pounds INT,\n    FOREIGN KEY (Member_ID) REFERENCES member (Member_ID),\n    FOREIGN KEY (Branch_ID) REFERENCES branch (Branch_ID)\n);"
    },
    {
        "db_id": "driving_school",
        "schema": "CREATE TABLE Addresses (\n    address_id TEXT PRIMARY KEY,\n    line_1_number_building TEXT,\n    city TEXT,\n    zip_postcode TEXT,\n    state_province_county TEXT,\n    country TEXT\n);\nCREATE TABLE Staff (\n    staff_id INT PRIMARY KEY,\n    staff_address_id INT,\n    nickname TEXT,\n    first_name TEXT,\n    middle_name TEXT,\n    last_name TEXT,\n    date_of_birth TIME,\n    date_joined_staff TIME,\n    date_left_staff TIME,\n    FOREIGN KEY (staff_address_id) REFERENCES Addresses (address_id)\n);\nCREATE TABLE Vehicles (\n    vehicle_id INT PRIMARY KEY,\n    vehicle_details TEXT\n);\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_address_id INT,\n    customer_status_code TEXT,\n    date_became_customer TIME,\n    date_of_birth TIME,\n    first_name TEXT,\n    last_name TEXT,\n    amount_outstanding NUMBER,\n    email_address TEXT,\n    phone_number TEXT,\n    cell_mobile_phone_number TEXT,\n    FOREIGN KEY (customer_address_id) REFERENCES Addresses (address_id)\n);\nCREATE TABLE Customer_Payments (\n    customer_id INT,\n    datetime_payment TIME,\n    payment_method_code TEXT,\n    amount_payment NUMBER,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\nCREATE TABLE Lessons (\n    lesson_id INT PRIMARY KEY,\n    customer_id INT,\n    lesson_status_code TEXT,\n    staff_id INT,\n    vehicle_id INT,\n    lesson_date TIME,\n    lesson_time TIME,\n    price NUMBER,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),\n    FOREIGN KEY (staff_id) REFERENCES Staff (staff_id),\n    FOREIGN KEY (vehicle_id) REFERENCES Vehicles (vehicle_id)\n);"
    },
    {
        "db_id": "concert_singer",
        "schema": "CREATE TABLE stadium (\n    Stadium_ID INT PRIMARY KEY,\n    Location TEXT,\n    Name TEXT,\n    Capacity INT,\n    Highest INT,\n    Lowest INT,\n    Average INT\n);\nCREATE TABLE singer (\n    Singer_ID INT PRIMARY KEY,\n    Name TEXT,\n    Country TEXT,\n    Song_Name TEXT,\n    Song_release_year TEXT,\n    Age INT,\n    Is_male TEXT\n);\nCREATE TABLE concert (\n    concert_ID INT PRIMARY KEY,\n    concert_Name TEXT,\n    Theme TEXT,\n    Stadium_ID INT,\n    Year INT,\n    FOREIGN KEY (Stadium_ID) REFERENCES stadium (Stadium_ID)\n);\nCREATE TABLE singer_in_concert (\n    concert_ID INT,\n    Singer_ID INT,\n    FOREIGN KEY (concert_ID) REFERENCES concert (concert_ID),\n    FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);"
    },
    {
        "db_id": "music_2",
        "schema": "CREATE TABLE Songs (\n    SongId TEXT PRIMARY KEY,\n    Title TEXT\n);\nCREATE TABLE Albums (\n    AId INT PRIMARY KEY,\n    Title TEXT,\n    Year INT,\n    Label TEXT,\n    Type TEXT\n);\nCREATE TABLE Band (\n    Id INT PRIMARY KEY,\n    Firstname TEXT,\n    Lastname TEXT\n);\nCREATE TABLE Instruments (\n    SongId TEXT,\n    BandmateId INT,\n    Instrument TEXT,\n    FOREIGN KEY (SongId) REFERENCES Songs (SongId),\n    FOREIGN KEY (BandmateId) REFERENCES Band (Id)\n);\nCREATE TABLE Performance (\n    SongId TEXT,\n    Bandmate TEXT,\n    StagePosition TEXT,\n    FOREIGN KEY (SongId) REFERENCES Songs (SongId)\n);\nCREATE TABLE Tracklists (\n    AlbumId INT PRIMARY KEY,\n    Position INT,\n    SongId TEXT,\n    FOREIGN KEY (SongId) REFERENCES Songs (SongId)\n);\nCREATE TABLE Vocals (\n    SongId TEXT,\n    Bandmate TEXT,\n    Type TEXT,\n    FOREIGN KEY (SongId) REFERENCES Songs (SongId)\n);"
    },
    {
        "db_id": "sports_competition",
        "schema": "CREATE TABLE club (\n    Club_ID TEXT PRIMARY KEY,\n    name TEXT,\n    Region TEXT,\n    Start_year TEXT\n);\nCREATE TABLE club_rank (\n    Rank INT,\n    Club_ID TEXT,\n    Gold INT,\n    Silver INT,\n    Bronze INT,\n    Total INT,\n    FOREIGN KEY (Club_ID) REFERENCES club (Club_ID)\n);\nCREATE TABLE player (\n    Player_ID INT PRIMARY KEY,\n    name TEXT,\n    Position TEXT,\n    Club_ID TEXT,\n    Apps INT,\n    Tries INT,\n    Goals INT,\n    Points INT,\n    FOREIGN KEY (Club_ID) REFERENCES club (Club_ID)\n);\nCREATE TABLE competition (\n    Competition_ID INT PRIMARY KEY,\n    Year INT,\n    Competition_type TEXT,\n    Country TEXT\n);\nCREATE TABLE competition_result (\n    Competition_ID INT,\n    Club_ID_1 TEXT,\n    Club_ID_2 TEXT,\n    Score TEXT,\n    FOREIGN KEY (Competition_ID) REFERENCES competition (Competition_ID),\n    FOREIGN KEY (Club_ID_1) REFERENCES club (Club_ID),\n    FOREIGN KEY (Club_ID_2) REFERENCES club (Club_ID)\n);"
    },
    {
        "db_id": "railway",
        "schema": "CREATE TABLE railway (\n    Railway_ID INT PRIMARY KEY,\n    Railway TEXT,\n    Builder TEXT,\n    Built TEXT,\n    Wheels TEXT,\n    Location TEXT,\n    ObjectNumber TEXT\n);\nCREATE TABLE train (\n    Train_ID INT PRIMARY KEY,\n    Train_Num INT,\n    Name TEXT,\n    From TEXT,\n    Arrival TEXT,\n    Railway_ID INT,\n    FOREIGN KEY (Railway_ID) REFERENCES railway (Railway_ID)\n);\nCREATE TABLE manager (\n    Manager_ID INT PRIMARY KEY,\n    Name TEXT,\n    Country TEXT,\n    Working_year_starts INT,\n    Age INT,\n    Level TEXT\n);\nCREATE TABLE railway_manage (\n    Railway_ID INT,\n    Manager_ID INT,\n    From_Year INT,\n    FOREIGN KEY (Railway_ID) REFERENCES railway (Railway_ID),\n    FOREIGN KEY (Manager_ID) REFERENCES manager (Manager_ID)\n);"
    },
    {
        "db_id": "inn_1",
        "schema": "CREATE TABLE Rooms (\n    RoomId TEXT PRIMARY KEY,\n    roomName TEXT,\n    beds TEXT,\n    bedType INT,\n    maxOccupancy TEXT,\n    basePrice INT,\n    decor TEXT\n);\nCREATE TABLE Reservations (\n    Code TEXT,\n    Room TEXT,\n    CheckIn INT,\n    CheckOut INT,\n    Rate INT,\n    LastName TEXT,\n    FirstName TEXT,\n    Adults INT,\n    Kids INT,\n    FOREIGN KEY (Room) REFERENCES Rooms (RoomId)\n);"
    },
    {
        "db_id": "museum_visit",
        "schema": "CREATE TABLE museum (\n    Museum_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Num_of_Staff INT,\n    Open_Year TEXT\n);\nCREATE TABLE visitor (\n    ID INT PRIMARY KEY,\n    Name TEXT,\n    Level_of_membership TEXT,\n    Age INT\n);\nCREATE TABLE visit (\n    Museum_ID TEXT,\n    visitor_ID INT,\n    Num_of_Ticket INT,\n    Total_spent INT,\n    FOREIGN KEY (Museum_ID) REFERENCES museum (Museum_ID),\n    FOREIGN KEY (visitor_ID) REFERENCES visitor (ID)\n);"
    },
    {   
        "db_id": "browser_web",
        "schema": "CREATE TABLE Web_client_accelerator (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    Operating_system TEXT,\n    Client TEXT,\n    Connection TEXT\n);\nCREATE TABLE browser (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    market_share TEXT\n);\nCREATE TABLE accelerator_compatible_browser (\n    accelerator_id INT,\n    browser_id TEXT,\n    compatible_since_year INT,\n    FOREIGN KEY (accelerator_id) REFERENCES Web_client_accelerator (id),\n    FOREIGN KEY (browser_id) REFERENCES browser (id)\n);"
    },
    {
        "db_id": "baseball_1",
        "schema": "CREATE TABLE all_star (\n    player_id TEXT,\n    year INT,\n    game_num INT,\n    game_id TEXT,\n    team_id TEXT,\n    league_id TEXT,\n    gp INT,\n    starting_pos TEXT\n);\nCREATE TABLE appearances (\n    year INT,\n    team_id TEXT,\n    league_id TEXT,\n    player_id TEXT,\n    g_all INT,\n    gs INT,\n    g_batting INT,\n    g_defense INT,\n    g_p INT,\n    g_c INT,\n    g_1b INT,\n    g_2b INT,\n    g_3b INT,\n    g_ss INT,\n    g_lf INT,\n    g_cf INT,\n    g_rf INT,\n    g_of INT,\n    g_dh INT,\n    g_ph INT,\n    g_pr INT\n);\nCREATE TABLE manager_award (\n    player_id TEXT,\n    award_id TEXT,\n    year INT,\n    league_id TEXT,\n    tie INT,\n    notes TEXT\n);\nCREATE TABLE player_award (\n    player_id TEXT,\n    award_id TEXT,\n    year INT,\n    league_id TEXT,\n    tie INT,\n    notes TEXT\n);\nCREATE TABLE manager_award_vote (\n    award_id TEXT,\n    year INT,\n    league_id TEXT,\n    player_id TEXT,\n    points_won INT,\n    points_max INT,\n    votes_first INT\n);\nCREATE TABLE player_award_vote (\n    award_id TEXT,\n    year INT,\n    league_id TEXT,\n    player_id TEXT,\n    points_won INT,\n    points_max INT,\n    votes_first INT\n);\nCREATE TABLE batting (\n    player_id TEXT,\n    year INT,\n    stint INT,\n    team_id TEXT,\n    league_id TEXT,\n    g INT,\n    ab INT,\n    r INT,\n    h INT,\n    double INT,\n    triple INT,\n    hr INT,\n    rbi INT,\n    sb INT,\n    cs INT,\n    bb INT,\n    so INT,\n    ibb INT,\n    hbp INT,\n    sh INT,\n    sf INT,\n    g_idp INT\n);\nCREATE TABLE batting_postseason (\n    year INT,\n    round INT,\n    player_id TEXT,\n    team_id TEXT,\n    league_id TEXT,\n    g INT,\n    ab INT,\n    r INT,\n    h INT,\n    double INT,\n    triple INT,\n    hr INT,\n    rbi INT,\n    sb INT,\n    cs INT,\n    bb INT,\n    so INT,\n    ibb INT,\n    hbp INT,\n    sh INT,\n    sf INT,\n    g_idp INT\n);\nCREATE TABLE player_college (\n    player_id TEXT,\n    college_id TEXT,\n    year INT\n);\nCREATE TABLE fielding (\n    player_id TEXT,\n    year INT,\n    stint INT,\n    team_id TEXT,\n    league_id TEXT,\n    pos TEXT,\n    g INT,\n    gs INT,\n    inn_outs INT,\n    po INT,\n    a INT,\n    e INT,\n    dp INT,\n    pb INT,\n    wp INT,\n    sb INT,\n    cs INT,\n    zr INT\n);\nCREATE TABLE fielding_outfield (\n    player_id TEXT,\n    year INT,\n    stint INT,\n    glf INT,\n    gcf INT,\n    grf INT\n);\nCREATE TABLE fielding_postseason (\n    player_id TEXT,\n    year INT,\n    stint INT,\n    team_id TEXT,\n    league_id TEXT,\n    w INT,\n    l INT,\n    g INT,\n    gs INT,\n    cg INT,\n    sho INT,\n    sv INT,\n    ipouts INT,\n    h INT,\n    er INT,\n    hr INT,\n    bb INT,\n    so INT,\n    baopp TEXT,\n    era TEXT,\n    ibb INT,\n    wp INT,\n    hbp INT,\n    bk INT,\n    bfp INT,\n    gf INT,\n    r INT,\n    sh INT,\n    sf INT,\n    g_idp INT\n);\nCREATE TABLE hall_of_fame (\n    player_id TEXT,\n    yearid INT,\n    votedby TEXT,\n    ballots INT,\n    needed INT,\n    votes INT,\n    inducted INT,\n    category TEXT,\n    needed_note TEXT\n);\nCREATE TABLE home_game (\n    year INT,\n    league_id TEXT,\n    team_id TEXT,\n    park_id TEXT,\n    span_first TEXT,\n    span_last TEXT,\n    games INT,\n    openings INT,\n    attendance INT\n);\nCREATE TABLE manager (\n    player_id TEXT,\n    year INT,\n    stint INT,\n    team_id TEXT,\n    league_id TEXT,\n    w INT,\n    l INT,\n    g INT,\n    gs INT,\n    cg INT,\n    sho INT,\n    sv INT,\n    ipouts INT,\n    h INT,\n    er INT,\n    hr INT,\n    bb INT,\n    so INT,\n    baopp TEXT,\n    era TEXT,\n    ibb INT,\n    wp INT,\n    hbp INT,\n    bk INT,\n    bfp INT,\n    gf INT,\n    r INT,\n    sh INT,\n    sf INT,\n    g_idp INT\n);\nCREATE TABLE manager_half (\n    player_id TEXT,\n    year INT,\n    stint INT,\n    team_id TEXT,\n    league_id TEXT,\n    w INT,\n    l INT,\n    g INT,\n    gs INT,\n    cg INT,\n    sho INT,\n    sv INT,\n    ipouts INT,\n    h INT,\n    er INT,\n    hr INT,\n    bb INT,\n    so INT,\n    baopp TEXT,\n    era TEXT,\n    ibb INT,\n    wp INT,\n    hbp INT,\n    bk INT,\n    bfp INT,\n    gf INT,\n    r INT,\n    sh INT,\n    sf INT,\n    g_idp INT\n);\nCREATE TABLE player (\n    player_id TEXT,\n    year INT,\n    stint INT,\n    team_id TEXT,\n    league_id TEXT,\n    g INT,\n    ab INT,\n    r INT,\n    h INT,\n    double INT,\n    triple INT,\n    hr INT,\n    rbi INT,\n    sb INT,\n    cs INT,\n    bb INT,\n    so INT,\n    ibb INT,\n    hbp INT,\n    sh INT,\n    sf INT,\n    g_idp INT\n);\nCREATE TABLE park (\n    park_id TEXT,\n    park_name TEXT,\n    park_alias TEXT,\n    city TEXT,\n    state TEXT,\n    country TEXT\n);\nCREATE TABLE pitching (\n    player_id TEXT,\n    year INT,\n    stint INT,\n    team_id TEXT,\n    league_id TEXT,\n    w INT,\n    l INT,\n    g INT,\n    gs INT,\n    cg INT,\n    sho INT,\n    sv INT,\n    ipouts INT,\n    h INT,\n    er INT,\n    hr INT,\n    bb INT,\n    so INT,\n    baopp TEXT,\n    era TEXT,\n    ibb INT,\n    wp INT,\nhbp INT,\n    bk INT,\n    bfp INT,\n    gf INT,\n    r INT,\n    sh INT,\n    sf INT,\n    g_idp INT\n);\nCREATE TABLE pitching_postseason (\n    player_id TEXT,\n    year INT,\n    stint INT,\n    team_id TEXT,\n    league_id TEXT,\n    w INT,\n    l INT,\n    g INT,\n    gs INT,\n    cg INT,\n    sho INT,\n    sv INT,\n    ipouts INT,\n    h INT,\n    er INT,\n    hr INT,\n    bb INT,\n    so INT,\n    baopp TEXT,\n    era TEXT,\n    ibb INT,\n    wp INT,\n    hbp INT,\n    bk INT,\n    bfp INT,\n    gf INT,\n    r INT,\n    sh INT,\n    sf INT,\n    g_idp INT\n);\nCREATE TABLE salary (\n    year INT,\n    team_id TEXT,\n    league_id TEXT,\n    player_id TEXT,\n    salary INT\n);\nCREATE TABLE college (\n    college_id TEXT,\n    name_full TEXT,\n    city TEXT,\n    state TEXT,\n    country TEXT\n);\nCREATE TABLE postseason (\n    year INT,\n    round INT,\n    team_id_winner TEXT,\n    league_id_winner TEXT,\n    team_id_loser TEXT,\n    league_id_loser TEXT,\n    wins INT,\n    losses INT,\n    ties INT\n);\nCREATE TABLE team (\n    year INT,\n    league_id TEXT,\n    team_id TEXT,\n    franchise_id TEXT,\n    div_id TEXT,\n    rank INT,\n    g INT,\n    ghome INT,\n    w INT,\n    l INT,\n    div_win INT,\n    wc_win INT,\n    lg_win INT,\n    ws_win INT,\n    r INT,\n    ab INT,\n    h INT,\n    double INT,\n    triple INT,\n    hr INT,\n    bb INT,\n    so INT,\n    sb INT,\n    cs INT,\n    hbp INT,\n    sf INT,\n    ra INT,\n    er INT,\n    era TEXT,\n    cg INT,\n    sho INT,\n    sv INT,\n    ipouts INT,\n    ha INT,\n    hra INT,\n    bba INT,\n    soa INT,\n    e INT,\n    dp INT,\n    fp INT,\n    name TEXT,\n    park TEXT,\n    attendance INT,\n    bpf INT,\n    ppf INT,\n    team_id_br TEXT,\n    team_id_lahman45 TEXT,\n    team_id_retro TEXT\n);\nCREATE TABLE team_franchise (\n    franchise_id TEXT,\n    franchise_name TEXT,\n    active TEXT,\n    na_assoc TEXT\n);\nCREATE TABLE team_half (\n    year INT,\n    league_id TEXT,\n    team_id TEXT,\n    half TEXT,\n    div_id TEXT,\n    div_win INT,\n    rank INT,\n    g INT,\n    w INT,\n    l INT\n);\n"
    }
    {
        "db_id": "architecture",
        "schema": "CREATE TABLE architect (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    nationality TEXT,\n    gender TEXT\n);\nCREATE TABLE bridge (\n    architect_id INT,\n    id INT PRIMARY KEY,\n    name TEXT,\n    location TEXT,\n    length_meters TEXT,\n    length_feet TEXT,\n    FOREIGN KEY (architect_id) REFERENCES architect (id)\n);\nCREATE TABLE mill (\n    architect_id INT,\n    id INT PRIMARY KEY,\n    location TEXT,\n    name TEXT,\n    type TEXT,\n    built_year TEXT,\n    notes TEXT,\n    FOREIGN KEY (architect_id) REFERENCES architect (id)\n);"
    },
    {
        "db_id": "csu_1",
        "schema": "CREATE TABLE Campuses (\n    Id INT PRIMARY KEY,\n    Campus TEXT,\n    Location TEXT,\n    County TEXT,\n    Year TEXT\n);\nCREATE TABLE csu_fees (\n    Campus TEXT,\n    Year TEXT,\n    CampusFee INT,\n    FOREIGN KEY (Campus) REFERENCES Campuses (Campus),\n    FOREIGN KEY (Year) REFERENCES Campuses (Year)\n);\nCREATE TABLE degrees (\n    Year TEXT,\n    Campus TEXT,\n    Degrees INT,\n    FOREIGN KEY (Year) REFERENCES Campuses (Year),\n    FOREIGN KEY (Campus) REFERENCES Campuses (Campus)\n);\nCREATE TABLE discipline_enrollments (\n    Campus TEXT,\n    Discipline TEXT,\n    Year TEXT,\n    Undergraduate INT,\n    Graduate INT,\n    FOREIGN KEY (Campus) REFERENCES Campuses (Campus),\n    FOREIGN KEY (Year) REFERENCES Campuses (Year)\n);\nCREATE TABLE enrollments (\n    Campus TEXT,\n    Year TEXT,\n    TotalEnrollment_AY INT,\n    FTE_AY INT,\n    FOREIGN KEY (Campus) REFERENCES Campuses (Campus),\n    FOREIGN KEY (Year) REFERENCES Campuses (Year)\n);\nCREATE TABLE faculty (\n    Campus TEXT,\n    Year TEXT,\n    Faculty INT,\n    FOREIGN KEY (Campus) REFERENCES Campuses (Campus),\n    FOREIGN KEY (Year) REFERENCES Campuses (Year)\n);"
    },
    {
        "db_id": "tracking_orders",
        "schema": "CREATE TABLE Customers (\n    customer_id TEXT PRIMARY KEY,\n    customer_name TEXT,\n    customer_details TEXT\n);\nCREATE TABLE Invoices (\n    invoice_number TEXT PRIMARY KEY,\n    invoice_date TIME,\n    invoice_details TEXT\n);\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_status TEXT,\n    date_order_placed TIME,\n    order_details TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_details TEXT\n);\nCREATE TABLE Order_Items (\n    order_item_id INT PRIMARY KEY,\n    product_id INT,\n    order_id INT,\n    order_item_status TEXT,\n    order_item_details TEXT,\n    FOREIGN KEY (product_id) REFERENCES Products (product_id),\n    FOREIGN KEY (order_id) REFERENCES Orders (order_id)\n);\nCREATE TABLE Shipments (\n    shipment_id INT PRIMARY KEY,\n    order_id INT,\n    invoice_number INT,\n    shipment_tracking_number TEXT,\n    shipment_date TIME,\n    other_shipment_details TEXT,\n    FOREIGN KEY (order_id) REFERENCES Orders (order_id),\n    FOREIGN KEY (invoice_number) REFERENCES Invoices (invoice_number)\n);\nCREATE TABLE Shipment_Items (\n    shipment_id INT,\n    order_item_id INT,\n    FOREIGN KEY (shipment_id) REFERENCES Shipments (shipment_id),\n    FOREIGN KEY (order_item_id) REFERENCES Order_Items (order_item_id)\n);"
    },
    {
        "db_id": "insurance_policies",
        "schema": "CREATE TABLE Customers (\n    Customer_ID TEXT PRIMARY KEY,\n    Customer_Details TEXT\n);\nCREATE TABLE Customer_Policies (\n    Policy_ID INT,\n    Customer_ID TEXT,\n    Policy_Type_Code TEXT,\n    Start_Date TIME,\n    End_Date TIME,\n    FOREIGN KEY (Customer_ID) REFERENCES Customers (Customer_ID)\n);\nCREATE TABLE Claims (\n    Claim_ID INT PRIMARY KEY,\n    Policy_ID INT,\n    Date_Claim_Made TIME,\n    Date_Claim_Settled TIME,\n    Amount_Claimed INT,\n    Amount_Settled INT,\n    FOREIGN KEY (Policy_ID) REFERENCES Customer_Policies (Policy_ID)\n);\nCREATE TABLE Settlements (\n    Settlement_ID INT PRIMARY KEY,\n    Claim_ID INT,\n    Date_Claim_Made TIME,\n    Date_Claim_Settled TIME,\n    Amount_Claimed INT,\n    Amount_Settled INT,\n    Customer_Policy_ID INT,\n    FOREIGN KEY (Claim_ID) REFERENCES Claims (Claim_ID)\n);\nCREATE TABLE Payments (\n    Payment_ID INT PRIMARY KEY,\n    Settlement_ID INT,\n    Payment_Method_Code TEXT,\n    Date_Payment_Made TIME,\n    Amount_Payment INT,\n    FOREIGN KEY (Settlement_ID) REFERENCES Settlements (Settlement_ID)\n);"
    },
    {
        "db_id": "gas_company",
        "schema": "CREATE TABLE company (\n    Company_ID TEXT PRIMARY KEY,\n    Rank INT,\n    Company TEXT,\n    Headquarters TEXT,\n    Main_Industry TEXT,\n    Sales_billion INT,\n    Profits_billion INT,\n    Assets_billion INT,\n    Market_Value INT\n);\nCREATE TABLE gas_station (\n    Station_ID INT PRIMARY KEY,\n    Open_Year INT,\n    Location TEXT,\n    Manager_Name TEXT,\n    Vice_Manager_Name TEXT,\n    Representative_Name TEXT\n);\nCREATE TABLE station_company (\n    Station_ID INT,\n    Company_ID TEXT,\n    Rank_of_the_Year INT,\n    FOREIGN KEY (Station_ID) REFERENCES gas_station (Station_ID),\n    FOREIGN KEY (Company_ID) REFERENCES company (Company_ID)\n);"
    },
    {
        "db_id": "e_government",
        "schema": "CREATE TABLE Addresses (\n    address_id TEXT PRIMARY KEY,\n    line_1_number_building TEXT,\n    town_city TEXT,\n    zip_postcode TEXT,\n    state_province_county TEXT,\n    country TEXT\n);\nCREATE TABLE Services (\n    service_id TEXT PRIMARY KEY,\n    service_type_code TEXT,\n    service_name TEXT,\n    service_descriptio TEXT\n);\nCREATE TABLE Forms (\n    form_id TEXT PRIMARY KEY,\n    form_type_code TEXT,\n    service_id TEXT,\n    form_number TEXT,\n    form_name TEXT,\n    form_description TEXT,\n    FOREIGN KEY (service_id) REFERENCES Services (service_id)\n);\nCREATE TABLE Individuals (\n    individual_id TEXT PRIMARY KEY,\n    individual_first_name TEXT,\n    individual_middle_name TEXT,\n    individul_phone TEXT,\n    individual_email TEXT,\n    individual_address TEXT,\n    individual_last_name TEXT\n);\nCREATE TABLE Organizations (\n    organization_id TEXT PRIMARY KEY,\n    date_formed TIME,\n    organization_name TEXT,\n    uk_vat_number TEXT\n);\nCREATE TABLE Parties (\n    party_id TEXT PRIMARY KEY,\n    payment_method_code TEXT,\n    party_phone TEXT,\n    party_email TEXT\n);\nCREATE TABLE Organization_Contact_Individuals (\n    individual_id TEXT,\n    organization_id TEXT,\n    date_contact_from TIME,\n    date_contact_to TIME,\n    FOREIGN KEY (individual_id) REFERENCES Individuals (individual_id),\n    FOREIGN KEY (organization_id) REFERENCES Organizations (organization_id)\n);\nCREATE TABLE Party_Addresses (\n    party_id TEXT,\n    address_id TEXT,\n    date_address_from TIME,\n    address_type_code TEXT,\n    date_address_to TIME,\n    FOREIGN KEY (party_id) REFERENCES Parties (party_id),\n    FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\nCREATE TABLE Party_Forms (\n    party_id TEXT,\n    form_id TEXT,\n    date_completion_started TIME,\n    form_status_code TEXT,\n    date_fully_completed TIME,\n    FOREIGN KEY (party_id) REFERENCES Parties (party_id),\n    FOREIGN KEY (form_id) REFERENCES Forms (form_id)\n);\nCREATE TABLE Party_Services (\n    party_id TEXT,\n    service_id TEXT,\n    service_datetime TIME,\n    booking_made_date TIME,\n    FOREIGN KEY (party_id) REFERENCES Parties (party_id),\n    FOREIGN KEY (service_id) REFERENCES Services (service_id)\n);"
    },
    {
        "db_id": "school_bus",
        "schema": "CREATE TABLE driver (\n    Driver_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Party TEXT,\n    Home_city TEXT,\n    Age INT\n);\nCREATE TABLE school (\n    School_ID INT PRIMARY KEY,\n    Grade INT,\n    School TEXT,\n    Location TEXT,\n    Type TEXT\n);\nCREATE TABLE school_bus (\n    School_ID INT,\n    Driver_ID TEXT,\n    Years_Working INT,\n    If_full_time TEXT,\n    FOREIGN KEY (School_ID) REFERENCES school (School_ID),\n    FOREIGN KEY (Driver_ID) REFERENCES driver (Driver_ID)\n);"
    },
    {
        "db_id": "machine_repair",
        "schema": "CREATE TABLE repair (\n    repair_ID TEXT PRIMARY KEY,\n    name TEXT,\n    Launch_Date TEXT,\n    Notes TEXT\n);\nCREATE TABLE machine (\n    Machine_ID INT PRIMARY KEY,\n    Making_Year INT,\n    Class TEXT,\n    Team TEXT,\n    Machine_series TEXT,\n    value_points INT,\n    quality_rank INT\n);\nCREATE TABLE technician (\n    technician_id INT PRIMARY KEY,\n    Name TEXT,\n    Team TEXT,\n    Starting_Year INT,\n    Age INT\n);\nCREATE TABLE repair_assignment (\n    technician_id INT,\n    repair_ID TEXT,\n    Machine_ID INT,\n    FOREIGN KEY (technician_id) REFERENCES technician (technician_id),\n    FOREIGN KEY (repair_ID) REFERENCES repair (repair_ID),\n    FOREIGN KEY (Machine_ID) REFERENCES machine (Machine_ID)\n);"
    },
    {
        "db_id": "theme_gallery",
        "schema": "CREATE TABLE artist (\n    Artist_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Country TEXT,\n    Year_Join INT,\n    Age INT\n);\nCREATE TABLE exhibition (\n    Exhibition_ID INT PRIMARY KEY,\n    Year INT,\n    Theme TEXT,\n    Artist_ID TEXT,\n    Ticket_Price INT,\n    FOREIGN KEY (Artist_ID) REFERENCES artist (Artist_ID)\n);\nCREATE TABLE exhibition_record (\n    Exhibition_ID INT,\n    Date TEXT,\n    Attendance INT,\n    FOREIGN KEY (Exhibition_ID) REFERENCES exhibition (Exhibition_ID)\n);"
    },
    {
        "db_id": "film_rank",
        "schema": "CREATE TABLE film (\n    Film_ID TEXT PRIMARY KEY,\n    Title TEXT,\n    Studio TEXT,\n    Director TEXT,\n    Gross_in_dollar TEXT\n);\nCREATE TABLE market (\n    Market_ID INT PRIMARY KEY,\n    Country TEXT,\n    Number_cities INT\n);\nCREATE TABLE film_market_estimation (\n    Estimation_ID INT PRIMARY KEY,\n    Low_Estimate INT,\n    High_Estimate INT,\n    Film_ID TEXT,\n    Type TEXT,\n    Market_ID INT,\n    Year INT,\n    FOREIGN KEY (Film_ID) REFERENCES film (Film_ID),\n    FOREIGN KEY (Market_ID) REFERENCES market (Market_ID)\n);"
    },
    {
        "db_id": "party_people",
        "schema": "CREATE TABLE region (\n    Region_ID TEXT PRIMARY KEY,\n    Region_name TEXT,\n    Date TEXT,\n    Label TEXT,\n    Format TEXT,\n    Catalogue TEXT\n);\nCREATE TABLE party (\n    Party_ID TEXT PRIMARY KEY,\n    Minister TEXT,\n    Took_office TEXT,\n    Left_office TEXT,\n    Region_ID TEXT,\n    Party_name TEXT,\n    FOREIGN KEY (Region_ID) REFERENCES region (Region_ID)\n);\nCREATE TABLE member (\n    Member_ID TEXT PRIMARY KEY,\n    Member_Name TEXT,\n    Party_ID TEXT,\n    In_office TEXT,\n    FOREIGN KEY (Party_ID) REFERENCES party (Party_ID)\n);\nCREATE TABLE party_events (\n    Event_ID TEXT PRIMARY KEY,\n    Event_Name TEXT,\n    Party_ID TEXT,\n    Member_in_charge_ID TEXT,\n    FOREIGN KEY (Party_ID) REFERENCES party (Party_ID)\n);"
    },
    {
        "db_id": "hospital_1",
        "schema": "CREATE TABLE Physician (\n    EmployeeID INT PRIMARY KEY,\n    Name TEXT,\n    Position TEXT,\n    SSN INT\n);\nCREATE TABLE Department (\n    DepartmentID INT PRIMARY KEY,\n    Name TEXT,\n    Head TEXT\n);\nCREATE TABLE Affiliated_With (\n    Physician INT,\n    Department INT,\n    PrimaryAffiliation TEXT,\n    FOREIGN KEY (Physician) REFERENCES Physician (EmployeeID),\n    FOREIGN KEY (Department) REFERENCES Department (DepartmentID)\n);\nCREATE TABLE Procedures (\n    Code TEXT PRIMARY KEY,\n    Name TEXT,\n    Cost INT\n);\nCREATE TABLE Trained_In (\n    Physician INT,\n    Treatment INT,\n    CertificationDate TIME,\n    CertificationExpires TIME,\n    FOREIGN KEY (Physician) REFERENCES Physician (EmployeeID)\n);\nCREATE TABLE Patient (\n    SSN INT PRIMARY KEY,\n    Name TEXT,\n    Address TEXT,\n    Phone TEXT,\n    InsuranceID TEXT,\n    PCP INT\n);\nCREATE TABLE Nurse (\n    EmployeeID INT PRIMARY KEY,\n    Name TEXT,\n    Position TEXT,\n    Registered BOOLEAN,\n    SSN INT\n);\nCREATE TABLE Appointment (\n    AppointmentID INT PRIMARY KEY,\n    Patient INT,\n    PrepNurse INT,\n    Physician INT,\n    Start TIME,\n    End TIME,\n    ExaminationRoom INT,\n    FOREIGN KEY (Patient) REFERENCES Patient (SSN),\n    FOREIGN KEY (PrepNurse) REFERENCES Nurse (EmployeeID),\n    FOREIGN KEY (Physician) REFERENCES Physician (EmployeeID)\n);\nCREATE TABLE Medication (\n    Code TEXT,\n    Name TEXT,\n    Brand TEXT,\n    Description TEXT,\n    FOREIGN KEY (Code) REFERENCES Procedures (Code)\n);\nCREATE TABLE Prescribes (\n    Physician INT,\n    Patient INT,\n    Medication TEXT,\n    Date TIME,\n    Appointment INT,\n    Dose TEXT,\n    FOREIGN KEY (Physician) REFERENCES Physician (EmployeeID),\n    FOREIGN KEY (Patient) REFERENCES Patient (SSN)\n);\nCREATE TABLE Block (\n    BlockFloor TEXT,\n    BlockCode TEXT PRIMARY KEY\n);\nCREATE TABLE Room (\n    RoomNumber INT,\n    RoomType TEXT,\n    BlockFloor TEXT,\n    BlockCode TEXT,\n    Unavailable BOOLEAN,\n    FOREIGN KEY (BlockFloor) REFERENCES Block (BlockFloor),\n    FOREIGN KEY (BlockCode) REFERENCES Block (BlockCode)\n);\nCREATE TABLE On_Call (\n    Nurse INT,\n    BlockFloor TEXT,\n    BlockCode TEXT,\n    OnCallStart TIME,\n    OnCallEnd TIME,\n    FOREIGN KEY (Nurse) REFERENCES Nurse (EmployeeID),\n    FOREIGN KEY (BlockFloor) REFERENCES Block (BlockFloor),\n    FOREIGN KEY (BlockCode) REFERENCES Block (BlockCode)\n);\nCREATE TABLE Stay (\n    StayID INT PRIMARY KEY,\n    Patient INT,\n    Room INT,\n    StayStart TIME,\n    StayEnd TIME,\n    FOREIGN KEY (Patient) REFERENCES Patient (SSN)\n);\nCREATE TABLE Undergoes (\n    Patient INT,\n    Procedures TEXT,\n    Stay INT,\n    DateUndergoes TIME,\n    Physician INT,\n    AssistingNurse INT,\n    FOREIGN KEY (Patient) REFERENCES Patient (SSN),\n    FOREIGN KEY (Stay) REFERENCES Stay (StayID),\n    FOREIGN KEY (Physician) REFERENCES Physician (EmployeeID),\n    FOREIGN KEY (AssistingNurse) REFERENCES Nurse (EmployeeID)\n);"
    },
    {
        "db_id": "customers_campaigns_ecommerce",
        "schema": "CREATE TABLE Premises (\n    premise_id TEXT PRIMARY KEY,\n    premises_type TEXT,\n    premise_details TEXT\n);\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    product_category TEXT,\n    product_name TEXT\n);\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    payment_method TEXT,\n    customer_name TEXT,\n    customer_phone TEXT,\n    customer_email TEXT,\n    customer_address TEXT,\n    customer_login TEXT,\n    customer_password TEXT\n);\nCREATE TABLE Mailshot_Campaigns (\n    mailshot_id INT PRIMARY KEY,\n    product_category TEXT,\n    mailshot_name TEXT,\n    mailshot_start_date TIME,\n    mailshot_end_date TIME\n);\nCREATE TABLE Customer_Addresses (\n    customer_id INT,\n    premise_id TEXT,\n    date_address_from TIME,\n    address_type_code TEXT,\n    date_address_to TIME,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),\n    FOREIGN KEY (premise_id) REFERENCES Premises (premise_id)\n);\nCREATE TABLE Customer_Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_status_code TEXT,\n    shipping_method_code TEXT,\n    order_placed_datetime TIME,\n    order_delivered_datetime TIME,\n    order_shipping_charges INT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\nCREATE TABLE Mailshot_Customers (\n    mailshot_id INT,\n    customer_id INT,\n    outcome_code TEXT,\n    mailshot_customer_date TIME,\n    FOREIGN KEY (mailshot_id) REFERENCES Mailshot_Campaigns (mailshot_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\nCREATE TABLE Order_Items (\n    item_id INT PRIMARY KEY,\n    order_item_status_code TEXT,\n    order_id INT,\n    product_id INT,\n    item_status_code TEXT,\n    item_delivered_datetime TIME,\n    item_order_quantity INT,\n    FOREIGN KEY (order_id) REFERENCES Customer_Orders (order_id),\n    FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);"
    },
    {
        "db_id": "gymnast",
        "schema": "CREATE TABLE gymnast (\n    Gymnast_ID TEXT PRIMARY KEY,\n    Floor_Exercise_Points INT,\n    Pommel_Horse_Points INT,\n    Rings_Points INT,\n    Vault_Points INT,\n    Parallel_Bars_Points INT,\n    Horizontal_Bar_Points INT,\n    Total_Points INT\n);\nCREATE TABLE people (\n    People_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Age INT,\n    Height INT,\n    Hometown TEXT\n);\nALTER TABLE gymnast\nADD FOREIGN KEY (Gymnast_ID) REFERENCES people (People_ID);"
    },
    {
        "db_id": "restaurants",
        "schema": "CREATE TABLE GEOGRAPHIC (\n    CITY_NAME TEXT,\n    COUNTY TEXT,\n    REGION TEXT,\n    PRIMARY KEY (CITY_NAME)\n);\nCREATE TABLE RESTAURANT (\n    ID INT PRIMARY KEY,\n    NAME TEXT,\n    FOOD_TYPE TEXT,\n    CITY_NAME TEXT,\n    RATING INT,\n    FOREIGN KEY (CITY_NAME) REFERENCES GEOGRAPHIC (CITY_NAME)\n);\nCREATE TABLE LOCATION (\n    RESTAURANT_ID INT,\n    HOUSE_NUMBER INT,\n    STREET_NAME TEXT,\n    CITY_NAME TEXT,\n    FOREIGN KEY (RESTAURANT_ID) REFERENCES RESTAURANT (ID),\nFOREIGN KEY (CITY_NAME) REFERENCES GEOGRAPHIC (CITY_NAME)\n);"
    },
    {
        "db_id": "mountain_photos",
        "schema": "CREATE TABLE mountain (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    Height TEXT,\n    Prominence TEXT,\n    Range TEXT,\n    Country TEXT\n);\nCREATE TABLE camera_lens (\n    id INT PRIMARY KEY,\n    brand TEXT,\n    name TEXT,\n    focal_length_mm INT,\n    max_aperture INT\n);\nCREATE TABLE photos (\n    id INT PRIMARY KEY,\n    camera_lens_id INT,\n    mountain_id TEXT,\n    color TEXT,\n    name TEXT,\n    FOREIGN KEY (camera_lens_id) REFERENCES camera_lens (id),\n    FOREIGN KEY (mountain_id) REFERENCES mountain (id)\n);"
    },
    {
        "db_id": "battle_death",
    "schema": "CREATE TABLE battle (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    date TEXT,\n    bulgarian_commander TEXT,\n    latin_commander TEXT,\n    result TEXT\n);\nCREATE TABLE ship (\n    lost_in_battle INT,\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    tonnage TEXT,\n    ship_type TEXT,\n    location TEXT,\n    disposition_of_ship TEXT\n);\nCREATE TABLE death (\n    caused_by_ship_id INT,\n    id TEXT PRIMARY KEY,\n    note TEXT,\n    killed INT,\n    injured INT,\n    FOREIGN KEY (caused_by_ship_id) REFERENCES ship (id)\n);"
    },
    {
        "db_id": "cre_Doc_Control_Systems",
        "schema": "CREATE TABLE Ref_Document_Types (\n    document_type_code TEXT PRIMARY KEY,\n    document_type_description TEXT\n);\nCREATE TABLE Roles (\n    role_code TEXT PRIMARY KEY,\n    role_description TEXT\n);\nCREATE TABLE Addresses (\n    address_id TEXT PRIMARY KEY,\n    address_details TEXT\n);\nCREATE TABLE Ref_Document_Status (\n    document_status_code TEXT PRIMARY KEY,\n    document_status_description TEXT\n);\nCREATE TABLE Ref_Shipping_Agents (\n    shipping_agent_code TEXT PRIMARY KEY,\n    shipping_agent_name TEXT,\n    shipping_agent_description TEXT\n);\nCREATE TABLE Documents (\n    document_id TEXT PRIMARY KEY,\n    document_status_code TEXT,\n    document_type_code TEXT,\n    shipping_agent_code TEXT,\n    receipt_date TIME,\n    receipt_number TEXT,\n    other_details TEXT,\n    FOREIGN KEY (document_status_code) REFERENCES Ref_Document_Status (document_status_code),\n    FOREIGN KEY (document_type_code) REFERENCES Ref_Document_Types (document_type_code),\n    FOREIGN KEY (shipping_agent_code) REFERENCES Ref_Shipping_Agents (shipping_agent_code)\n);\nCREATE TABLE Employees (\n    employee_id TEXT PRIMARY KEY,\n    role_code TEXT,\n    employee_name TEXT,\n    other_details TEXT,\n    FOREIGN KEY (role_code) REFERENCES Roles (role_code)\n);\nCREATE TABLE Document_Drafts (\n    document_id TEXT,\n    draft_number TEXT,\n    draft_details TEXT,\n    FOREIGN KEY (document_id) REFERENCES Documents (document_id)\n);\nCREATE TABLE Draft_Copies (\n    document_id TEXT,\n    draft_number TEXT,\n    copy_number INT,\n    FOREIGN KEY (document_id) REFERENCES Documents (document_id)\n);\nCREATE TABLE Circulation_History (\n    document_id TEXT,\n    draft_number TEXT,\n    copy_number INT,\n    employee_id TEXT,\n    FOREIGN KEY (document_id) REFERENCES Documents (document_id),\n    FOREIGN KEY (employee_id) REFERENCES Employees (employee_id)\n);\nCREATE TABLE Documents_Mailed (\n    document_id TEXT,\n    mailed_to_address_id TEXT,\n    mailing_date TIME,\n    FOREIGN KEY (document_id) REFERENCES Documents (document_id),\n    FOREIGN KEY (mailed_to_address_id) REFERENCES Addresses (address_id)\n);"
    },
    {
        "db_id": "tracking_share_transactions",
        "schema": "CREATE TABLE Investors (\n    investor_id TEXT PRIMARY KEY,\n    Investor_details TEXT\n);\nCREATE TABLE Lots (\n    lot_id INT,\n    investor_id TEXT,\n    lot_details TEXT,\n    FOREIGN KEY (investor_id) REFERENCES Investors (investor_id)\n);\nCREATE TABLE Ref_Transaction_Types (\n    transaction_type_code TEXT PRIMARY KEY,\n    transaction_type_description TEXT\n);\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    investor_id TEXT,\n    transaction_type_code TEXT,\n    date_of_transaction TIME,\n    amount_of_transaction DECIMAL,\n    share_count INT,\n    other_details TEXT,\n    FOREIGN KEY (investor_id) REFERENCES Investors (investor_id),\n    FOREIGN KEY (transaction_type_code) REFERENCES Ref_Transaction_Types (transaction_type_code)\n);\nCREATE TABLE Sales (\n    sales_transaction_id INT PRIMARY KEY,\n    sales_details TEXT\n);\nCREATE TABLE Purchases (\n    purchase_transaction_id INT PRIMARY KEY,\n    purchase_details TEXT\n);\nCREATE TABLE Transactions_Lots (\n    transaction_id INT,\n    lot_id INT,\n    FOREIGN KEY (transaction_id) REFERENCES Transactions (transaction_id),\n    FOREIGN KEY (lot_id) REFERENCES Lots (lot_id)\n);"
    },
    {
        "db_id": "apartment_rentals",
        "schema": "CREATE TABLE Apartment_Buildings (\n    building_id TEXT PRIMARY KEY,\n    building_short_name TEXT,\n    building_full_name TEXT,\n    building_description TEXT,\n    building_address TEXT,\n    building_manager TEXT,\n    building_phone TEXT\n);\nCREATE TABLE Apartments (\n    apt_id INT,\n    building_id TEXT,\n    apt_type_code TEXT,\n    apt_number INT,\n    bathroom_count INT,\n    bedroom_count INT,\n    room_count INT,\n    FOREIGN KEY (building_id) REFERENCES Apartment_Buildings (building_id)\n);\nCREATE TABLE Apartment_Facilities (\n    apt_id INT,\n    facility_code TEXT,\n    FOREIGN KEY (apt_id) REFERENCES Apartments (apt_id)\n);\nCREATE TABLE Guests (\n    guest_id INT PRIMARY KEY,\n    gender_code TEXT,\n    guest_first_name TEXT,\n    guest_last_name TEXT,\n    date_of_birth TIME\n);\nCREATE TABLE Apartment_Bookings (\n    apt_booking_id INT,\n    apt_id INT,\n    guest_id INT,\n    booking_status_code TEXT,\n    booking_start_date TIME,\n    booking_end_date TIME,\n    FOREIGN KEY (apt_id) REFERENCES Apartments (apt_id),\n    FOREIGN KEY (guest_id) REFERENCES Guests (guest_id)\n);\nCREATE TABLE View_Unit_Status (\n    apt_id INT,\n    apt_booking_id INT,\n    status_date TIME,\n    available_yn TEXT,\n    FOREIGN KEY (apt_id) REFERENCES Apartments (apt_id),\n    FOREIGN KEY (apt_booking_id) REFERENCES Apartment_Bookings (apt_booking_id)\n);"
    },
    {
        "db_id": "student_transcripts_tracking",
        "schema": "CREATE TABLE Addresses (\n    address_id TEXT PRIMARY KEY,\n    line_1 TEXT,\n    line_2 TEXT,\n    line_3 TEXT,\n    city TEXT,\n    zip_postcode TEXT,\n    state_province_county TEXT,\n    country TEXT,\n    other_address_details TEXT\n);\nCREATE TABLE Courses (\n    course_id INT PRIMARY KEY,\n    course_name TEXT,\n    course_description TEXT,\n    other_details TEXT\n);\nCREATE TABLE Departments (\n    department_id INT PRIMARY KEY,\n    department_name TEXT,\n    department_description TEXT,\n    other_details TEXT\n);\nCREATE TABLE Degree_Programs (\n    degree_program_id INT PRIMARY KEY,\n    department_id INT,\n    degree_summary_name TEXT,\n    degree_summary_description TEXT,\n    other_details TEXT,\n    FOREIGN KEY (department_id) REFERENCES Departments (department_id)\n);\nCREATE TABLE Sections (\n    section_id INT PRIMARY KEY,\n    course_id INT,\n    section_name TEXT,\n    section_description TEXT,\n    other_details TEXT,\n    FOREIGN KEY (course_id) REFERENCES Courses (course_id)\n);\nCREATE TABLE Semesters (\n    semester_id INT PRIMARY KEY,\n    semester_name TEXT,\n    semester_description TEXT,\n    other_details TEXT\n);\nCREATE TABLE Students (\n    student_id INT PRIMARY KEY,\n    current_address_id TEXT,\n    permanent_address_id TEXT,\n    first_name TEXT,\n    middle_name TEXT,\n    last_name TEXT,\n    cell_mobile_number TEXT,\n    email_address TEXT,\n    ssn TEXT,\n    date_first_registered TIME,\n    date_left TIME,\n    other_student_details TEXT,\n    FOREIGN KEY (current_address_id) REFERENCES Addresses (address_id),\n    FOREIGN KEY (permanent_address_id) REFERENCES Addresses (address_id)\n);\nCREATE TABLE Student_Enrolment (\n    student_enrolment_id INT PRIMARY KEY,\n    degree_program_id INT,\n    semester_id INT,\n    student_id INT,\n    other_details TEXT,\n    FOREIGN KEY (degree_program_id) REFERENCES Degree_Programs (degree_program_id),\n    FOREIGN KEY (semester_id) REFERENCES Semesters (semester_id),\n    FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\nCREATE TABLE Student_Enrolment_Courses (\n    student_course_id INT,\n    course_id INT,\n    student_enrolment_id INT,\n    FOREIGN KEY (course_id) REFERENCES Courses (course_id),\n    FOREIGN KEY (student_enrolment_id) REFERENCES Student_Enrolment (student_enrolment_id)\n);\nCREATE TABLE Transcripts (\n    transcript_id INT PRIMARY KEY,\n    transcript_date TIME,\n    other_details TEXT\n);\nCREATE TABLE Transcript_Contents (\n    student_course_id INT,\n    transcript_id INT,\n    FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses (student_course_id),\n    FOREIGN KEY (transcript_id) REFERENCES Transcripts (transcript_id)\n);"
    },
    {
        "db_id": "cre_Docs_and_Epenses",
        "schema": "CREATE TABLE Ref_Document_Types (\n    Document_Type_Code TEXT PRIMARY KEY,\n    Document_Type_Name TEXT,\n    Document_Type_Description TEXT\n);\nCREATE TABLE Ref_Budget_Codes (\n    Budget_Type_Code TEXT PRIMARY KEY,\n    Budget_Type_Description TEXT\n);\nCREATE TABLE Projects (\n    Project_ID INT PRIMARY KEY,\n    Project_Details TEXT\n);\nCREATE TABLE Documents (\n    Document_ID INT PRIMARY KEY,\n    Document_Type_Code TEXT,\n    Project_ID INT,\n    Document_Date TIME,\n    Document_Name TEXT,\n    Document_Description TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Document_Type_Code) REFERENCES Ref_Document_Types (Document_Type_Code),\n    FOREIGN KEY (Project_ID) REFERENCES Projects (Project_ID)\n);\nCREATE TABLE Statements (\n    Statement_ID INT PRIMARY KEY,\n    Statement_Details TEXT\n);\nCREATE TABLE Documents_with_Expenses (\n    Document_ID INT,\n    Budget_Type_Code TEXT,\n    Document_Details TEXT,\n    FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID),\n    FOREIGN KEY (Budget_Type_Code) REFERENCES Ref_Budget_Codes (Budget_Type_Code)\n);\nCREATE TABLE Accounts (\n    Account_ID INT PRIMARY KEY,\n    Statement_ID INT,\n    Account_Details TEXT,\n    FOREIGN KEY (Statement_ID) REFERENCES Statements (Statement_ID)\n);"
    },
    {
        "db_id": "ship_mission",
        "schema": "CREATE TABLE mission (\n    Mission_ID INT PRIMARY KEY,\n    Ship_ID INT,\n    Code TEXT,\n    Launched_Year TEXT,\n    Location TEXT,\n    Speed_knots DECIMAL,\n    Fate TEXT,\n    FOREIGN KEY (Ship_ID) REFERENCES ship (Ship_ID)\n);\nCREATE TABLE ship (\n    Ship_ID INT PRIMARY KEY,\n    Name TEXT,\n    Type TEXT,\n    Nationality TEXT,\n    Tonnage DECIMAL\n);"
    },
    {
        "db_id": "company_office",
        "schema": "CREATE TABLE buildings (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    City TEXT,\n    Height TEXT,\n    Stories TEXT,\n    Status TEXT\n);\nCREATE TABLE Companies (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    Headquarters TEXT,\n    Industry TEXT,\n    Sales_billion TEXT,\n    Profits_billion TEXT,\n    Assets_billion TEXT,\n    Market_Value_billion TEXT\n);\nCREATE TABLE Office_locations (\n    building_id TEXT,\n    company_id TEXT,\n    move_in_year TEXT,\n    FOREIGN KEY (building_id) REFERENCES buildings (id),\n    FOREIGN KEY (company_id) REFERENCES Companies (id)\n);"
    },
    {
        "db_id": "tracking_software_problems",
        "schema": "CREATE TABLE Problem_Category_Codes (\n    problem_category_code TEXT PRIMARY KEY,\n    problem_category_description TEXT\n);\nCREATE TABLE Problem_Log (\n    problem_log_id INT PRIMARY KEY,\n    assigned_to_staff_id INT,\n    problem_id INT,\n    problem_category_code TEXT,\n    problem_status_code TEXT,\n    log_entry_date TIME,\n    log_entry_description TEXT,\n    log_entry_fix TEXT,\n    other_log_details TEXT,\n    FOREIGN KEY (problem_category_code) REFERENCES Problem_Category_Codes (problem_category_code)\n);\nCREATE TABLE Problem_Status_Codes (\n    problem_status_code TEXT PRIMARY KEY,\n    problem_status_description TEXT\n);\nCREATE TABLE Product (\n    product_id INT PRIMARY KEY,\n    product_name TEXT,\n    product_details TEXT\n);\nCREATE TABLE Staff (\n    staff_id INT PRIMARY KEY,\n    staff_first_name TEXT,\n    staff_last_name TEXT,\n    other_staff_details TEXT\n);\nCREATE TABLE Problems (\n    problem_id INT,\n    product_id INT,\n    closure_authorised_by_staff_id INT,\n    reported_by_staff_id INT,\n    date_problem_reported TIME,\n    date_problem_closed TIME,\n    problem_description TEXT,\n    other_problem_details TEXT,\n    FOREIGN KEY (problem_id) REFERENCES Problem_Log (problem_log_id),\n    FOREIGN KEY (product_id) REFERENCES Product (product_id),\n    FOREIGN KEY (closure_authorised_by_staff_id) REFERENCES Staff (staff_id),\n    FOREIGN KEY (reported_by_staff_id) REFERENCES Staff (staff_id)\n);"
    },
    {
       "db_id": "products_gen_characteristics",
        "schema": "CREATE TABLE Ref_Characteristic_Types (\n    characteristic_type_code TEXT PRIMARY KEY,\n    characteristic_type_description TEXT\n);\nCREATE TABLE Ref_Colors (\n    color_code TEXT PRIMARY KEY,\n    color_description TEXT\n);\nCREATE TABLE Ref_Product_Categories (\n    product_category_code TEXT PRIMARY KEY,\n    product_category_description TEXT,\n    unit_of_measure TEXT\n);\nCREATE TABLE Characteristics (\n    characteristic_id INT PRIMARY KEY,\n    characteristic_type_code TEXT,\n    characteristic_data_type TEXT,\n    characteristic_name TEXT,\n    other_characteristic_details TEXT,\n    FOREIGN KEY (characteristic_type_code) REFERENCES Ref_Characteristic_Types (characteristic_type_code)\n);\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    color_code TEXT,\n    product_category_code TEXT,\n    product_name TEXT,\n    typical_buying_price DECIMAL,\n    typical_selling_price DECIMAL,\n    product_description TEXT,\n    other_product_details TEXT,\n    FOREIGN KEY (color_code) REFERENCES Ref_Colors (color_code),\n    FOREIGN KEY (product_category_code) REFERENCES Ref_Product_Categories (product_category_code)\n);\nCREATE TABLE Product_Characteristics (\n    product_id INT,\n    characteristic_id INT,\n    product_characteristic_value TEXT,\n    FOREIGN KEY (product_id) REFERENCES Products (product_id),\n    FOREIGN KEY (characteristic_id) REFERENCES Characteristics (characteristic_id)\n);"
    },
    {
        "db_id": "coffee_shop",
        "schema": "CREATE TABLE shop (\n    Shop_ID INT PRIMARY KEY,\n    Address TEXT,\n    Num_of_staff INT,\n    Score INT,\n    Open_Year TEXT\n);\nCREATE TABLE member (\n    Member_ID INT PRIMARY KEY,\n    Name TEXT,\n    Membership_card TEXT,\n    Age INT,\n    Time_of_purchase TIME,\n    Level_of_membership TEXT,\n    Address TEXT\n);\nCREATE TABLE happy_hour (\n    HH_ID INT PRIMARY KEY,\n    Shop_ID INT,\n    Month TEXT,\n    Num_of_shaff_in_charge INT,\n    FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID)\n);\nCREATE TABLE happy_hour_member (\n    HH_ID INT,\n    Member_ID INT,\n    Total_amount DECIMAL,\n    FOREIGN KEY (HH_ID) REFERENCES happy_hour (HH_ID),\n    FOREIGN KEY (Member_ID) REFERENCES member (Member_ID)\n);"
    },
    {
        "db_id": "riding_club",
        "schema": "CREATE TABLE player (\n    Player_ID INT PRIMARY KEY,\n    Sponsor_name TEXT,\n    Player_name TEXT,\n    Gender TEXT,\n    Residence TEXT,\n    Occupation TEXT,\n    Votes INT,\n    Rank INT\n);\nCREATE TABLE club (\n    Club_ID INT PRIMARY KEY,\n    Club_name TEXT,\n    Region TEXT,\n    Start_year INT\n);\nCREATE TABLE coach (\n    Coach_ID INT PRIMARY KEY,\n    Coach_name TEXT,\n    Gender TEXT,\n    Club_ID INT,\n    Rank INT,\n    FOREIGN KEY (Club_ID) REFERENCES club (Club_ID)\n);\nCREATE TABLE player_coach (\n    Player_ID INT,\n    Coach_ID INT,\n    Starting_year INT,\n    FOREIGN KEY (Player_ID) REFERENCES player (Player_ID),\n    FOREIGN KEY (Coach_ID) REFERENCES coach (Coach_ID)\n);\nCREATE TABLE match_result (\n    Rank INT,\n    Club_ID INT,\n    Gold INT,\n    Big_Silver INT,\n    Small_Silver INT,\n    Bronze INT,\n    Points INT,\n    FOREIGN KEY (Club_ID) REFERENCES club (Club_ID)\n);"
    },
    {
        "db_id": "customers_card_transactions",
        "schema": "CREATE TABLE Accounts (\n    account_id TEXT PRIMARY KEY,\n    customer_id INT,\n    account_name TEXT,\n    other_account_details TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_first_name TEXT,\n    customer_last_name TEXT,\n    customer_address TEXT,\n    customer_phone TEXT,\n    customer_email TEXT,\n    other_customer_details TEXT\n);\nCREATE TABLE Customers_Cards (\n    card_id INT PRIMARY KEY,\n    customer_id INT,\n    card_type_code TEXT,\n    card_number TEXT,\n    date_valid_from TIME,\n    date_valid_to TIME,\n    other_card_details TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\nCREATE TABLE Financial_Transactions (\n    transaction_id INT PRIMARY KEY,\n    previous_transaction_id INT,\n    account_id TEXT,\n    card_id INT,\n    transaction_type TEXT,\n    transaction_date TIME,\n    transaction_amount DECIMAL,\n    transaction_comment TEXT,\n    other_transaction_details TEXT,\n    FOREIGN KEY (account_id) REFERENCES Accounts (account_id),\n    FOREIGN KEY (card_id) REFERENCES Customers_Cards (card_id)\n);"
    },
    {
        "db_id": "county_public_safety",
        "schema": "CREATE TABLE county_public_safety (\n    County_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Population INT,\n    Police_officers INT,\n    Residents_per_officer INT,\n    Case_burden INT,\n    Crime_rate INT,\n    Police_force INT,\n    Location TEXT\n);\nCREATE TABLE city (\n    City_ID INT PRIMARY KEY,\n    County_ID TEXT,\n    Name TEXT,\n    White INT,\n    Black INT,\n    Amerindian INT,\n    Asian INT,\n    Multiracial INT,\n    Hispanic INT,\n    FOREIGN KEY (County_ID) REFERENCES county_public_safety (County_ID)\n);"
    },
    {
        "db_id": "performance_attendance",
        "schema": "CREATE TABLE member (\n    Member_ID TEXT PRIMARY KEY,\n    Name TEXT,\n    Nationality TEXT,\n    Role TEXT\n);\nCREATE TABLE performance (\n    Performance_ID INT PRIMARY KEY,\n    Date TEXT,\n    Host TEXT,\n    Location TEXT,\n    Attendance INT\n);\nCREATE TABLE member_attendance (\n    Member_ID TEXT,\n    Performance_ID INT,\n    Num_of_Pieces INT,\n    FOREIGN KEY (Member_ID) REFERENCES member (Member_ID),\n    FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);"
    },
    {
        "db_id": "club_1",
        "schema": "CREATE TABLE Student (\n    StuID INT PRIMARY KEY,\n    LName TEXT,\n    Fname TEXT,\n    Age INT,\n    Sex TEXT,\n    Major TEXT,\n    Advisor INT,\n    city_code INT\n);\nCREATE TABLE Club (\n    ClubID INT PRIMARY KEY,\n    ClubName TEXT,\n    ClubDesc TEXT,\n    ClubLocation TEXT\n);\nCREATE TABLE Member_of_club (\n    StuID INT,\n    ClubID INT,\n    Position TEXT,\n    FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    FOREIGN KEY (ClubID) REFERENCES Club (ClubID)\n);"
    },
    {
        "db_id": "singer",
        "schema": "CREATE TABLE singer (\n    Singer_ID INT PRIMARY KEY,\n    Name TEXT,\n    Birth_Year INT,\n    Net_Worth_Millions INT,\n    Citizenship TEXT\n);\nCREATE TABLE song (\n    Song_ID INT PRIMARY KEY,\n    Title TEXT,\n    Singer_ID INT,\n    Sales INT,\n    Highest_Position INT,\n    FOREIGN KEY (Singer_ID) REFERENCES singer (Singer_ID)\n);"
    },
    {
        "db_id": "culture_company",
        "schema": "CREATE TABLE book_club (\n    book_club_id TEXT PRIMARY KEY,\n    Year INT,\n    Author_or_Editor TEXT,\n    Book_Title TEXT,\n    Publisher TEXT,\n    Category TEXT,\n    Result TEXT\n);\nCREATE TABLE movie (\n    movie_id INT PRIMARY KEY,\n    Title TEXT,\n    Year INT,\n    Director TEXT,\n    Budget_million INT,\n    Gross_worldwide INT\n);\nCREATE TABLE culture_company (\n    Company_name TEXT,\n    Type TEXT,\n    Incorporated_in TEXT,\n    Group_Equity_Shareholding INT,\n    book_club_id TEXT,\n    movie_id INT,\n    FOREIGN KEY (book_club_id) REFERENCES book_club (book_club_id),\n    FOREIGN KEY (movie_id) REFERENCES movie (movie_id)\n);"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "schema": "CREATE TABLE Ref_Template_Types (\n    Template_Type_Code TEXT PRIMARY KEY,\n    Template_Type_Description TEXT\n);\nCREATE TABLE Templates (\n    Template_ID INT PRIMARY KEY,\n    Version_Number INT,\n    Template_Type_Code TEXT,\n    Date_Effective_From TIME,\n    Date_Effective_To TIME,\n    Template_Details TEXT,\n    FOREIGN KEY (Template_Type_Code) REFERENCES Ref_Template_Types (Template_Type_Code)\n);\nCREATE TABLE Documents (\n    Document_ID INT PRIMARY KEY,\n    Template_ID INT,\n    Document_Name TEXT,\n    Document_Description TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Template_ID) REFERENCES Templates (Template_ID)\n);\nCREATE TABLE Paragraphs (\n    Paragraph_ID INT PRIMARY KEY,\n    Document_ID INT,\n    Paragraph_Text TEXT,\n    Other_Details TEXT,\n    FOREIGN KEY (Document_ID) REFERENCES Documents (Document_ID)\n);"
    },
    {
        "db_id": "musical",
        "schema": "CREATE TABLE musical (\n    Musical_ID INT PRIMARY KEY,\n    Name TEXT,\n    Year INT,\n    Award TEXT,\n    Category TEXT,\n    Nominee TEXT,\n    Result TEXT\n);\nCREATE TABLE actor (\n    Actor_ID INT PRIMARY KEY,\n    Name TEXT,\n    Musical_ID INT,\n    Character TEXT,\n    Duration INT,\n    Age INT,\n    FOREIGN KEY (Musical_ID) REFERENCES musical (Musical_ID)\n);"
    },
    {
        "db_id": "world_1",
        "schema": "CREATE TABLE city (\n    id TEXT PRIMARY KEY,\n    name TEXT,\n    CountryCode TEXT,\n    District TEXT,\n    Population TEXT\n);\nCREATE TABLE sqlite_sequence (\n    name TEXT PRIMARY KEY,\n    seq TEXT\n);\nCREATE TABLE country (\n    Code TEXT PRIMARY KEY,\n    Name TEXT,\n    Continent TEXT,\n    Region TEXT,\n    SurfaceArea TEXT,\n    IndiepentYear TEXT,\n    Population TEXT,\n    LifeExpectancy TEXT,\n    GNP TEXT,\n    GNPOld TEXT,\n    LocalName TEXT,\n    GovernmentForm TEXT,\n    HeadOfState TEXT,\n    Capital INT,\n    Code2 TEXT\n);\nCREATE TABLE countrylanguage (\n    countrycode TEXT,\n    language TEXT,\n    is_official TEXT,\n    percentage INT,\n    FOREIGN KEY (countrycode) REFERENCES country (Code)\n);"
    },
    {
        "db_id": "device",
        "schema": "CREATE TABLE device (\n    Device_ID TEXT PRIMARY KEY,\n    Device TEXT,\n    Carrier TEXT,\n    Package_Version TEXT,\n    Applications TEXT,\n    Software_Platform TEXT\n);\nCREATE TABLE shop (\n    Shop_ID TEXT PRIMARY KEY,\n    Shop_Name TEXT,\n    Location TEXT,\n    Open_Date TIME,\n    Open_Year TEXT\n);\nCREATE TABLE stock (\n    Shop_ID TEXT,\n    Device_ID TEXT,\n    Quantity INT,\n    FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    FOREIGN KEY (Device_ID) REFERENCES device (Device_ID)\n);"
    },
    {
        "db_id": "tracking_grants_for_research",
        "schema": "CREATE TABLE Document_Types (\n    document_type_code TEXT PRIMARY KEY,\n    document_description TEXT\n);\nCREATE TABLE Documents (\n    document_id INT PRIMARY KEY,\n    document_type_code TEXT,\n    grant_id INT,\n    sent_date TIME,\n    response_received_date TIME,\n    other_details TEXT,\n    FOREIGN KEY (document_type_code) REFERENCES Document_Types (document_type_code)\n);\nCREATE TABLE Grants (\n    grant_id INT PRIMARY KEY,\n    organisation_id INT,\n    grant_amount DECIMAL,\n    grant_start_date TIME,\n    grant_end_date TIME,\n    other_details TEXT\n);\nCREATE TABLE Organisation_Types (\n    organisation_type TEXT PRIMARY KEY,\n    organisation_type_description TEXT\n);\nCREATE TABLE Organisations (\n    organisation_id INT PRIMARY KEY,\n    organisation_type TEXT,\n    organisation_details TEXT,\n    FOREIGN KEY (organisation_type) REFERENCES Organisation_Types (organisation_type)\n);\nCREATE TABLE Project_Outcomes (\n    project_id INT PRIMARY KEY,\n    outcome_code TEXT,\n    outcome_details TEXT\n);\nCREATE TABLE Project_Staff (\n    staff_id INT,\n    project_id INT,\n    role_code TEXT,\n    date_from TIME,\n    date_to TIME,\n    other_details TEXT,\n    FOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);\nCREATE TABLE Projects (\n    project_id INT PRIMARY KEY,\n    organisation_id INT,\n    project_details TEXT,\n    FOREIGN KEY (organisation_id) REFERENCES Organisations (organisation_id)\n);\nCREATE TABLE Research_Outcomes (\n    outcome_code TEXT PRIMARY KEY,\n    outcome_description TEXT\n);\nCREATE TABLE Research_Staff (\n    staff_id INT PRIMARY KEY,\n    employer_organisation_id INT,\n    staff_details TEXT,\n    FOREIGN KEY (employer_organisation_id) REFERENCES Organisations (organisation_id)\n);\nCREATE TABLE Staff_Roles (\n    role_code TEXT PRIMARY KEY,\n    role_description TEXT\n);\nCREATE TABLE Tasks (\n    task_id INT PRIMARY KEY,\n    project_id INT,\n    task_details TEXT,\n    eg_agree_objectives TEXT,\n    FOREIGN KEY (project_id) REFERENCES Projects (project_id)\n);"
    },
    {
        "db_id": "employee_hire_evaluation",
        "schema": "CREATE TABLE employee (\n    Employee_ID INT PRIMARY KEY,\n    Name TEXT,\n    Age INT,\n    City TEXT\n);\nCREATE TABLE shop (\n    Shop_ID INT PRIMARY KEY,\n    Name TEXT,\n    Location TEXT,\n    District TEXT,\n    Number_products INT,\n    Manager_name TEXT\n);\nCREATE TABLE hiring (\n    Shop_ID INT,\n    Employee_ID INT,\n    Start_from TEXT,\n    Is_full_time TEXT,\n    FOREIGN KEY (Shop_ID) REFERENCES shop (Shop_ID),\n    FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);\nCREATE TABLE evaluation (\n    Employee_ID INT,\n    Year_awarded INT,\n    Bonus DECIMAL,\n    FOREIGN KEY (Employee_ID) REFERENCES employee (Employee_ID)\n);"
    },
    {
        "db_id": "movie_1",
        "schema": "CREATE TABLE Movie (\n    mID INT PRIMARY KEY,\n    title TEXT,\n    year INT,\n    director TEXT\n);\nCREATE TABLE Reviewer (\n    rID INT PRIMARY KEY,\n    name TEXT\n);\nCREATE TABLE Rating (\n    rID INT,\n    mID INT,\n    stars INT,\n    ratingDate TIME,\n    FOREIGN KEY (rID) REFERENCES Reviewer (rID),\n    FOREIGN KEY (mID) REFERENCES Movie (mID)\n);"
    },
    {
        "db_id": "network_1",
        "schema": "CREATE TABLE Highschooler (\n    ID INT PRIMARY KEY,\n    name TEXT,\n    grade TEXT\n);\nCREATE TABLE Friend (\n    student_id INT,\n    friend_id INT,\n    FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    FOREIGN KEY (friend_id) REFERENCES Highschooler (ID)\n);\nCREATE TABLE Likes (\n    student_id INT,\n    liked_id INT,\n    FOREIGN KEY (student_id) REFERENCES Highschooler (ID),\n    FOREIGN KEY (liked_id) REFERENCES Highschooler (ID)\n);"
    },
    {
        "db_id": "poker_player",
        "schema": "CREATE TABLE poker_player (\n    Poker_Player_ID INT PRIMARY KEY,\n    People_ID INT,\n    Final_Table_Made INT,\n    Best_Finish INT,\n    Money_Rank INT,\n    Earnings INT,\n    FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\nCREATE TABLE people (\n    People_ID INT PRIMARY KEY,\n    Nationality TEXT,\n    Name TEXT,\n    Birth_Date TEXT,\n    Height INT\n);"
    },
    {
        "db_id": "program_share",
        "schema": "CREATE TABLE program (\n    Program_ID INT PRIMARY KEY,\n    Name TEXT,\n    Origin TEXT,\n    Launch TEXT,\n    Owner INT\n);\nCREATE TABLE channel (\n    Channel_ID INT PRIMARY KEY,\n    Name TEXT,\n    Owner INT,\n    Share_in_percent INT,\n    Rating_in_percent INT\n);\nCREATE TABLE broadcast (\n    Channel_ID INT,\n    Program_ID INT,\n    Time_of_day TEXT,\n    FOREIGN KEY (Channel_ID) REFERENCES channel (Channel_ID),\n    FOREIGN KEY (Program_ID) REFERENCES program (Program_ID)\n);\nCREATE TABLE broadcast_share (\n    Channel_ID INT,\n    Program_ID INT,\n    Date TEXT,\n    Share_in_percent INT,\n    FOREIGN KEY (Channel_ID) REFERENCES channel (Channel_ID),\n    FOREIGN KEY (Program_ID) REFERENCES program (Program_ID)\n);"
    },
    {
        "db_id": "aircraft",
        "schema": "CREATE TABLE pilot (\n    Pilot_Id INT PRIMARY KEY,\n    Name TEXT,\n    Age INT\n);\nCREATE TABLE aircraft (\n    Aircraft_ID INT PRIMARY KEY,\n    Aircraft TEXT,\n    Description TEXT,\n    Max_Gross_Weight TEXT,\n    Total_disk_area TEXT,\n    Max_disk_Loading TEXT\n);\nCREATE TABLE match (\n    Round INT,\n    Location TEXT,\n    Country TEXT,\n    Date TIME,\n    Fastest_Qualifying TEXT,\n    Winning_Pilot INT,\n    Winning_Aircraft INT,\n    FOREIGN KEY (Winning_Pilot) REFERENCES pilot (Pilot_Id),\n    FOREIGN KEY (Winning_Aircraft) REFERENCES aircraft (Aircraft_ID)\n);\nCREATE TABLE airport (\n    Airport_ID INT PRIMARY KEY,\n    Airport_Name TEXT,\n    Total_Passengers INT,\n    %_Change_2007 TEXT,\n    International_Passengers INT,\n    Domestic_Passengers INT,\n    Transit_Passengers INT,\n    Aircraft_Movements INT,\n    Freight_Metric_Tonnes INT\n);\nCREATE TABLE airport_aircraft (\n    ID INT PRIMARY KEY,\n    Airport_ID INT,\n    Aircraft_ID INT,\n    FOREIGN KEY (Airport_ID) REFERENCES airport (Airport_ID),\n    FOREIGN KEY (Aircraft_ID) REFERENCES aircraft (Aircraft_ID)\n);"
    },
    {        
        "db_id": "restaurant_1",
        "schema": "CREATE TABLE Student (\n    StuID INT PRIMARY KEY,\n    LName TEXT,\n    Fname TEXT,\n    Age INT,\n    Sex TEXT,\n    Major TEXT,\n    Advisor INT,\n    city_code INT\n);\nCREATE TABLE Restaurant (\n    ResID INT PRIMARY KEY,\n    ResName TEXT,\n    Address TEXT,\n    Rating INT\n);\nCREATE TABLE Type_Of_Restaurant (\n    ResTypeID INT PRIMARY KEY,\n    ResTypeName TEXT,\n    ResTypeDescription TEXT\n);\nCREATE TABLE Restaurant_Type (\n    StuID INT,\n    ResID INT,\n    Time TIME,\n    Spent INT,\n    FOREIGN KEY (StuID) REFERENCES Student (StuID),\n    FOREIGN KEY (ResID) REFERENCES Restaurant (ResID)\n);"
    },
    {
        "db_id": "customers_and_invoices",
        "schema": "CREATE TABLE Customers (\n    customer_id TEXT PRIMARY KEY,\n    customer_first_name TEXT,\n    customer_middle_initial TEXT,\n    customer_last_name TEXT,\n    gender TEXT,\n    email_address TEXT,\n    login_name TEXT,\n    login_password TEXT,\n    phone_number TEXT,\n    town_city TEXT,\n    state_county_province TEXT,\n    country TEXT\n);\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id TEXT,\n    date_order_placed TIME,\n    order_details TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\nCREATE TABLE Invoices (\n    invoice_number TEXT PRIMARY KEY,\n    order_id INT,\n    invoice_date TIME,\n    FOREIGN KEY (order_id) REFERENCES Orders (order_id)\n);\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    customer_id TEXT,\n    date_account_opened TIME,\n    account_name TEXT,\n    other_account_details TEXT,\n    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\nCREATE TABLE Product_Categories (\n    production_type_code TEXT PRIMARY KEY,\n    product_type_description TEXT,\n    vat_rating TEXT\n);\nCREATE TABLE Products (\n    product_id INT PRIMARY KEY,\n    parent_product_id INT,\n    production_type_code TEXT,\n    unit_price DECIMAL,\n    product_name TEXT,\n    product_color TEXT,\n    product_size TEXT,\n    FOREIGN KEY (production_type_code) REFERENCES Product_Categories (production_type_code)\n);\nCREATE TABLE Financial_Transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    invoice_number TEXT,\n    transaction_type TEXT,\n    transaction_date TIME,\n    transaction_amount DECIMAL,\n    transaction_comment TEXT,\n    other_transaction_details TEXT,\n    FOREIGN KEY (account_id) REFERENCES Accounts (account_id),\n    FOREIGN KEY (invoice_number) REFERENCES Invoices (invoice_number)\n);\nCREATE TABLE Order_Items (\n    order_item_id INT PRIMARY KEY,\n    order_id INT,\n    product_id INT,\n    product_quantity INT,\n    other_order_item_details TEXT,\n    FOREIGN KEY (order_id) REFERENCES Orders (order_id),\n    FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);\nCREATE TABLE Invoice_Line_Items (\n    order_item_id INT,\n    invoice_number TEXT,\n    product_id INT,\n    product_title TEXT,\n    product_quantity INT,\n    product_price DECIMAL,\n    derived_product_cost DECIMAL,\n    derived_vat_payable DECIMAL,\n    derived_total_cost DECIMAL,\n    FOREIGN KEY (order_item_id) REFERENCES Order_Items (order_item_id),\n    FOREIGN KEY (invoice_number) REFERENCES Invoices (invoice_number),\n    FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);"
    },
    {
        "db_id": "insurance_and_eClaims",
        "schema": "CREATE TABLE Customers (\n    Customer_ID TEXT PRIMARY KEY,\n    Customer_Details TEXT\n);\nCREATE TABLE Staff (\n    Staff_ID INT PRIMARY KEY,\n    Staff_Details TEXT\n);\nCREATE TABLE Policies (\n    Policy_ID INT PRIMARY KEY,\n    Customer_ID TEXT,\n    Policy_Type_Code TEXT,\n    Start_Date TIME,\n    End_Date TIME,\n    FOREIGN KEY (Customer_ID) REFERENCES Customers (Customer_ID)\n);\nCREATE TABLE Claim_Headers (\n    Claim_Header_ID INT PRIMARY KEY,\n    Claim_Status_Code TEXT,\n    Claim_Type_Code TEXT,\n    Policy_ID INT,\n    Date_of_Claim TIME,\n    Date_of_Settlement TIME,\n    Amount_Claimed DECIMAL,\n    Amount_Piad DECIMAL,\n    FOREIGN KEY (Policy_ID) REFERENCES Policies (Policy_ID)\n);\nCREATE TABLE Claims_Documents (\n    Claim_ID INT PRIMARY KEY,\n    Document_Type_Code TEXT,\n    Created_by_Staff_ID INT,\n    Created_Date TIME,\n    FOREIGN KEY (Created_by_Staff_ID) REFERENCES Staff (Staff_ID)\n);\nCREATE TABLE Claims_Processing_Stages (\n    Claim_Stage_ID INT PRIMARY KEY,\n    Next_Claim_Stage_ID INT,\n    Claim_Status_Name TEXT,\n    Claim_Status_Description TEXT\n);\nCREATE TABLE Claims_Processing (\n    Claim_Processing_ID INT PRIMARY KEY,\n    Claim_ID INT,\n    Claim_Outcome_Code TEXT,\n    Claim_Stage_ID INT,\n    Staff_ID INT,\n    FOREIGN KEY (Claim_ID) REFERENCES Claim_Headers (Claim_Header_ID),\n    FOREIGN KEY (Claim_Stage_ID) REFERENCES Claims_Processing_Stages (Claim_Stage_ID),\n    FOREIGN KEY (Staff_ID) REFERENCES Staff (Staff_ID)\n);"
    },
    {
        "db_id": "college_1",
        "schema": "CREATE TABLE CLASS (\n    CLASS_CODE TEXT,\n    CRS_CODE TEXT,\n    CLASS_SECTION TEXT,\n    CLASS_TIME TEXT,\n    CLASS_ROOM TEXT,\n    PROF_NUM TEXT,\n    PRIMARY KEY (CLASS_CODE)\n);\nCREATE TABLE COURSE (\n    CRS_CODE TEXT,\n    DEPT_CODE TEXT,\n    CRS_DESCRIPTION TEXT,\n    CRS_CREDIT TEXT,\n    PRIMARY KEY (CRS_CODE)\n);\nCREATE TABLE DEPARTMENT (\n    DEPT_CODE TEXT,\n    DEPT_NAME TEXT,\n    SCHOOL_CODE TEXT,\n    EMP_NUM TEXT,\n    DEPT_ADDRESS TEXT,\n    DEPT_EXTENSION TEXT,\n    PRIMARY KEY (DEPT_CODE)\n);\nCREATE TABLE EMPLOYEE (\n    EMP_NUM TEXT,\n    EMP_LNAME TEXT,\n    EMP_FNAME TEXT,\n    EMP_INITIAL TEXT,\n    EMP_JOBCODE TEXT,\n    EMP_HIREDATE TIME,\n    EMP_DOB TIME,\n    PRIMARY KEY (EMP_NUM)\n);\nCREATE TABLE ENROLL (\n    CLASS_CODE TEXT,\n    STU_NUM TEXT,\n    ENROLL_GRADE TEXT,\n    PRIMARY KEY (CLASS_CODE, STU_NUM),\n    FOREIGN KEY (CLASS_CODE) REFERENCES CLASS (CLASS_CODE)\n);\nCREATE TABLE PROFESSOR (\n    EMP_NUM TEXT,\n    DEPT_CODE TEXT,\n    PROF_OFFICE TEXT,\n    PROF_EXTENSION TEXT,\n    PROF_HIGH_DEGREE TEXT,\n    PRIMARY KEY (EMP_NUM),\n    FOREIGN KEY (DEPT_CODE) REFERENCES DEPARTMENT (DEPT_CODE)\n);\nCREATE TABLE STUDENT (\n    STU_NUM TEXT,\n    STU_LNAME TEXT,\n    STU_FNAME TEXT,\n    STU_INIT TEXT,\n    STU_DOB TIME,\n    STU_HRS INT,\n    STU_CLASS TEXT,\n    STU_GPA DECIMAL,\n    STU_TRANSFER TEXT,\n    DEPT_CODE TEXT,\n    STU_PHONE TEXT,\n    PROF_NUM TEXT,\n    PRIMARY KEY (STU_NUM),\n    FOREIGN KEY (DEPT_CODE) REFERENCES DEPARTMENT (DEPT_CODE)\n);"
    },
    {
        "db_id": "local_govt_mdm",
        "schema": "CREATE TABLE customer_master_index (\n  cmi_cross_ref_id INTEGER PRIMARY KEY,\n  master_customer_id INTEGER NOT NULL,\n  cmi_details TEXT\n);\n\nCREATE TABLE cmi_cross_references (\n  cmi_cross_reference_id INTEGER PRIMARY KEY,\n  master_customer_id INTEGER NOT NULL,\n  source_system_code INTEGER\n);\n\nCREATE TABLE council_tax (\n  council_tax_id TEXT PRIMARY KEY,\n  cmi_cross_reference_id INTEGER NOT NULL,\n  FOREIGN KEY (cmi_cross_reference_id) REFERENCES cmi_cross_references (cmi_cross_reference_id)\n);\n\nCREATE TABLE business_rates (\n  business_rates_id TEXT PRIMARY KEY,\n  cmi_cross_reference_id INTEGER NOT NULL,\n  FOREIGN KEY (cmi_cross_reference_id) REFERENCES cmi_cross_references (cmi_cross_reference_id)\n);\n\nCREATE TABLE benefits_overpayments (\n  council_tax_id TEXT,\n  cmi_cross_ref_id INTEGER,\n  FOREIGN KEY (cmi_cross_ref_id) REFERENCES cmi_cross_references (cmi_cross_reference_id)\n);\n\nCREATE TABLE parking_fines (\n  council_tax_id TEXT,\n  cmi_cross_reference_id INTEGER,\n  FOREIGN KEY (cmi_cross_reference_id) REFERENCES cmi_cross_references (cmi_cross_reference_id)\n);\n\nCREATE TABLE rent_arrears (\n  council_tax_id TEXT,\n  cmi_cross_reference_id INTEGER,\n  FOREIGN KEY (cmi_cross_reference_id) REFERENCES cmi_cross_references (cmi_cross_reference_id)\n);\n\nCREATE TABLE electoral_register (\n  electoral_register_id TEXT PRIMARY KEY,\n  cmi_cross_reference_id INTEGER NOT NULL,\n  FOREIGN KEY (cmi_cross_reference_id) REFERENCES cmi_cross_references (cmi_cross_reference_id)\n);\n"
      },
      {
        "db_id": "book_2",
        "schema": "CREATE TABLE publication (\n  publication_id TEXT PRIMARY KEY,\n  book_id INTEGER NOT NULL,\n  publisher TEXT,\n  publication_date TEXT,\n  price TEXT,\n  FOREIGN KEY (book_id) REFERENCES book (book_id)\n);\n\nCREATE TABLE book (\n  book_id INTEGER PRIMARY KEY,\n  title TEXT,\n  issues INTEGER,\n  writer TEXT\n);\n"
      },
      {
        "db_id": "hr_1",
        "schema": "CREATE TABLE regions (\n  region_id TEXT PRIMARY KEY,\n  region_name TEXT\n);\n\nCREATE TABLE countries (\n  country_id TEXT PRIMARY KEY,\n  country_name TEXT,\n  region_id TEXT,\n  FOREIGN KEY (region_id) REFERENCES regions (region_id)\n);\n\nCREATE TABLE departments (\n  department_id TEXT PRIMARY KEY,\n  department_name TEXT,\n  manager_id INTEGER,\n  location_id INTEGER\n);\n\nCREATE TABLE jobs (\n  job_id TEXT PRIMARY KEY,\n  job_title TEXT,\n  min_salary INTEGER,\n  max_salary INTEGER\n);\n\nCREATE TABLE employees (\n  employee_id TEXT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  phone_number TEXT,\n  hire_date TEXT,\n  job_id TEXT,\n  salary INTEGER,\n  commission_pct INTEGER,\n  manager_id INTEGER,\n  department_id TEXT,\n  FOREIGN KEY (job_id) REFERENCES jobs (job_id),\n  FOREIGN KEY (manager_id) REFERENCES employees (employee_id),\n  FOREIGN KEY (department_id) REFERENCES departments (department_id)\n);\n\nCREATE TABLE job_history (\n  employee_id TEXT,\n  start_date TEXT,\n  end_date TEXT,\n  job_id TEXT,\n  department_id TEXT,\n  FOREIGN KEY (employee_id) REFERENCES employees (employee_id),\n  FOREIGN KEY (job_id) REFERENCES jobs (job_id),\n  FOREIGN KEY (department_id) REFERENCES departments (department_id)\n);\n\nCREATE TABLE locations (\n  location_id TEXT PRIMARY KEY,\n  street_address TEXT,\n  postal_code TEXT,\n  city TEXT,\n  state_province TEXT,\n  country_id TEXT,\n  FOREIGN KEY (country_id) REFERENCES countries (country_id)\n);\n"
      },
      {
        "db_id": "soccer_1",
        "schema": "CREATE TABLE player_attributes (\n  id TEXT PRIMARY KEY,\n  player_fifa_api_id INTEGER,\n  player_api_id INTEGER,\n  date TEXT,\n  overall_rating INTEGER,\n  potential INTEGER,\n  preferred_foot TEXT,\n  attacking_work_rate TEXT,\n  defensive_work_rate TEXT,\n  crossing INTEGER,\n  finishing INTEGER,\n  heading_accuracy INTEGER,\n  short_passing INTEGER,\n  volleys INTEGER,\n  dribbling INTEGER,\n  curve INTEGER,\n  free_kick_accuracy INTEGER,\n  long_passing INTEGER,\n  ball_control INTEGER,\n  acceleration INTEGER,\n  sprint_speed INTEGER,\n  agility INTEGER,\n  reactions INTEGER,\n  balance INTEGER,\n  shot_power INTEGER,\n  jumping INTEGER,\n  stamina INTEGER,\n  strength INTEGER,\n  long_shots INTEGER,\n  aggression INTEGER,\n  interceptions INTEGER,\n  positioning INTEGER,\n  vision INTEGER,\n  penalties INTEGER,\n  marking INTEGER,\n  standing_tackle INTEGER,\n  sliding_tackle INTEGER,\n  gk_diving INTEGER,\n  gk_handling INTEGER,\n  gk_kicking INTEGER,\n  gk_positioning INTEGER,\n  gk_reflexes INTEGER\n);\n\nCREATE TABLE sqlite_sequence (\n  name TEXT PRIMARY KEY,\n  seq INTEGER\n);\n\nCREATE TABLE player (\n  id TEXT PRIMARY KEY,\n  player_api_id INTEGER,\n  player_name TEXT,\n  player_fifa_api_id INTEGER,\n  birthday TEXT,\n  height INTEGER,\n  weight INTEGER\n);\n\nCREATE TABLE league (\n  id TEXT PRIMARY KEY,\n  name TEXT\n);\n\nCREATE TABLE country (\n  id TEXT PRIMARY KEY,\n  name TEXT\n);\n\nCREATE TABLE team (\n  id TEXT PRIMARY KEY,\n  team_api_id INTEGER,\n  team_fifa_api_id INTEGER,\n  team_long_name TEXT,\n  team_short_name TEXT,\n  date TEXT,\n  buildup_play_speed INTEGER,\n  buildup_play_speed_class TEXT,\n  buildup_play_dribbling INTEGER,\n  buildup_play_dribbling_class TEXT,\n  buildup_play_passing INTEGER,\n  buildup_play_passing_class TEXT,\n  buildup_play_positioning_class TEXT,\n  chance_creation_passing INTEGER,\n  chance_creation_passing_class TEXT,\n  chance_creation_crossing INTEGER,\n  chance_creation_crossing_class TEXT,\n  chance_creation_shooting INTEGER,\n  chance_creation_shooting_class TEXT,\n  chance_creation_positioning_class TEXT,\n  defence_pressure INTEGER,\n  defence_pressure_class TEXT,\n  defence_aggression INTEGER,\n  defence_aggression_class TEXT,\n  defence_team_width INTEGER,\n  defence_team_width_class TEXT,\n  defence_defender_line_class TEXT\n);\n"
      },
      {
        "db_id": "sakila_1",
        "schema": "CREATE TABLE actor (\n  actor_id INTEGER PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  last_update TEXT\n);\n\nCREATE TABLE address (\n  address_id INTEGER PRIMARY KEY,\n  address TEXT,\n  address2 TEXT,\n  district TEXT,\n  city_id INTEGER,\n  postal_code TEXT,\n  phone TEXT,\n  last_update TEXT\n);\n\nCREATE TABLE category (\n  category_id INTEGER PRIMARY KEY,\n  name TEXT,\n  last_update TEXT\n);\n\nCREATE TABLE city (\n  city_id INTEGER PRIMARY KEY,\n  city TEXT,\n  country_id INTEGER,\n  last_update TEXT,\n  FOREIGN KEY (country_id) REFERENCES country (country_id)\n);\n\nCREATE TABLE country (\n  country_id INTEGER PRIMARY KEY,\n  country TEXT,\n  last_update TEXT\n);\n\nCREATE TABLE customer (\n  customer_id INTEGER PRIMARY KEY,\n  store_id INTEGER,\n  first_name TEXT,\n  last_name TEXT,\n  email TEXT,\n  address_id INTEGER,\n  active BOOLEAN,\n  create_date TEXT,\n  last_update TEXT\n);\n\nCREATE TABLE film (\n  film_id INTEGER PRIMARY KEY,\n  title TEXT,\n  description TEXT,\n  release_year TEXT,\n  language_id INTEGER,\n  original_language_id INTEGER,\n  rental_duration INTEGER,\n  rental_rate TEXT,\n  length INTEGER,\n  replacement_cost TEXT,\n  rating TEXT,\n  special_features TEXT,\n  last_update TEXT\n);\n\nCREATE TABLE film_actor (\n  actor_id INTEGER,\n  film_id INTEGER,\n  last_update TEXT,\n  FOREIGN KEY (actor_id) REFERENCES actor (actor_id),\n  FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE film_category (\n  film_id INTEGER,\n  category_id INTEGER,\n  last_update TEXT,\n  FOREIGN KEY (film_id) REFERENCES film (film_id),\n  FOREIGN KEY (category_id) REFERENCES category (category_id)\n);\n\nCREATE TABLE film_text (\n  film_id INTEGER,\n  title TEXT,\n  description TEXT,\n  FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE inventory (\n  inventory_id INTEGER PRIMARY KEY,\n  film_id INTEGER,\n  store_id INTEGER,\n  last_update TEXT,\n  FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE language (\n  language_id INTEGER PRIMARY KEY,\n  name TEXT,\n  last_update TEXT\n);\n\nCREATE TABLE payment (\n  payment_id INTEGER PRIMARY KEY,\n  customer_id INTEGER,\n  staff_id INTEGER,\n  rental_id INTEGER,\n  amount TEXT,\n  payment_date TEXT,\n  last_update TEXT,\n  FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n  FOREIGN KEY (staff_id) REFERENCES staff (staff_id),\n  FOREIGN KEY (rental_id) REFERENCES rental (rental_id)\n);\n\nCREATE TABLE rental (\n  rental_id INTEGER PRIMARY KEY,\n  rental_date TEXT,\n  inventory_id INTEGER,\n  customer_id INTEGER,\n  return_date TEXT,\n  staff_id INTEGER,\n  last_update TEXT,\n  FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),\n  FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n  FOREIGN KEY (staff_id) REFERENCES staff (staff_id)\n);\n\nCREATE TABLE staff (\n  staff_id INTEGER PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  address_id INTEGER,\n  picture TEXT,\n  email TEXT,\n  store_id INTEGER,\n  active BOOLEAN,\n  username TEXT,\n  password TEXT,\n  last_update TEXT\n);\n\nCREATE TABLE store (\n  store_id INTEGER PRIMARY KEY,\n  manager_staff_id INTEGER,\n  address_id INTEGER,\n  last_update TEXT,\n  FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id)\n);\n"
    },
    {
        "db_id": "real_estate_properties",
        "schema": "CREATE TABLE Ref_Feature_Types (\n  feature_type_code TEXT PRIMARY KEY,\n  feature_type_name TEXT\n);\n\nCREATE TABLE Ref_Property_Types (\n  property_type_code TEXT PRIMARY KEY,\n  property_type_description TEXT\n);\n\nCREATE TABLE Other_Available_Features (\n  feature_id TEXT PRIMARY KEY,\n  feature_type_code TEXT,\n  feature_name TEXT,\n  feature_description TEXT,\n  FOREIGN KEY (feature_type_code) REFERENCES Ref_Feature_Types (feature_type_code)\n);\n\nCREATE TABLE Properties (\n  property_id TEXT PRIMARY KEY,\n  property_type_code TEXT,\n  date_on_market TEXT,\n  date_sold TEXT,\n  property_name TEXT,\n  property_address TEXT,\n  room_count INTEGER,\n  vendor_requested_price INTEGER,\n  buyer_offered_price INTEGER,\n  agreed_selling_price INTEGER,\n  apt_feature_1 TEXT,\n  apt_feature_2 TEXT,\n  apt_feature_3 TEXT,\n  fld_feature_1 TEXT,\n  fld_feature_2 TEXT,\n  fld_feature_3 TEXT,\n  hse_feature_1 TEXT,\n  hse_feature_2 TEXT,\n  hse_feature_3 TEXT,\n  oth_feature_1 TEXT,\n  oth_feature_2 TEXT,\n  oth_feature_3 TEXT,\n  shp_feature_1 TEXT,\n  shp_feature_2 TEXT,\n  shp_feature_3 TEXT,\n  other_property_details TEXT\n);\n\nCREATE TABLE Other_Property_Features (\n  property_id TEXT,\n  feature_id TEXT,\n  property_feature_description TEXT,\n  FOREIGN KEY (property_id) REFERENCES Properties (property_id),\n  FOREIGN KEY (feature_id) REFERENCES Other_Available_Features (feature_id)\n);\n"
    },
    {
        "db_id": "college_3",
        "schema": "CREATE TABLE Student (\n  StuID TEXT PRIMARY KEY,\n  LName TEXT,\n  Fname TEXT,\n  Age INTEGER,\n  Sex TEXT,\n  Major TEXT,\n  Advisor TEXT,\n  city_code TEXT\n);\n\nCREATE TABLE Faculty (\n  FacID INTEGER PRIMARY KEY,\n  Lname TEXT,\n  Fname TEXT,\n  Rank TEXT,\n  Sex TEXT,\n  Phone TEXT,\n  Room TEXT,\n  Building TEXT\n);\n\nCREATE TABLE Department (\n  DNO INTEGER PRIMARY KEY,\n  Division TEXT,\n  DName TEXT,\n  Room TEXT,\n  Building TEXT,\n  DPhone TEXT\n);\n\nCREATE TABLE Member_of (\n  FacID INTEGER,\n  DNO INTEGER,\n  FOREIGN KEY (FacID) REFERENCES Faculty (FacID),\n  FOREIGN KEY (DNO) REFERENCES Department (DNO)\n);\n\nCREATE TABLE Course (\n  CID INTEGER PRIMARY KEY,\n  CName TEXT,\n  Credits INTEGER,\n  Instructor TEXT,\n  Days TEXT,\n  Hours TEXT,\n  DNO INTEGER,\n  FOREIGN KEY (DNO) REFERENCES Department (DNO)\n);\n\nCREATE TABLE Minor_in (\n  StuID TEXT,\n  DNO INTEGER,\n  FOREIGN KEY (StuID) REFERENCES Student (StuID),\n  FOREIGN KEY (DNO) REFERENCES Department (DNO)\n);\n\nCREATE TABLE Enrolled_in (\n  StuID TEXT,\n  CID INTEGER,\n  Grade TEXT,\n  FOREIGN KEY (StuID) REFERENCES Student (StuID),\n  FOREIGN KEY (CID) REFERENCES Course (CID)\n);\n\nCREATE TABLE Gradeconversion (\n  lettergrade TEXT PRIMARY KEY,\n  gradepoint INTEGER\n);\n"
    },
    {
        "db_id": "course_teach",
        "schema": "CREATE TABLE course (\n  Course_ID TEXT PRIMARY KEY,\n  Staring_Date INTEGER,\n  Course TEXT\n);\n\nCREATE TABLE teacher (\n  Teacher_ID INTEGER PRIMARY KEY,\n  Name TEXT,\n  Age INTEGER,\n  Hometown TEXT\n);\n\nCREATE TABLE course_arrange (\n  Course_ID TEXT,\n  Teacher_ID INTEGER,\n  Grade TEXT,\n  FOREIGN KEY (Course_ID) REFERENCES course (Course_ID),\n  FOREIGN KEY (Teacher_ID) REFERENCES teacher (Teacher_ID)\n);\n"
    },
    {
        "db_id": "roller_coaster",
        "schema": "CREATE TABLE roller_coaster (\n  Roller_Coaster_ID TEXT PRIMARY KEY,\n  Name TEXT,\n  Park TEXT,\n  Country_ID TEXT,\n  Length INTEGER,\n  Height INTEGER,\n  Speed INTEGER,\n  Opened TEXT,\n  Status TEXT,\n  FOREIGN KEY (Country_ID) REFERENCES country (Country_ID)\n);\n\nCREATE TABLE country (\n  Country_ID TEXT PRIMARY KEY,\n  Name TEXT,\n  Population INTEGER,\n  Area INTEGER,\n  Languages TEXT\n);\n"
    },
    {
        "db_id": "customer_deliveries",
        "schema": "CREATE TABLE Products (\n  product_id TEXT PRIMARY KEY,\n  product_name TEXT,\n  product_price INTEGER,\n  product_description TEXT\n);\n\nCREATE TABLE Addresses (\n  address_id INTEGER PRIMARY KEY,\n  address_details TEXT,\n  city TEXT,\n  zip_postcode TEXT,\n  state_province_county TEXT,\n  country TEXT\n);\n\nCREATE TABLE Customers (\n  customer_id TEXT PRIMARY KEY,\n  payment_method TEXT,\n  customer_name TEXT,\n  customer_phone TEXT,\n  customer_email TEXT,\n  date_became_customer TEXT,\n  address_id INTEGER,\n  FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Regular_Orders (\n  regular_order_id INTEGER PRIMARY KEY,\n  distributer_id INTEGER\n);\n\nCREATE TABLE Regular_Order_Products (\n  regular_order_id INTEGER,\n  product_id TEXT,\n  FOREIGN KEY (regular_order_id) REFERENCES Regular_Orders (regular_order_id),\n  FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);\n\nCREATE TABLE Actual_Orders (\n  actual_order_id INTEGER PRIMARY KEY,\n  order_status_code TEXT,\n  regular_order_id INTEGER,\n  actual_order_date TEXT,\n  FOREIGN KEY (regular_order_id) REFERENCES Regular_Orders (regular_order_id)\n);\n\nCREATE TABLE Actual_Order_Products (\n  actual_order_id INTEGER,\n  product_id TEXT,\n  FOREIGN KEY (actual_order_id) REFERENCES Actual_Orders (actual_order_id),\n  FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);\n\nCREATE TABLE Customer_Addresses (\n  customer_id TEXT,\n  address_id INTEGER,\n  date_from TEXT,\n  address_type TEXT,\n  date_to TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),\n  FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Delivery_Routes (\n  route_id INTEGER PRIMARY KEY,\n  route_name TEXT,\n  other_route_details TEXT\n);\n\nCREATE TABLE Delivery_Route_Locations (\n  location_code TEXT,\n  route_id INTEGER,\n  location_address_id INTEGER,\n  location_name TEXT,\n  FOREIGN KEY (route_id) REFERENCES Delivery_Routes (route_id),\n FOREIGN KEY (location_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Trucks (\n  truck_id INTEGER PRIMARY KEY,\n  truck_licence_number TEXT,\n  truck_details TEXT\n);\n\nCREATE TABLE Employees (\n  employee_id INTEGER PRIMARY KEY,\n  employee_address_id INTEGER,\n  employee_name TEXT,\n  employee_phone TEXT,\n  FOREIGN KEY (employee_address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Order_Deliveries (\n  location_code TEXT,\n  actual_order_id INTEGER,\n  delivery_status_code TEXT,\n  driver_employee_id INTEGER,\n  truck_id INTEGER,\n  delivery_date TEXT,\n  FOREIGN KEY (actual_order_id) REFERENCES Actual_Orders (actual_order_id),\n  FOREIGN KEY (driver_employee_id) REFERENCES Employees (employee_id),\n  FOREIGN KEY (truck_id) REFERENCES Trucks (truck_id),\n  FOREIGN KEY (location_code) REFERENCES Delivery_Route_Locations (location_code)\n);\n"
    },
    {
        "db_id": "game_injury",
        "schema": "CREATE TABLE stadium (\n  id TEXT PRIMARY KEY,\n  name TEXT,\n  Home_Games INTEGER,\n  Average_Attendance INTEGER,\n  Total_Attendance INTEGER,\n  Capacity_Percentage INTEGER\n);\n\nCREATE TABLE game (\n  id INTEGER PRIMARY KEY,\n  stadium_id INTEGER,\n  Season INTEGER,\n  Date INTEGER,\n  Home_team TEXT,\n  Away_team TEXT,\n  Score TEXT,\n  Competition TEXT,\n  FOREIGN KEY (stadium_id) REFERENCES stadium (id)\n);\n\nCREATE TABLE injury_accident (\n  game_id INTEGER,\n  id INTEGER PRIMARY KEY,\n  Player TEXT,\n  Injury TEXT,\n  Number_of_matches INTEGER,\n  Source TEXT,\n  FOREIGN KEY (game_id) REFERENCES game (id)\n);\n"
    },
    {
        "db_id": "school_finance",
        "schema": "CREATE TABLE School (\n  School_id TEXT PRIMARY KEY,\n  School_name TEXT,\n  Location TEXT,\n  Mascot TEXT,\n  Enrollment TEXT,\n  IHSAA_Class TEXT,\n  IHSAA_Football_Class TEXT,\n  County TEXT\n);\n\nCREATE TABLE budget (\n  School_id TEXT,\n  Year TEXT,\n  Budgeted INTEGER,\n  total_budget_percent_budgeted INTEGER,\n  Invested INTEGER,\n  total_budget_percent_invested INTEGER,\n  Budget_invested_percent INTEGER,\n  FOREIGN KEY (School_id) REFERENCES School (School_id)\n);\n\nCREATE TABLE endowment (\n  endowment_id INTEGER PRIMARY KEY,\n  School_id TEXT,\n  donator_name TEXT,\n  amount INTEGER,\n  FOREIGN KEY (School_id) REFERENCES School (School_id)\n);\n"
    },
    {
        "db_id": "scholar",
        "schema": "CREATE TABLE venue (\n  venueId TEXT PRIMARY KEY,\n  venueName TEXT\n);\n\nCREATE TABLE author (\n  authorId INTEGER PRIMARY KEY,\n  authorName TEXT\n);\n\nCREATE TABLE dataset (\n  datasetId INTEGER PRIMARY KEY,\n  datasetName TEXT\n);\n\nCREATE TABLE journal (\n  journalId INTEGER PRIMARY KEY,\n  journalName TEXT\n);\n\nCREATE TABLE keyphrase (\n  keyphraseId INTEGER PRIMARY KEY,\n  keyphraseName TEXT\n);\n\nCREATE TABLE paper (\n  paperId INTEGER PRIMARY KEY,\n  title TEXT,\n  venueId INTEGER,\n  year INTEGER,\n  numCiting INTEGER,\n  numCitedBy INTEGER,\n  journalId INTEGER,\n  FOREIGN KEY (venueId) REFERENCES venue (venueId),\n  FOREIGN KEY (journalId) REFERENCES journal (journalId)\n);\n\nCREATE TABLE cite (\n  citingPaperId INTEGER,\n  citedPaperId INTEGER,\n  FOREIGN KEY (citingPaperId) REFERENCES paper (paperId),\n  FOREIGN KEY (citedPaperId) REFERENCES paper (paperId)\n);\n\nCREATE TABLE paperDataset (\n  paperId INTEGER,\n  datasetId INTEGER,\n  FOREIGN KEY (paperId) REFERENCES paper (paperId),\n  FOREIGN KEY (datasetId) REFERENCES dataset (datasetId)\n);\n\nCREATE TABLE paperKeyphrase (\n  paperId INTEGER,\n  keyphraseId INTEGER,\n  FOREIGN KEY (paperId) REFERENCES paper (paperId),\n  FOREIGN KEY (keyphraseId) REFERENCES keyphrase (keyphraseId)\n);\n\nCREATE TABLE writes (\n  paperId INTEGER,\n  authorId INTEGER,\n  FOREIGN KEY (paperId) REFERENCES paper (paperId),\n  FOREIGN KEY (authorId) REFERENCES author (authorId)\n);\n"
    },
    {
        "db_id": "voter_1",
        "schema": "CREATE TABLE AREA_CODE_STATE (\n  area_code TEXT PRIMARY KEY,\n  state INTEGER\n);\n\nCREATE TABLE CONTESTANTS (\n  contestant_number INTEGER PRIMARY KEY,\n  contestant_name TEXT\n);\n\nCREATE TABLE VOTES (\n  vote_id INTEGER PRIMARY KEY,\n  phone_number INTEGER NOT NULL,\n  state INTEGER,\n  contestant_number INTEGER,\n  created TEXT,\n  FOREIGN KEY (contestant_number) REFERENCES CONTESTANTS (contestant_number),\n  FOREIGN KEY (state) REFERENCES AREA_CODE_STATE (area_code)\n);\n"
    },
    {
        "db_id": "match_season",
        "schema": "CREATE TABLE country (\n  Country_id TEXT PRIMARY KEY,\n  Country_name TEXT,\n  Capital TEXT,\n  Official_native_language TEXT\n);\n\nCREATE TABLE team (\n  Team_id INTEGER PRIMARY KEY,\n  Name TEXT\n);\n\nCREATE TABLE match_season (\n  Season INTEGER PRIMARY KEY,\n  Player TEXT,\n  Position TEXT,\n  Country TEXT,\n  Team TEXT,\n  Draft_Pick_Number INTEGER,\n  Draft_Class TEXT,\n  College TEXT,\n  FOREIGN KEY (Team) REFERENCES team (Team_id)\n);\n\nCREATE TABLE player (\n  Player_ID INTEGER PRIMARY KEY,\n  Player TEXT,\n  Years_Played INTEGER,\n  Total_WL TEXT,\n  Singles_WL TEXT,\n  Doubles_WL TEXT,\n  Team TEXT,\n  FOREIGN KEY (Team) REFERENCES team (Team_id)\n);\n"
    },
    {
        "db_id": "small_bank_1",
        "schema": "CREATE TABLE ACCOUNTS (\n  custid TEXT PRIMARY KEY,\n  name TEXT\n);\n\nCREATE TABLE SAVINGS (\n  custid INTEGER PRIMARY KEY,\n  balance INTEGER,\n  FOREIGN KEY (custid) REFERENCES ACCOUNTS (custid)\n);\n\nCREATE TABLE CHECKING (\n  custid INTEGER PRIMARY KEY,\n  balance INTEGER,\n  FOREIGN KEY (custid) REFERENCES ACCOUNTS (custid)\n);\n"
    },
    {
        "db_id": "wta_1",
        "schema": "CREATE TABLE players (\n  player_id TEXT PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  hand TEXT,\n  birth_date TEXT,\n  country_code TEXT\n);\n\nCREATE TABLE matches (\n  best_of TEXT,\n  draw_size INTEGER,\n  loser_age INTEGER,\n  loser_entry TEXT,\n  loser_hand TEXT,\n  loser_ht INTEGER,\n  loser_id TEXT,\n  loser_ioc TEXT,\n  loser_name TEXT,\n  loser_rank INTEGER,\n  loser_rank_points INTEGER,\n  loser_seed INTEGER,\n  match_num INTEGER,\n  minutes INTEGER,\n  round TEXT,\n  score TEXT,\n  surface TEXT,\n  tourney_date TEXT,\n  tourney_id TEXT,\n  tourney_level TEXT,\n  tourney_name TEXT,\n  winner_age INTEGER,\n  winner_entry TEXT,\n  winner_hand TEXT,\n  winner_ht INTEGER,\n  winner_id TEXT,\n  winner_ioc TEXT,\n  winner_name TEXT,\n  winner_rank INTEGER,\n  winner_rank_points INTEGER,\n  winner_seed INTEGER,\n  year INTEGER,\n  ranking_date TEXT,\n  ranking INTEGER,\n  player_id TEXT,\n  ranking_points INTEGER,\n  tours TEXT,\n  FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n\nCREATE TABLE rankings (\n  ranking_date TEXT,\n  ranking INTEGER,\n  player_id TEXT,\n  ranking_points INTEGER,\n  tours TEXT,\n  FOREIGN KEY (player_id) REFERENCES players (player_id)\n);\n"
    },
    {
        "db_id": "yelp",
        "schema": "CREATE TABLE business (\n  bid TEXT PRIMARY KEY,\n  business_id TEXT,\n  name TEXT,\n  full_address TEXT,\n  city TEXT,\n  latitude TEXT,\n  longitude TEXT,\n  review_count TEXT,\n  is_open TEXT,\n  rating TEXT,\n  state TEXT\n);\n\nCREATE TABLE category (\n  id INTEGER PRIMARY KEY,\n  business_id TEXT,\n  category_name TEXT,\n  FOREIGN KEY (business_id) REFERENCES business (business_id)\n);\n\nCREATE TABLE user (\n  uid INTEGER PRIMARY KEY,\n  user_id INTEGER,\n  name TEXT\n);\n\nCREATE TABLE check in (\n  cid INTEGER PRIMARY KEY,\n  business_id TEXT,\n  count INTEGER,\n  day TEXT,\n  FOREIGN KEY (business_id) REFERENCES business (business_id)\n);\n\nCREATE TABLE neighbourhood (\n  id INTEGER PRIMARY KEY,\n  business_id TEXT,\n  neighbourhood_name TEXT,\n  FOREIGN KEY (business_id) REFERENCES business (business_id)\n);\n\nCREATE TABLE review (\n  rid INTEGER PRIMARY KEY,\n  business_id TEXT,\n  user_id INTEGER,\n  rating INTEGER,\n  text TEXT,\n  year INTEGER,\n  month INTEGER,\n  FOREIGN KEY (business_id) REFERENCES business (business_id),\n  FOREIGN KEY (user_id) REFERENCES user (uid)\n);\n\nCREATE TABLE tip (\n  tip_id INTEGER PRIMARY KEY,\n  business_id TEXT,\n  text TEXT,\n  user_id INTEGER,\n  likes INTEGER,\n  year INTEGER,\n  month INTEGER,\n  FOREIGN KEY (business_id) REFERENCES business (business_id),\n  FOREIGN KEY (user_id) REFERENCES user (uid)\n);\n"
    },
    {
        "db_id": "student_1",
        "schema": "CREATE TABLE list (\n  LastName TEXT PRIMARY KEY,\n  FirstName TEXT,\n  Grade TEXT,\n  Classroom INTEGER\n);\n\nCREATE TABLE teachers (\n  LastName INTEGER PRIMARY KEY,\n  FirstName TEXT,\n  Classroom INTEGER\n);\n"
    },
    {
        "db_id": "manufacturer",
        "schema": "CREATE TABLE manufacturer (\n  Manufacturer_ID TEXT PRIMARY KEY,\n  Open_Year INTEGER,\n  Name TEXT,\n  Num_of_Factories INTEGER,\n  Num_of_Shops INTEGER\n);\n\nCREATE TABLE furniture (\n  Furniture_ID INTEGER PRIMARY KEY,\n  Name TEXT,\n  Num_of_Component INTEGER,\n  Market_Rate INTEGER\n);\n\nCREATE TABLE furniture_manufacte (\n  Manufacturer_ID TEXT,\n  Furniture_ID INTEGER,\n  Price_in_Dollar INTEGER,\n  FOREIGN KEY (Manufacturer_ID) REFERENCES manufacturer (Manufacturer_ID),\n  FOREIGN KEY (Furniture_ID) REFERENCES furniture (Furniture_ID)\n);\n"
    },
    {
        "db_id": "store_1",
        "schema": "CREATE TABLE artists (\n  id INTEGER PRIMARY KEY,\n  name TEXT,\n  seq INTEGER\n);\n\nCREATE TABLE sqlite_sequence (\n  name TEXT,\n  seq INTEGER\n);\n\nCREATE TABLE albums (\n  id INTEGER PRIMARY KEY,\n  title TEXT,\n  artist_id INTEGER\n);\n\nCREATE TABLE employees (\n  id INTEGER PRIMARY KEY,\n  last_name TEXT,\n  first_name TEXT,\n  title TEXT,\n  reports_to INTEGER,\n  birth_date TEXT,\n  hire_date TEXT,\n  address TEXT,\n  city TEXT,\n  state TEXT,\n  country TEXT,\n  postal_code TEXT,\n  phone TEXT,\n  fax TEXT,\n  email TEXT\n);\n\nCREATE TABLE customers (\n  id INTEGER PRIMARY KEY,\n  first_name TEXT,\n  last_name TEXT,\n  company TEXT,\n  address TEXT,\n  city TEXT,\n  state TEXT,\n  country TEXT,\n  postal_code TEXT,\n  phone TEXT,\n  fax TEXT,\n  email TEXT,\n  support_rep_id INTEGER\n);\n\nCREATE TABLE genres (\n  id INTEGER PRIMARY KEY,\n  name TEXT\n);\n\nCREATE TABLE invoices (\n  id INTEGER PRIMARY KEY,\n  invoice_date TEXT,\n  billing_address TEXT,\n  billing_city TEXT,\n  billing_state TEXT,\n  billing_country TEXT,\n  billing_postal_code TEXT,\n  total INTEGER\n);\n\nCREATE TABLE media_types (\n  id INTEGER PRIMARY KEY,\n  name TEXT\n);\n\nCREATE TABLE tracks (\n  id INTEGER PRIMARY KEY,\n  name TEXT,\n  album_id INTEGER,\n  media_type_id INTEGER,\n  genre_id INTEGER,\n  composer TEXT,\n  milliseconds INTEGER,\n  bytes INTEGER,\n  unit_price INTEGER,\n  FOREIGN KEY (album_id) REFERENCES albums (id),\n  FOREIGN KEY (media_type_id) REFERENCES media_types (id),\n  FOREIGN KEY (genre_id) REFERENCES genres (id)\n);\n\nCREATE TABLE invoice_lines (\n  id INTEGER PRIMARY KEY,\n  invoice_id INTEGER,\n  track_id INTEGER,\n  unit_price INTEGER,\n  quantity INTEGER,\n  FOREIGN KEY (invoice_id) REFERENCES invoices (id),\n  FOREIGN KEY (track_id) REFERENCES tracks (id)\n);\n\nCREATE TABLE playlists (\n  id INTEGER PRIMARY KEY,\n  name TEXT\n);\n\nCREATE TABLE playlist_tracks (\n  playlist_id INTEGER,\n  track_id INTEGER,\n  FOREIGN KEY (playlist_id) REFERENCES playlists (id),\n  FOREIGN KEY (track_id) REFERENCES tracks (id)\n);\n"
    },
    {
        "db_id": "train_station",
        "schema": "CREATE TABLE station (\n  Station_ID INTEGER PRIMARY KEY,\n  Name TEXT,\n  Annual_entry_exit INTEGER,\n  Annual_interchanges INTEGER,\n  Total_Passengers INTEGER,\n  Location TEXT,\n  Main_Services TEXT,\n  Number_of_Platforms INTEGER\n);\n\nCREATE TABLE train (\n  Train_ID INTEGER PRIMARY KEY,\n  Name TEXT,\n  Time TEXT,\n  Service TEXT\n);\n\nCREATE TABLE train_station (\n  Train_ID INTEGER,\n  Station_ID INTEGER,\n  FOREIGN KEY (Train_ID) REFERENCES train (Train_ID),\n  FOREIGN KEY (Station_ID) REFERENCES station (Station_ID)\n);\n"
    },
    {
        "db_id": "document_management",
        "schema": "CREATE TABLE Roles (\n  role_code TEXT PRIMARY KEY,\n  role_description TEXT\n);\n\nCREATE TABLE Users (\n  user_id INTEGER PRIMARY KEY,\n  role_code TEXT,\n  user_name TEXT,\n  user_login TEXT,\n  password TEXT,\n  FOREIGN KEY (role_code) REFERENCES Roles (role_code)\n);\n\nCREATE TABLE Document_Structures (\n  document_structure_code TEXT PRIMARY KEY,\n  parent_document_structure_code TEXT,\n  document_structure_description TEXT\n);\n\nCREATE TABLE Functional_Areas (\n  functional_area_code TEXT PRIMARY KEY,\n  parent_functional_area_code TEXT,\n  functional_area_description TEXT\n);\n\nCREATE TABLE Images (\n  image_id INTEGER PRIMARY KEY,\n  image_alt_text TEXT,\n  image_name TEXT,\n  image_url TEXT\n);\n\nCREATE TABLE Documents (\n  document_code TEXT PRIMARY KEY,\n  document_structure_code TEXT,\n  document_type_code TEXT,\n  access_count INTEGER,\n  document_name TEXT,\n  FOREIGN KEY (document_structure_code) REFERENCES Document_Structures (document_structure_code)\n);\n\nCREATE TABLE Document_Functional_Areas (\n  document_code TEXT,\n  functional_area_code TEXT,\n  FOREIGN KEY (document_code) REFERENCES Documents (document_code),\n  FOREIGN KEY (functional_area_code) REFERENCES Functional_Areas (functional_area_code)\n);\n\nCREATE TABLE Document_Sections (\n  section_id INTEGER PRIMARY KEY,\n  document_code TEXT,\n  section_sequence INTEGER,\n  section_code TEXT,\n  section_title TEXT,\n  FOREIGN KEY (document_code) REFERENCES Documents (document_code)\n);\n\nCREATE TABLE Document_Sections_Images (\n  section_id INTEGER,\n  image_id INTEGER,\n  FOREIGN KEY (section_id) REFERENCES Document_Sections (section_id),\n  FOREIGN KEY (image_id) REFERENCES Images (image_id)\n);\n"
    },
    {
        "db_id": "formula_1",
        "schema": "CREATE TABLE circuits (\n  circuitId TEXT PRIMARY KEY,\n  circuitRef TEXT,\n  name TEXT,\n  location TEXT,\n  country TEXT,\n  lat TEXT,\n  lng TEXT,\n  alt TEXT,\n  url TEXT\n);\n\nCREATE TABLE races (\n  raceId INTEGER PRIMARY KEY,\n  year INTEGER,\n  round INTEGER,\n  circuitId TEXT,\n  name TEXT,\n  date TEXT,\n  time TEXT,\n  url TEXT,\n  FOREIGN KEY (circuitId) REFERENCES circuits (circuitId)\n);\n\nCREATE TABLE drivers (\n  driverId TEXT PRIMARY KEY,\n  driverRef TEXT,\n  number INTEGER,\n  code TEXT,\n  forename TEXT,\n  surname TEXT,\n  dob TEXT,\n  nationality TEXT,\n  url TEXT\n);\n\nCREATE TABLE status (\n  statusId INTEGER PRIMARY KEY,\n  status TEXT\n);\n\nCREATE TABLE seasons (\n  year INTEGER PRIMARY KEY,\n  url TEXT\n);\n\nCREATE TABLE constructors (\n  constructorId TEXT PRIMARY KEY,\n  constructorRef TEXT,\n  name TEXT,\n  nationality TEXT,\n  url TEXT\n);\n\nCREATE TABLE constructorStandings (\n  constructorStandingsId INTEGER PRIMARY KEY,\n  raceId INTEGER,\n  constructorId TEXT,\n  points INTEGER,\n  position INTEGER,\n  positionText TEXT,\n  wins INTEGER,\n  FOREIGN KEY (raceId) REFERENCES races (raceId),\n  FOREIGN KEY (constructorId) REFERENCES constructors (constructorId)\n);\n\nCREATE TABLE results (\n  resultId INTEGER PRIMARY KEY,\n  raceId INTEGER,\n  driverId TEXT,\n  constructorId TEXT,\n  number INTEGER,\n  grid INTEGER,\n  position INTEGER,\n  positionText TEXT,\n  positionOrder INTEGER,\n  points INTEGER,\n  laps INTEGER,\n  time TEXT,\n  milliseconds INTEGER,\n  fastestLap INTEGER,\n  rank INTEGER,\n  fastestLapTime TEXT,\n  fastestLapSpeed TEXT,\n  statusId INTEGER,\n  FOREIGN KEY (raceId) REFERENCES races (raceId),\n  FOREIGN KEY (driverId) REFERENCES drivers (driverId),\n  FOREIGN KEY (constructorId) REFERENCES constructors (constructorId),\n  FOREIGN KEY (statusId) REFERENCES status (statusId)\n);\n\nCREATE TABLE driverStandings (\n  driverStandingsId INTEGER PRIMARY KEY,\n  raceId INTEGER,\n  driverId TEXT,\n  points INTEGER,\n  position INTEGER,\n  positionText TEXT,\n  wins INTEGER,\n  FOREIGN KEY (raceId) REFERENCES races (raceId),\n  FOREIGN KEY (driverId) REFERENCES drivers (driverId)\n);\n\nCREATE TABLE constructorResults (\n  constructorResultsId INTEGER PRIMARY KEY,\n  raceId INTEGER,\n  constructorId TEXT,\n  points INTEGER,\n  status TEXT,\n  FOREIGN KEY (raceId) REFERENCES races (raceId),\n  FOREIGN KEY (constructorId) REFERENCES constructors (constructorId)\n);\n\nCREATE TABLE qualifying (\n  qualifyId INTEGER PRIMARY KEY,\n  raceId INTEGER,\n  driverId TEXT,\n  constructorId TEXT,\n  number INTEGER,\n  position INTEGER,\n  q1 TEXT,\n  q2 TEXT,\n  q3 TEXT,\n  FOREIGN KEY (raceId) REFERENCES races (raceId),\n  FOREIGN KEY (driverId) REFERENCES drivers (driverId),\n  FOREIGN KEY (constructorId) REFERENCES constructors (constructorId)\n);\n\nCREATE TABLE pitStops (\n  raceId INTEGER,\n  driverId TEXT,\n  stop INTEGER,\n  lap INTEGER,\n  time TEXT,\n  duration TEXT,\n  milliseconds INTEGER,\n  FOREIGN KEY (raceId) REFERENCES races (raceId),\n  FOREIGN KEY (driverId) REFERENCES drivers (driverId)\n);\n\nCREATE TABLE lapTimes (\n  raceId INTEGER,\n  driverId TEXT,\n  lap INTEGER,\n  position INTEGER,\n  time TEXT,\n  milliseconds INTEGER,\n  FOREIGN KEY (raceId) REFERENCES races (raceId),\n  FOREIGN KEY (driverId) REFERENCES drivers (driverId)\n);\n"
    },
    {
        "db_id": "game_1",
        "schema": "CREATE TABLE Student (\n  StuID TEXT PRIMARY KEY,\n  LName TEXT,\n  Fname TEXT,\n  Age INTEGER,\n  Sex TEXT,\n  Major TEXT,\n  Advisor TEXT,\n  city_code TEXT\n);\n\nCREATE TABLE Video_Games (\n  GameID INTEGER PRIMARY KEY,\n  GName TEXT,\n  GType TEXT\n);\n\nCREATE TABLE Plays_Games (\n  StuID TEXT,\n  GameID INTEGER,\n  Hours_Played INTEGER,\n  FOREIGN KEY (StuID) REFERENCES Student (StuID),\n  FOREIGN KEY (GameID) REFERENCES Video_Games (GameID)\n);\n\nCREATE TABLE SportsInfo (\n  StuID TEXT,\n  SportName TEXT,\n  HoursPerWeek INTEGER,\n  GamesPlayed INTEGER,\n  OnScholarship TEXT,\n  FOREIGN KEY (StuID) REFERENCES Student (StuID)\n);\n"
    },
    {
        "db_id": "loan_1",
        "schema": "CREATE TABLE bank (\n  branch_ID INTEGER PRIMARY KEY,\n  bname TEXT,\n  no_of_customers INTEGER,\n  city TEXT,\n  state TEXT\n);\n\nCREATE TABLE customer (\n  cust_ID INTEGER PRIMARY KEY,\n  cust_name TEXT,\n  acc_type TEXT,\n  acc_bal TEXT,\n  no_of_loans INTEGER,\n  credit_score INTEGER,\n  branch_ID INTEGER,\n  state TEXT,\n  FOREIGN KEY (branch_ID) REFERENCES bank (branch_ID)\n);\n\nCREATE TABLE loan (\n  loan_ID INTEGER PRIMARY KEY,\n  loan_type TEXT,\n  cust_ID INTEGER,\n  branch_ID INTEGER,\n  amount INTEGER,\n  FOREIGN KEY (cust_ID) REFERENCES customer (cust_ID),\n  FOREIGN KEY (branch_ID) REFERENCES bank (branch_ID)\n);\n"
    },
    {
        "db_id": "bike_1",
        "schema": "CREATE TABLE station (\n  id TEXT PRIMARY KEY,\n  name TEXT,\n  lat REAL,\n  long REAL,\n  dock_count INTEGER,\n  city TEXT,\n  installation_date TEXT\n);\n\nCREATE TABLE status (\n  station_id TEXT,\n  bikes_available INTEGER,\n  docks_available INTEGER,\n  time TEXT,\n  FOREIGN KEY (station_id) REFERENCES station (id)\n);\n\nCREATE TABLE trip (\n  id INTEGER PRIMARY KEY,\n  duration INTEGER,\n  start_date TEXT,\n  start_station_name TEXT,\n  start_station_id TEXT,\n  end_date TEXT,\n  end_station_name TEXT,\n  end_station_id TEXT,\n  bike_id TEXT,\n  subscription_type TEXT,\n  zip_code TEXT\n);\n\nCREATE TABLE weather (\n  date TEXT,\n  max_temperature_f REAL,\n  mean_temperature_f REAL,\n  min_temperature_f REAL,\n  max_dew_point_f REAL,\n  mean_dew_point_f REAL,\n  min_dew_point_f REAL,\n  max_humidity INTEGER,\n  mean_humidity INTEGER,\n  min_humidity INTEGER,\n  max_sea_level_pressure_inches REAL,\n  mean_sea_level_pressure_inches REAL,\n  min_sea_level_pressure_inches REAL,\n  max_visibility_miles REAL,\n  mean_visibility_miles REAL,\n  min_visibility_miles REAL,\n  max_wind_Speed_mph REAL,\n  mean_wind_speed_mph REAL,\n  max_gust_speed_mph REAL,\n  precipitation_inches REAL,\n  cloud_cover REAL,\n  events TEXT,\n  wind_dir_degrees REAL,\n  zip_code TEXT\n);\n"
    },
    {
        "db_id": "entrepreneur",
        "schema": "CREATE TABLE entrepreneur (\n  Entrepreneur_ID TEXT PRIMARY KEY,\n  People_ID INTEGER,\n  Company TEXT,\n  Money_Requested REAL,\n  Investor TEXT,\n  FOREIGN KEY (People_ID) REFERENCES people (People_ID)\n);\n\nCREATE TABLE people (\n  People_ID INTEGER PRIMARY KEY,\n  Name TEXT,\n  Height REAL,\n  Weight TEXT,\n  Date_of_Birth TEXT\n);\n"
    },
    {
        "db_id": "orchestra",
        "schema": "CREATE TABLE conductor (\n  Conductor_ID INTEGER PRIMARY KEY,\n  Name TEXT,\n  Age INTEGER,\n  Nationality TEXT,\n  Year_of_Work TEXT\n);\n\nCREATE TABLE orchestra (\n  Orchestra_ID INTEGER PRIMARY KEY,\n  Orchestra TEXT,\n  Conductor_ID INTEGER,\n  Record_Company TEXT,\n  Year_of_Founded INTEGER,\n  Major_Record_Format TEXT,\n  FOREIGN KEY (Conductor_ID) REFERENCES conductor (Conductor_ID)\n);\n\nCREATE TABLE performance (\n  Performance_ID INTEGER PRIMARY KEY,\n  Orchestra_ID INTEGER,\n  Type TEXT,\n  Date TEXT,\n  Official_ratings_(millions) REAL,\n  Weekly_rank INTEGER,\n  Share REAL,\n  FOREIGN KEY (Orchestra_ID) REFERENCES orchestra (Orchestra_ID)\n);\n\nCREATE TABLE show (\n  Show_ID INTEGER PRIMARY KEY,\n  Performance_ID INTEGER,\n  If_first_show TEXT,\n  Result TEXT,\n  Attendance INTEGER,\n  FOREIGN KEY (Performance_ID) REFERENCES performance (Performance_ID)\n);\n"
    },
    {
        "db_id": "cre_Drama_Workshop_Groups",
        "schema": "CREATE TABLE Ref_Payment_Methods (\n  payment_method_code TEXT PRIMARY KEY,\n  payment_method_description TEXT\n);\n\nCREATE TABLE Ref_Service_Types (\n  Service_Type_Code TEXT PRIMARY KEY,\n  Parent_Service_Type_Code TEXT,\n  Service_Type_Description TEXT\n);\n\nCREATE TABLE Addresses (\n  Address_ID TEXT PRIMARY KEY,\n  Line_1 TEXT,\n  Line_2 TEXT,\n  City_Town TEXT,\n  State_County TEXT,\n  Other_Details TEXT\n);\n\nCREATE TABLE Products (\n  Product_ID TEXT PRIMARY KEY,\n  Product_Name TEXT,\n  Product_Price REAL,\n  Product_Description TEXT,\n  Other_Product_Service_Details TEXT\n);\n\nCREATE TABLE Marketing_Regions (\n  Marketing_Region_Code TEXT PRIMARY KEY,\n  Marketing_Region_Name TEXT,\n  Marketing_Region_Descriptrion TEXT,\n  Other_Details TEXT\n);\n\nCREATE TABLE Clients (\n  Client_ID TEXT PRIMARY KEY,\n  Address_ID TEXT,\n  Customer_Email_Address TEXT,\n  Customer_Name TEXT,\n  Customer_Phone TEXT,\n  Other_Details TEXT,\n  FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID)\n);\n\nCREATE TABLE Drama_Workshop_Groups (\n  Workshop_Group_ID TEXT PRIMARY KEY,\n  Address_ID TEXT,\n  Currency_Code TEXT,\n  Marketing_Region_Code TEXT,\n  Store_Name TEXT,\n  Store_Phone TEXT,\n  Store_Email_Address TEXT,\n  Other_Details TEXT,\n  FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID),\n  FOREIGN KEY (Marketing_Region_Code) REFERENCES Marketing_Regions (Marketing_Region_Code)\n);\n\nCREATE TABLE Performers (\n  Performer_ID TEXT PRIMARY KEY,\n  Address_ID TEXT,\n  Customer_Name TEXT,\n  Customer_Phone TEXT,\n  Customer_Email_Address TEXT,\n  Other_Details TEXT,\n  FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID)\n);\n\nCREATE TABLE Customers (\n  Customer_ID TEXT PRIMARY KEY,\n  Address_ID TEXT,\n  Customer_Name TEXT,\n  Customer_Phone TEXT,\n  Customer_Email_Address TEXT,\n  Other_Details TEXT,\n  FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID)\n);\n\nCREATE TABLE Stores (\n  Store_ID TEXT PRIMARY KEY,\n  Address_ID TEXT,\n  Marketing_Region_Code TEXT,\n  Store_Name TEXT,\n  Store_Phone TEXT,\n  Store_Email_Address TEXT,\n  Other_Details TEXT,\n  FOREIGN KEY (Address_ID) REFERENCES Addresses (Address_ID),\n  FOREIGN KEY (Marketing_Region_Code) REFERENCES Marketing_Regions (Marketing_Region_Code)\n);\n\nCREATE TABLE Bookings (\n  Booking_ID TEXT PRIMARY KEY,\n  Customer_ID TEXT,\n  Workshop_Group_ID TEXT,\n  Status_Code TEXT,\n  Store_ID TEXT,\n  Order_Date TEXT,\n  Planned_Delivery_Date TEXT,\n  Actual_Delivery_Date TEXT,\n  Other_Order_Details TEXT,\n  FOREIGN KEY (Customer_ID) REFERENCES Customers (Customer_ID),\n  FOREIGN KEY (Workshop_Group_ID) REFERENCES Drama_Workshop_Groups (Workshop_Group_ID),\n  FOREIGN KEY (Store_ID) REFERENCES Stores (Store_ID)\n);\n\nCREATE TABLE Performers_in_Bookings (\n  Order_ID TEXT,\n  Performer_ID TEXT,\n  FOREIGN KEY (Order_ID) REFERENCES Bookings (Booking_ID),\n  FOREIGN KEY (Performer_ID) REFERENCES Performers (Performer_ID)\n);\n\nCREATE TABLE Customer_Orders (\n  Order_ID TEXT PRIMARY KEY,\n  Customer_ID TEXT,\n  Store_ID TEXT,\n  Order_Date TEXT,\n  Planned_Delivery_Date TEXT,\n  Actual_Delivery_Date TEXT,\n  Other_Order_Details TEXT,\n  FOREIGN KEY (Customer_ID) REFERENCES Customers (Customer_ID),\n  FOREIGN KEY (Store_ID) REFERENCES Stores (Store_ID)\n);\n\nCREATE TABLE Order_Items (\n  Order_Item_ID TEXT PRIMARY KEY,\n  Order_ID TEXT,\n  Product_ID TEXT,\n  Order_Quantity INTEGER,\n  Other_Item_Details TEXT,\n  FOREIGN KEY (Order_ID) REFERENCES Customer_Orders (Order_ID),\n  FOREIGN KEY (Product_ID) REFERENCES Products (Product_ID)\n);\n\nCREATE TABLE Invoices (\n  Invoice_ID TEXT PRIMARY KEY,\n  Order_ID TEXT,\n  payment_method_code TEXT,\n  Product_ID TEXT,\n  Order_Quantity INTEGER,\n  Other_Item_Details TEXT,\n  Order_Item_ID TEXT,\n  FOREIGN KEY (Order_ID) REFERENCES Customer_Orders (Order_ID),\n  FOREIGN KEY (payment_method_code) REFERENCES Ref_Payment_Methods (payment_method_code),\n  FOREIGN KEY (Product_ID) REFERENCES Products (Product_ID),\n  FOREIGN KEY (Order_Item_ID) REFERENCES Order_Items (Order_Item_ID)\n);\n\nCREATE TABLE Services (\n  Service_ID TEXT PRIMARY KEY,\n  Service_Type_Code TEXT,\n  Workshop_Group_ID TEXT,\n  Product_Description TEXT,\n  Product_Name TEXT,\n  Product_Price REAL,\n  Other_Product_Service_Details TEXT,\n  FOREIGN KEY (Service_Type_Code) REFERENCES Ref_Service_Types (Service_Type_Code),\n  FOREIGN KEY (Workshop_Group_ID) REFERENCES Drama_Workshop_Groups (Workshop_Group_ID)\n);\n\nCREATE TABLE Bookings_Services (\n  Order_ID TEXT,\n  Product_ID TEXT,\n  FOREIGN KEY (Order_ID) REFERENCES Bookings (Booking_ID),\n  FOREIGN KEY (Product_ID) REFERENCES Services (Service_ID)\n);\n\nCREATE TABLE Invoice_Items (\n  Invoice_Item_ID TEXT PRIMARY KEY,\n  Invoice_ID TEXT,\n  Order_ID TEXT,\n  Order_Item_ID TEXT,\n  Product_ID TEXT,\n  Order_Quantity INTEGER,\n  Other_Item_Details TEXT,\n  FOREIGN KEY (Invoice_ID) REFERENCES Invoices (Invoice_ID),\n  FOREIGN KEY (Order_ID) REFERENCES Customer_Orders (Order_ID),\n  FOREIGN KEY (Order_Item_ID) REFERENCES Order_Items (Order_Item_ID),\n  FOREIGN KEY (Product_ID) REFERENCES Products (Product_ID)\n);\n"
    },
    {
        "db_id": "car_1",
        "schema": "CREATE TABLE continents (\n  ContId TEXT PRIMARY KEY,\n  Continent TEXT\n);\n\nCREATE TABLE countries (\n  CountryId INTEGER PRIMARY KEY,\n  CountryName TEXT,\n  Continent TEXT,\n  FOREIGN KEY (Continent) REFERENCES continents (ContId)\n);\n\nCREATE TABLE car_makers (\n  Id INTEGER PRIMARY KEY,\n  Maker TEXT,\n  FullName TEXT,\n  Country TEXT,\n  FOREIGN KEY (Country) REFERENCES countries (CountryId)\n);\n\nCREATE TABLE model_list (\n  ModelId INTEGER PRIMARY KEY,\n  Maker TEXT,\n  Model TEXT,\n  FOREIGN KEY (Maker) REFERENCES car_makers (Id)\n);\n\nCREATE TABLE car_names (\n  MakeId INTEGER PRIMARY KEY,\n  Model TEXT,\n  Make TEXT,\n  FOREIGN KEY (Model) REFERENCES model_list (ModelId)\n);\n\nCREATE TABLE cars_data (\n  Id INTEGER PRIMARY KEY,\n  MPG REAL,\n  Cylinders INTEGER,\n  Edispl TEXT,\n  Horsepower INTEGER,\n  Weight INTEGER,\n  Accelerate REAL,\n  Year INTEGER,\n  FOREIGN KEY (MakeId) REFERENCES car_names (MakeId),\n  FOREIGN KEY (Model) REFERENCES model_list (ModelId)\n);\n"
    },
    {
        "db_id": "geo",
        "schema": "CREATE TABLE state (\n  state_name TEXT PRIMARY KEY,\n  population TEXT,\n  area TEXT,\n  country_name TEXT,\n  capital TEXT,\n  density TEXT\n);\n\nCREATE TABLE city (\n  city_name TEXT,\n  population TEXT,\n  country_name TEXT,\n  state_name TEXT,\n  FOREIGN KEY (state_name) REFERENCES state (state_name)\n);\n\nCREATE TABLE border_info (\n  state_name TEXT PRIMARY KEY,\n  border TEXT,\n  FOREIGN KEY (state_name) REFERENCES state (state_name)\n);\n\nCREATE TABLE highlow (\n  state_name TEXT PRIMARY KEY,\n  highest_elevation TEXT,\n  lowest_point TEXT,\n  highest_point TEXT,\n  lowest_elevation TEXT,\n  FOREIGN KEY (state_name) REFERENCES state (state_name)\n);\n\nCREATE TABLE lake (\n  lake_name TEXT PRIMARY KEY,\n  area TEXT,\n  country_name TEXT,\n  state_name TEXT,\n  FOREIGN KEY (state_name) REFERENCES state (state_name)\n);\n\nCREATE TABLE mountain (\n  mountain_name TEXT PRIMARY KEY,\n  mountain_altitude TEXT,\n  country_name TEXT,\n  state_name TEXT,\n  FOREIGN KEY (state_name) REFERENCES state (state_name)\n);\n\nCREATE TABLE river (\n  river_name TEXT PRIMARY KEY,\n  length TEXT,\n  country_name TEXT,\n  traverse TEXT,\n  FOREIGN KEY (state_name) REFERENCES state (state_name)\n);\n"
    },
    {
        "db_id": "behavior_monitoring",
        "schema": "CREATE TABLE Ref_Address_Types (\n  address_type_code TEXT PRIMARY KEY,\n  address_type_description TEXT\n);\n\nCREATE TABLE Ref_Detention_Type (\n  detention_type_code TEXT PRIMARY KEY,\n  detention_type_description TEXT\n);\n\nCREATE TABLE Ref_Incident_Type (\n  incident_type_code TEXT PRIMARY KEY,\n  incident_type_description TEXT\n);\n\nCREATE TABLE Addresses (\n  address_id INTEGER PRIMARY KEY,\n  line_1 TEXT,\n  line_2 TEXT,\n  line_3 TEXT,\n  city TEXT,\n  zip_postcode TEXT,\n  state_province_county TEXT,\n  country TEXT,\n  other_address_details TEXT\n);\n\nCREATE TABLE Students (\n  student_id INTEGER PRIMARY KEY,\n  address_id INTEGER,\n  first_name TEXT,\n  middle_name TEXT,\n  last_name TEXT,\n  cell_mobile_number TEXT,\n  email_address TEXT,\n  date_first_rental TEXT,\n  date_left_university TEXT,\n  other_student_details TEXT,\n  FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Teachers (\n  teacher_id INTEGER PRIMARY KEY,\n  address_id INTEGER,\n  first_name TEXT,\n  middle_name TEXT,\n  last_name TEXT,\n  gender TEXT,\n  cell_mobile_number TEXT,\n  email_address TEXT,\n  other_details TEXT,\n  FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Assessment_Notes (\n  notes_id INTEGER PRIMARY KEY,\n  student_id INTEGER,\n  teacher_id INTEGER,\n  date_of_notes TEXT,\n  text_of_notes TEXT,\n  other_details TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students (student_id),\n  FOREIGN KEY (teacher_id) REFERENCES Teachers (teacher_id)\n);\n\nCREATE TABLE Behavior_Incident (\n  incident_id INTEGER PRIMARY KEY,\n  incident_type_code TEXT,\n  student_id INTEGER,\n  date_incident_start TEXT,\n  date_incident_end TEXT,\n  incident_summary TEXT,\n  recommendations TEXT,\n  other_details TEXT,\n  FOREIGN KEY (incident_type_code) REFERENCES Ref_Incident_Type (incident_type_code),\n  FOREIGN KEY (student_id) REFERENCES Students (student_id)\n);\n\nCREATE TABLE Detention (\n  detention_id INTEGER PRIMARY KEY,\n  detention_type_code TEXT,\n  teacher_id INTEGER,\n  datetime_detention_start TEXT,\n  datetime_detention_end TEXT,\n  detention_summary TEXT,\n  other_details TEXT,\n  FOREIGN KEY (detention_type_code) REFERENCES Ref_Detention_Type (detention_type_code),\n  FOREIGN KEY (teacher_id) REFERENCES Teachers (teacher_id)\n);\n\nCREATE TABLE Student_Addresses (\n  student_id INTEGER,\n  address_id INTEGER,\n  date_address_from TEXT,\n  date_address_to TEXT,\n  monthly_rental REAL,\n  other_details TEXT,\n  FOREIGN KEY (student_id) REFERENCES Students (student_id),\n  FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Students_in_Detention (\n  student_id INTEGER,\n  detention_id INTEGER,\n  incident_id INTEGER,\n  FOREIGN KEY (student_id) REFERENCES Students (student_id),\n  FOREIGN KEY (detention_id) REFERENCES Detention (detention_id),\n  FOREIGN KEY (incident_id) REFERENCES Behavior_Incident (incident_id)\n);\n"
    },
    {
        "db_id": "cre_Doc_Tracking_DB",
        "schema": "CREATE TABLE Ref_Document_Types (\n  Document_Type_Code TEXT PRIMARY KEY,\n  Document_Type_Name TEXT,\n  Document_Type_Description TEXT\n);\n\nCREATE TABLE Ref_Calendar (\n  Calendar_Date TEXT PRIMARY KEY,\n  Day_Number INTEGER\n);\n\nCREATE TABLE Ref_Locations (\n  Location_Code TEXT PRIMARY KEY,\n  Location_Name TEXT,\n  Location_Description TEXT\n);\n\nCREATE TABLE Roles (\n  Role_Code TEXT PRIMARY KEY,\n  Role_Name TEXT,\n  Role_Description TEXT\n);\n\nCREATE TABLE All_Documents (\n  Document_ID INTEGER PRIMARY KEY,\n  Date_Stored TEXT,\n  Document_Type_Code TEXT,\n  Document_Name TEXT,\n  Document_Description TEXT,\n  Other_Details TEXT,\n  FOREIGN KEY (Document_Type_Code) REFERENCES Ref_Document_Types (Document_Type_Code)\n);\n\nCREATE TABLE Employees (\n  Employee_ID INTEGER PRIMARY KEY,\n  Role_Code TEXT,\n  Employee_Name TEXT,\n  Gender_MFU TEXT,\n  Date_of_Birth TEXT,\n  Other_Details TEXT,\n  FOREIGN KEY (Role_Code) REFERENCES Roles (Role_Code)\n);\n\nCREATE TABLE Document_Locations (\n  Document_ID INTEGER,\n  Location_Code TEXT,\n  Date_in_Location_From TEXT,\n  Date_in_Locaton_To TEXT,\n  FOREIGN KEY (Document_ID) REFERENCES All_Documents (Document_ID),\n  FOREIGN KEY (Location_Code) REFERENCES Ref_Locations (Location_Code)\n);\n\nCREATE TABLE Documents_to_be_Destroyed (\n  Document_ID INTEGER,\n  Destruction_Authorised_by_Employee_ID INTEGER,\n  Destroyed_by_Employee_ID INTEGER,\n  Planned_Destruction_Date TEXT,\n  Actual_Destruction_Date TEXT,\n  Other_Details TEXT,\n  FOREIGN KEY (Document_ID) REFERENCES All_Documents (Document_ID),\n  FOREIGN KEY (Destruction_Authorised_by_Employee_ID) REFERENCES Employees (Employee_ID),\n  FOREIGN KEY (Destroyed_by_Employee_ID) REFERENCES Employees (Employee_ID)\n);\n"
    },
    {
        "db_id": "university_basketball",
        "schema": "CREATE TABLE basketball_match (\n  Team_ID TEXT,\n  School_ID INTEGER,\n  Team_Name TEXT,\n  ACC_Regular_Season TEXT,\n  ACC_Percent TEXT,\n  ACC_Home TEXT,\n  ACC_Road TEXT,\n  All_Games TEXT,\n  All_Games_Percent TEXT,\n  All_Home TEXT,\n  All_Road TEXT,\n  All_Neutral TEXT,\n  FOREIGN KEY (School_ID) REFERENCES university (School_ID)\n);\n\nCREATE TABLE university (\n  School_ID INTEGER PRIMARY KEY,\n  School TEXT,\n  Location TEXT,\n  Founded TEXT,\n  Affiliation TEXT,\n  Enrollment INTEGER,\n  Nickname TEXT,\n  Primary_conference TEXT\n);\n"
    },
    {
        "db_id": "soccer_2",
        "schema": "CREATE TABLE College (\n  cName TEXT PRIMARY KEY,\n  state TEXT,\n  enr INTEGER\n);\n\nCREATE TABLE Player (\n  pID INTEGER PRIMARY KEY,\n  pName TEXT,\n  yCard TEXT,\n  HS INTEGER\n);\n\nCREATE TABLE Tryout (\n  pID INTEGER,\n  cName TEXT,\n  pPos TEXT,\n  decision TEXT,\n  FOREIGN KEY (pID) REFERENCES Player (pID),\n  FOREIGN KEY (cName) REFERENCES College (cName)\n);\n"
    },
    {
        "db_id": "activity_1",
        "schema": "CREATE TABLE Activity (\n  actid TEXT PRIMARY KEY,\n  activity_name TEXT\n);\n\nCREATE TABLE Participates_in (\n  stuid INTEGER,\n  actid TEXT,\n  FOREIGN KEY (actid) REFERENCES Activity (actid)\n);\n\nCREATE TABLE Faculty_Participates_in (\n  FacID INTEGER,\n  actid TEXT,\n  FOREIGN KEY (actid) REFERENCES Activity (actid)\n);\n\nCREATE TABLE Student (\n  StuID INTEGER PRIMARY KEY,\n  LName TEXT,\n  Fname TEXT,\n  Age INTEGER,\n  Sex TEXT,\n  Major TEXT,\n  Advisor TEXT,\n  city_code TEXT\n);\n\nCREATE TABLE Faculty (\n  FacID INTEGER PRIMARY KEY,\n  Lname TEXT,\n  Fname TEXT,\n  Rank TEXT,\n  Sex TEXT,\n  Phone TEXT,\n  Room TEXT,\n  Building TEXT\n);\n"
    },
    {
        "db_id": "cre_Theme_park",
        "schema": "CREATE TABLE Ref_Hotel_Star_Ratings (\n  star_rating_code TEXT PRIMARY KEY,\n  star_rating_description TEXT\n);\n\nCREATE TABLE Locations (\n  Location_ID INTEGER PRIMARY KEY,\n  Location_Name TEXT,\n  Address TEXT,\n  Other_Details TEXT\n);\n\nCREATE TABLE Ref_Attraction_Types (\n  attraction_type_code TEXT PRIMARY KEY,\n  attraction_type_description TEXT\n);\n\nCREATE TABLE Visitors (\n  Tourist_ID INTEGER PRIMARY KEY,\n  Tourist_Details TEXT\n);\n\nCREATE TABLE Features (\n  Feature_ID INTEGER PRIMARY KEY,\n  Feature_Details TEXT\n);\n\nCREATE TABLE Hotels (\n  hotel_id INTEGER PRIMARY KEY,\n  star_rating_code TEXT,\n  pets_allowed_yn TEXT,\n  price_range TEXT,\n  other_hotel_details TEXT,\n  FOREIGN KEY (star_rating_code) REFERENCES Ref_Hotel_Star_Ratings (star_rating_code)\n);\n\nCREATE TABLE Tourist_Attractions (\n  Tourist_Attraction_ID INTEGER PRIMARY KEY,\n  attraction_type_code TEXT,\n  Location_ID INTEGER,\n  How_to_Get_There TEXT,\n  Name TEXT,\n  Description TEXT,\n  Opening_Hours TEXT,\n  Other_Details TEXT,\n  FOREIGN KEY (attraction_type_code) REFERENCES Ref_Attraction_Types (attraction_type_code),\n  FOREIGN KEY (Location_ID) REFERENCES Locations (Location_ID)\n);\n\nCREATE TABLE Street_Markets (\n  Market_ID INTEGER PRIMARY KEY,\n  Market_Details TEXT\n);\n\nCREATE TABLE Shops (\n  Shop_ID INTEGER PRIMARY KEY,\n  Shop_Details TEXT\n);\n\nCREATE TABLE Museums (\n  Museum_ID INTEGER PRIMARY KEY,\n  Museum_Details TEXT\n);\n\nCREATE TABLE Royal_Family (\n  Royal_Family_ID INTEGER PRIMARY KEY,\n  Royal_Family_Details TEXT\n);\n\nCREATE TABLE Theme_Parks (\n  Theme_Park_ID INTEGER PRIMARY KEY,\n  Theme_Park_Details TEXT\n);\n\nCREATE TABLE Visits (\n  Visit_ID INTEGER PRIMARY KEY,\n  Tourist_Attraction_ID INTEGER,\n  Tourist_ID INTEGER,\n  Visit_Date TEXT,\n  Visit_Details TEXT,\n  FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID),\n  FOREIGN KEY (Tourist_ID) REFERENCES Visitors (Tourist_ID)\n);\n\nCREATE TABLE Photos (\n  Photo_ID INTEGER PRIMARY KEY,\n  Tourist_Attraction_ID INTEGER,\n  Name TEXT,\n  Description TEXT,\n  Filename TEXT,\n  Other_Details TEXT,\n  FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID)\n);\n\nCREATE TABLE Staff (\n  Staff_ID INTEGER PRIMARY KEY,\n  Tourist_Attraction_ID INTEGER,\n  Name TEXT,\n  Other_Details TEXT,\n  FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID)\n);\n\nCREATE TABLE Tourist_Attraction_Features (\n  Tourist_Attraction_ID INTEGER,\n  Feature_ID INTEGER,\n  FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions (Tourist_Attraction_ID),\n  FOREIGN KEY (Feature_ID) REFERENCES Features (Feature_ID)\n);\n"
    },
    {
        "db_id": "twitter_1",
        "schema": "CREATE TABLE follows (\n  f1 TEXT,\n  f2 INTEGER,\n  FOREIGN KEY (f2) REFERENCES user_profiles (uid),\n  FOREIGN KEY (f1) REFERENCES user_profiles (uid)\n);\n\nCREATE TABLE tweets (\n  id INTEGER PRIMARY KEY,\n  uid INTEGER,\n  text TEXT,\n  createdate TEXT,\n  FOREIGN KEY (uid) REFERENCES user_profiles (uid)\n);\n\nCREATE TABLE user_profiles (\n  uid INTEGER PRIMARY KEY,\n  name TEXT,\n  email TEXT,\n  partitionid INTEGER,\n  followers INTEGER\n);\n"
    },
    {
        "db_id": "election_representative",
        "schema": "CREATE TABLE election (\n  Election_ID TEXT PRIMARY KEY,\n  Representative_ID INTEGER,\n  Date TEXT,\n  Votes INTEGER,\n  Vote_Percent REAL,\n  Seats INTEGER,\n  Place TEXT,\n  FOREIGN KEY (Representative_ID) REFERENCES representative (Representative_ID)\n);\n\nCREATE TABLE representative (\n  Representative_ID INTEGER PRIMARY KEY,\n  Name TEXT,\n  State TEXT,\n  Party TEXT,\n  Lifespan TEXT\n);\n"
    },
    {
        "db_id": "voter_2",
        "schema": "CREATE TABLE Student (\n  StuID TEXT PRIMARY KEY,\n  LName TEXT,\n  Fname TEXT,\n  Age INTEGER,\n  Sex TEXT,\n  Major TEXT,\n  Advisor TEXT,\n  city_code TEXT\n);\n\nCREATE TABLE Voting_record (\n  StuID TEXT,\n  Registration_Date TEXT,\n  Election_Cycle TEXT,\n  President_Vote INTEGER,\n  Vice_President_Vote INTEGER,\n  Secretary_Vote INTEGER,\n  Treasurer_Vote INTEGER,\n  Class_President_Vote INTEGER,\n  Class_Senator_Vote INTEGER,\n  FOREIGN KEY (StuID) REFERENCES Student (StuID)\n);\n"
    },
    {
        "db_id": "wedding",
        "schema": "CREATE TABLE people (\n  People_ID INTEGER PRIMARY KEY,\n  Name TEXT,\n  Country TEXT,\n  Is_Male TEXT,\n  Age INTEGER\n);\n\nCREATE TABLE church (\n  Church_ID INTEGER PRIMARY KEY,\n  Name TEXT,\n  Organized_by TEXT,\n  Open_Date TEXT,\n  Continuation_of TEXT\n);\n\nCREATE TABLE wedding (\n  Church_ID INTEGER,\n  Male_ID INTEGER,\n  Female_ID INTEGER,\n  Year INTEGER,\n  FOREIGN KEY (Church_ID) REFERENCES church (Church_ID),\n  FOREIGN KEY (Male_ID) REFERENCES people (People_ID),\n  FOREIGN KEY (Female_ID) REFERENCES people (People_ID)\n);\n"
    },
    {
        "db_id": "news_report",
        "schema": "CREATE TABLE event (\n  Event_ID TEXT PRIMARY KEY,\n  Date INTEGER,\n  Venue TEXT,\n  Name TEXT,\n  Event_Attendance TEXT\n);\n\nCREATE TABLE journalist (\n  journalist_ID INTEGER PRIMARY KEY,\n  Name TEXT,\n  Nationality TEXT,\n  Age INTEGER,\n  Years_working INTEGER\n);\n\nCREATE TABLE news_report (\n  journalist_ID INTEGER,\n  Event_ID TEXT,\n  Work_Type TEXT,\n  FOREIGN KEY (journalist_ID) REFERENCES journalist (journalist_ID),\n  FOREIGN KEY (Event_ID) REFERENCES event (Event_ID)\n);\n"
    },
    {
        "db_id": "wine_1",
        "schema": "CREATE TABLE grapes (\n  ID TEXT PRIMARY KEY,\n  Grape TEXT,\n  Color TEXT\n);\n\nCREATE TABLE appellations (\n  No INTEGER PRIMARY KEY,\n  Appelation TEXT,\n  County TEXT,\n  State TEXT,\n  Area INTEGER,\n  isAVA TEXT\n);\n\nCREATE TABLE wine (\n  No INTEGER,\n  Grape TEXT,\n  Winery TEXT,\n  Appelation TEXT,\n  State TEXT,\n  Name TEXT,\n  Year INTEGER,\n  Price REAL,\n  Score INTEGER,\n  Cases INTEGER,\n  Drink TEXT,\n  FOREIGN KEY (No) REFERENCES grapes (ID),\n  FOREIGN KEY (Appelation) REFERENCES appellations (No)\n);\n"
    },
    {
        "db_id": "customers_and_addresses",
        "schema": "CREATE TABLE Addresses (\n  address_id TEXT PRIMARY KEY,\n  address_content TEXT,\n  city TEXT,\n  zip_postcode TEXT,\n  state_province_county TEXT,\n  country TEXT,\n  other_address_details TEXT\n);\n\nCREATE TABLE Products (\n  product_id TEXT PRIMARY KEY,\n  product_details TEXT\n);\n\nCREATE TABLE Customers (\n  customer_id TEXT PRIMARY KEY,\n  payment_method TEXT,\n  customer_name TEXT,\n  date_became_customer TEXT,\n  other_customer_details TEXT\n);\n\nCREATE TABLE Customer_Addresses (\n  customer_id TEXT,\n  address_id TEXT,\n  date_address_from TEXT,\n  address_type TEXT,\n  date_address_to TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),\n  FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Customer_Contact_Channels (\n  customer_id TEXT,\n  channel_code TEXT,\n  active_from_date TEXT,\n  active_to_date TEXT,\n  contact_number TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\n\nCREATE TABLE Customer_Orders (\n  order_id TEXT PRIMARY KEY,\n  customer_id TEXT,\n  order_status TEXT,\n  order_date TEXT,\n  order_details TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\n\nCREATE TABLE Order_Items (\n  order_id TEXT,\n  product_id TEXT,\n  order_quantity INTEGER,\n  FOREIGN KEY (order_id) REFERENCES Customer_Orders (order_id),\n  FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);\n"
    },
    {
        "db_id": "protein_institute",
        "schema": "CREATE TABLE building (\n  building_id TEXT PRIMARY KEY,\n  Name TEXT,\n  Street_address TEXT,\n  Years_as_tallest TEXT,\n  Height_feet TEXT,\n  Floors INTEGER\n);\n\nCREATE TABLE Institution (\n  Institution_id INTEGER PRIMARY KEY,\n  Institution TEXT,\n  Location TEXT,\n  Founded TEXT,\n  Type TEXT,\n  Enrollment INTEGER,\n  Team TEXT,\n  Primary_Conference TEXT,\n  building_id TEXT,\n  FOREIGN KEY (building_id) REFERENCES building (building_id)\n);\n\nCREATE TABLE protein (\n  common_name TEXT,\n  protein_name TEXT,\n  divergence_from_human_lineage TEXT,\n  accession_number TEXT,\n  sequence_length INTEGER,\n  sequence_identity_to_human_protein TEXT,\n  Institution_id INTEGER,\n  FOREIGN KEY (Institution_id) REFERENCES Institution (Institution_id)\n);\n"
    },
    {
        "db_id": "school_player",
        "schema": "CREATE TABLE school (\n  School_ID INTEGER PRIMARY KEY,\n  School TEXT,\n  Location TEXT,\n  Enrollment TEXT,\n  Founded INTEGER,\n  Denomination TEXT,\n  Boys_or_Girls TEXT,\n  Day_or_Boarding TEXT,\n  Year_Entered_Competition INTEGER,\n  School_Colors TEXT\n);\n\nCREATE TABLE school_details (\n  School_ID INTEGER,\n  Nickname TEXT,\n  Colors TEXT,\n  League TEXT,\n  Class TEXT,\n  Division TEXT,\n  FOREIGN KEY (School_ID) REFERENCES school (School_ID)\n);\n\nCREATE TABLE school_performance (\n  School_Id INTEGER,\n  School_Year INTEGER,\n  Class_A INTEGER,\n  Class_AA INTEGER,\n  FOREIGN KEY (School_Id) REFERENCES school (School_ID)\n);\n\nCREATE TABLE player (\n  Player_ID INTEGER PRIMARY KEY,\n  Player TEXT,\n  Team TEXT,\n  Age INTEGER,\n  Position TEXT,\n  School_ID INTEGER,\n  FOREIGN KEY (School_ID) REFERENCES school (School_ID)\n);\n"
    },
    {
        "db_id": "phone_1",
        "schema": "CREATE TABLE chip_model (\n  Model_name TEXT PRIMARY KEY,\n  Launch_year TEXT,\n RAM_MiB INTEGER,\n  ROM_MiB INTEGER,\n  Slots INTEGER,\n  WiFi TEXT,\n  Bluetooth TEXT\n);\n\nCREATE TABLE screen_mode (\n  Graphics_mode TEXT PRIMARY KEY,\n  Char_cells INTEGER,\n  Pixels INTEGER,\n  Hardware_colours INTEGER,\n  used_kb INTEGER,\n  map TEXT,\n  Type TEXT\n);\n\nCREATE TABLE phone (\n  Company_name TEXT,\n  Hardware_Model_name TEXT,\n  Accreditation_type TEXT,\n  Accreditation_level TEXT,\n  Date TEXT,\n  chip_model TEXT,\n  screen_mode TEXT,\n  FOREIGN KEY (chip_model) REFERENCES chip_model (Model_name),\n  FOREIGN KEY (screen_mode) REFERENCES screen_mode (Graphics_mode)\n);\n"
    },
    {
        "db_id": "tvshow",
        "schema": "CREATE TABLE TV_Channel (\n  id TEXT PRIMARY KEY,\n  series_name TEXT,\n  Country TEXT,\n  Language TEXT,\n  Content TEXT,\n  Pixel_aspect_ratio_PAR TEXT,\n  Hight_definition_TV TEXT,\n  Pay_per_view_PPV TEXT,\n  Package_Option TEXT\n);\n\nCREATE TABLE TV_series (\n  id INTEGER PRIMARY KEY,\n  Episode TEXT,\n  Air_Date TEXT,\n  Rating TEXT,\n  Share TEXT,\n  18_49_Rating_Share TEXT,\n  Viewers_m INTEGER,\n  Weekly_Rank INTEGER,\n  Channel TEXT,\n  FOREIGN KEY (id) REFERENCES TV_Channel (id)\n);\n\nCREATE TABLE Cartoon (\n  id INTEGER PRIMARY KEY,\n  Title TEXT,\n  Directed_by TEXT,\n  Written_by TEXT,\n  Original_air_date TEXT,\n  Production_code TEXT,\n  Channel TEXT,\n  FOREIGN KEY (id) REFERENCES TV_Channel (id)\n);\n"
    },
    {
        "db_id": "wrestler",
        "schema": "CREATE TABLE wrestler (\n  Wrestler_ID TEXT PRIMARY KEY,\n  Name TEXT,\n  Reign TEXT,\n  Days_held TEXT,\n  Location TEXT,\n  Event TEXT\n);\n\nCREATE TABLE Elimination (\n  Elimination_ID TEXT PRIMARY KEY,\n  Wrestler_ID TEXT,\n  Team TEXT,\n  Eliminated_By TEXT,\n  Elimination_Move TEXT,\n  Time TEXT,\n  FOREIGN KEY (Wrestler_ID) REFERENCES wrestler (Wrestler_ID)\n);\n"
    },
    {
        "db_id": "customer_complaints",
        "schema": "CREATE TABLE Staff (\n  staff_id TEXT PRIMARY KEY,\n  gender INTEGER,\n  first_name TEXT,\n  last_name TEXT,\n  email_address TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE Customers (\n  customer_id TEXT PRIMARY KEY,\n  customer_type_code TEXT,\n  address_line_1 TEXT,\n  address_line_2 TEXT,\n  town_city TEXT,\n  state TEXT,\n  email_address TEXT,\n  phone_number TEXT\n);\n\nCREATE TABLE Products (\n  product_id TEXT PRIMARY KEY,\n  parent_product_id TEXT,\n  product_category_code TEXT,\n  date_product_first_available TEXT,\n  date_product_discontinued TEXT,\n  product_name TEXT,\n  product_description TEXT,\n  product_price INTEGER\n);\n\nCREATE TABLE Complaints (\n  complaint_id INTEGER PRIMARY KEY,\n  product_id TEXT,\n  customer_id TEXT,\n  complaint_outcome_code TEXT,\n  complaint_status_code TEXT,\n  complaint_type_code TEXT,\n  date_complaint_raised TEXT,\n  date_complaint_closed TEXT,\n  staff_id TEXT,\n  FOREIGN KEY (product_id) REFERENCES Products (product_id),\n  FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),\n  FOREIGN KEY (staff_id) REFERENCES Staff (staff_id)\n);\n"
    },
    {
        "db_id": "department_management",
        "schema": "CREATE TABLE department (\n  Department_ID TEXT PRIMARY KEY,\n  Name TEXT,\n  Creation TEXT,\n  Ranking TEXT,\n  Budget_in_Billions REAL,\n  Num_Employees INTEGER\n);\n\nCREATE TABLE head (\n  head_ID INTEGER PRIMARY KEY,\n  name TEXT,\n  born_state TEXT,\n  age INTEGER\n);\n\nCREATE TABLE management (\n  department_ID TEXT,\n  head_ID INTEGER,\n  temporary_acting TEXT,\n  FOREIGN KEY (department_ID) REFERENCES department (Department_ID),\n  FOREIGN KEY (head_ID) REFERENCES head (head_ID)\n);\n"
    },
    {
        "db_id": "customers_and_products_contacts",
        "schema": "CREATE TABLE Addresses (\n  address_id TEXT PRIMARY KEY,\n  line_1_number_building TEXT,\n  city TEXT,\n  zip_postcode TEXT,\n  state_province_county TEXT,\n  country TEXT\n);\n\nCREATE TABLE Products (\n  product_id TEXT PRIMARY KEY,\n  product_type_code TEXT,\n  product_name TEXT,\n  product_price INTEGER\n);\n\nCREATE TABLE Customers (\n  customer_id TEXT PRIMARY KEY,\n  payment_method_code TEXT,\n  customer_number TEXT,\n  customer_name TEXT,\n  customer_address TEXT,\n  customer_phone TEXT,\n  customer_email TEXT\n);\n\nCREATE TABLE Contacts (\n  contact_id INTEGER PRIMARY KEY,\n  customer_id TEXT,\n  gender TEXT,\n  first_name TEXT,\n  last_name TEXT,\n  contact_phone TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\n\nCREATE TABLE Customer_Address_History (\n  customer_id TEXT,\n  address_id TEXT,\n  date_from TEXT,\n  date_to TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),\n  FOREIGN KEY (address_id) REFERENCES Addresses (address_id)\n);\n\nCREATE TABLE Customer_Orders (\n  order_id TEXT PRIMARY KEY,\n  customer_id TEXT,\n  order_date TEXT,\n  order_status_code TEXT,\n  FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)\n);\n\nCREATE TABLE Order_Items (\n  order_item_id INTEGER PRIMARY KEY,\n  order_id TEXT,\n  product_id TEXT,\n  order_quantity INTEGER,\n  FOREIGN KEY (order_id) REFERENCES Customer_Orders (order_id),\n  FOREIGN KEY (product_id) REFERENCES Products (product_id)\n);\n"
    },
    {
        "db_id": "company_1",
        "schema": "CREATE TABLE works_on (\n  Essn TEXT,\n  Pno INTEGER,\n  Hours INTEGER,\n  FOREIGN KEY (Essn) REFERENCES employee (Ssn),\n  FOREIGN KEY (Pno) REFERENCES project (Pno)\n);\n\nCREATE TABLE employee (\n  Ssn TEXT PRIMARY KEY,\n  Fname TEXT,\n  Minit TEXT,\n  Lname TEXT,\n  Bdate TEXT,\n  Address TEXT,\n  Sex TEXT,\n  Salary REAL,\n  Super_ssn TEXT,\n  Dno INTEGER,\n  FOREIGN KEY (Super_ssn) REFERENCES employee (Ssn),\n  FOREIGN KEY (Dno) REFERENCES department (Dnumber)\n);\n\nCREATE TABLE department (\n  Dnumber INTEGER PRIMARY KEY,\n  Dname TEXT,\n  Mgr_ssn TEXT,\n  Mgr_start_date TEXT,\n  FOREIGN KEY (Mgr_ssn) REFERENCES employee (Ssn)\n);\n\nCREATE TABLE project (\n  Pno INTEGER PRIMARY KEY,\n  Pname TEXT,\n  Plocation TEXT,\n  Dnum INTEGER,\n  FOREIGN KEY (Dnum) REFERENCES department (Dnumber)\n);\n\nCREATE TABLE dependent (\n  Pname TEXT,\n  Pnumber INTEGER PRIMARY KEY,\n  Plocation TEXT,\n  Dnum INTEGER,\n  FOREIGN KEY (Dnum) REFERENCES department (Dnumber)\n);\n\nCREATE TABLE dept_locations (\n  Dnumber INTEGER,\n  Dlocation TEXT,\n  FOREIGN KEY (Dnumber) REFERENCES department (Dnumber)\n);\n"
    },
    {
        "db_id": "workshop_paper",
        "schema": "CREATE TABLE workshop (\n  Workshop_ID TEXT PRIMARY KEY,\n  Date INTEGER,\n  Venue TEXT,\n  Name TEXT\n);\n\nCREATE TABLE submission (\n  Submission_ID INTEGER PRIMARY KEY,\n  Scores INTEGER,\n  Author TEXT,\n  College TEXT\n);\n\nCREATE TABLE Acceptance (\n  Submission_ID INTEGER,\n  Workshop_ID TEXT,\n  Result TEXT,\n  FOREIGN KEY (Submission_ID) REFERENCES submission (Submission_ID),\n  FOREIGN KEY (Workshop_ID) REFERENCES workshop (Workshop_ID)\n);\n"
    },
    {
        "db_id": "epinions_1",
        "schema": "CREATE TABLE item (\n  i_id TEXT PRIMARY KEY,\n  title TEXT\n);\n\nCREATE TABLE review (\n  a_id INTEGER,\n  u_id INTEGER,\n  i_id TEXT,\n  rating INTEGER,\n  rank INTEGER,\n  FOREIGN KEY (i_id) REFERENCES item (i_id),\n  FOREIGN KEY (u_id) REFERENCES useracct (u_id)\n);\n\nCREATE TABLE useracct (\n  u_id INTEGER PRIMARY KEY,\n  name TEXT\n);\n\nCREATE TABLE trust (\nsource_u_id INTEGER,\n  target_u_id INTEGER,\n  trust REAL,\n  FOREIGN KEY (source_u_id) REFERENCES useracct (u_id),\n  FOREIGN KEY (target_u_id) REFERENCES useracct (u_id)\n);\n"
    },
    {
        "db_id": "party_host",
        "schema": "CREATE TABLE party (\n  Party_ID INTEGER PRIMARY KEY,\n  Party_Theme TEXT,\n  Location TEXT,\n  First_year INTEGER,\n  Last_year INTEGER,\n  Number_of_hosts INTEGER\n);\n\nCREATE TABLE host (\n  Host_ID INTEGER PRIMARY KEY,\n  Name TEXT,\n  Nationality TEXT,\n  Age INTEGER\n);\n\nCREATE TABLE party_host (\n  Party_ID INTEGER,\n  Host_ID INTEGER,\n  Is_Main_in_Charge BOOLEAN,\n  FOREIGN KEY (Party_ID) REFERENCES party (Party_ID),\n  FOREIGN KEY (Host_ID) REFERENCES host (Host_ID)\n);\n"
    },
    {
        "db_id": "product_catalog",
        "schema": "CREATE TABLE Attribute_Definitions (\n  attribute_id TEXT PRIMARY KEY,\n  attribute_name TEXT,\n  attribute_data_type TEXT\n);\n\nCREATE TABLE Catalogs (\n  catalog_id TEXT PRIMARY KEY,\n  catalog_name TEXT,\n  catalog_publisher TEXT,\n  date_of_publication TEXT,\n  date_of_latest_revision TEXT\n);\n\nCREATE TABLE Catalog_Structure (\n  catalog_level_number INTEGER,\n  catalog_id TEXT,\n  catalog_level_name TEXT,\n  FOREIGN KEY (catalog_id) REFERENCES Catalogs (catalog_id)\n);\n\nCREATE TABLE Catalog_Contents (\n  catalog_entry_id INTEGER PRIMARY KEY,\n  catalog_level_number INTEGER,\n  parent_entry_id INTEGER,\n  previous_entry_id INTEGER,\n  next_entry_id INTEGER,\n  catalog_entry_name TEXT,\n  product_stock_number TEXT,\n  price_in_dollars REAL,\n  price_in_euros REAL,\n  price_in_pounds REAL,\n  capacity REAL,\n  length REAL,\n  height REAL,\n  width REAL,\n  FOREIGN KEY (catalog_level_number) REFERENCES Catalog_Structure (catalog_level_number)\n);\n\nCREATE TABLE Catalog_Contents_Additional_Attributes (\n  catalog_entry_id INTEGER,\n  catalog_level_number INTEGER,\n  attribute_id TEXT,\n  attribute_value TEXT,\n  FOREIGN KEY (catalog_entry_id) REFERENCES Catalog_Contents (catalog_entry_id),\n  FOREIGN KEY (catalog_level_number) REFERENCES Catalog_Structure (catalog_level_number),\n  FOREIGN KEY (attribute_id) REFERENCES Attribute_Definitions (attribute_id)\n);\n"
    }
]
